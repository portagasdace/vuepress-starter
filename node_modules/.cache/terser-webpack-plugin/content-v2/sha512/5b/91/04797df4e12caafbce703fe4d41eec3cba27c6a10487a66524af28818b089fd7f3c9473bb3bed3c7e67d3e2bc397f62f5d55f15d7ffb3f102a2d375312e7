{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[330],{683:function(n,e,t){\"use strict\";t.r(e);var a=t(42),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"彩蛋一-cd-界面更新-增加倍速播放功能\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#彩蛋一-cd-界面更新-增加倍速播放功能\"}},[n._v(\"#\")]),n._v(\" 彩蛋一: CD 界面更新 && 增加倍速播放功能\")]),n._v(\" \"),t(\"p\",[n._v(\"最近抽空将播放器的界面做了一些更新，如图所示:\")]),n._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/10/26/16e080ce8d8611b3?w=367&h=660&f=gif&s=1541197\",alt:\"\"}})]),n._v(\" \"),t(\"p\",[n._v(\"一共分两路更新:\")]),n._v(\" \"),t(\"ol\",[t(\"li\",[n._v(\"CD 界面重构\")]),n._v(\" \"),t(\"li\",[n._v(\"增加倍速播放，歌词解析插件升级\")])]),n._v(\" \"),t(\"h2\",{attrs:{id:\"cd-界面重构\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cd-界面重构\"}},[n._v(\"#\")]),n._v(\" CD 界面重构\")]),n._v(\" \"),t(\"p\",[n._v(\"进入到 normal-player/index.js 中，将 CDWrapper 中的内容换成如下所示的代码:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"// 可旋转 needle\\n<div className={`needle ${playing? '' : 'pause'}`}></div>\\n<div className=\\\"cd\\\">\\n  <img\\n    className={`image play ${playing? '' : 'pause'}`}\\n    src={song.al.picUrl + \\\"?param=400x400\\\"}\\n    alt=\\\"\\\"\\n  />\\n</div>\\n<p className=\\\"playing_lyric\\\">{currentPlayingLyric}</p>\\n\\n\")])])]),t(\"p\",[n._v(\"在 style.js 中:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"import disc from './disc.png';\\nimport needle from './needle.png';\\n\\nexport const CDWrapper = styled.div`\\n  margin: auto;\\n  position: absolute;\\n  width: 100%;\\n  top: 0;\\n  bottom: 0;\\n  display: flex;\\n  justify-content: center;\\n  box-sizing: border-box;\\n  .needle {\\n    position: absolute;\\n    top: -6.67vw;\\n    left: 48vw;\\n    width: 25vw;\\n    height: 40vw;\\n    z-index: 100;\\n    background-image: url (${needle});\\n    ${style.bgFull ()};\\n    transform-origin: 4.5vw 4.5vw;\\n    transition: all 0.3s;\\n    transform: rotate (0);\\n    &.pause {\\n      transform: rotate (-30deg);\\n    }\\n  }\\n  .cd {\\n    top: 16%;\\n    position: absolute;\\n    width: 70%;\\n    height: 70vw;\\n    background-image: url (${disc});\\n    border: 4px solid ${style [\\\"border-color-v2\\\"]};\\n    border-radius: 50%;\\n    ${style.bgFull ()};\\n    .image {\\n      position: absolute;\\n      left: 0;right: 0;\\n      top: 0;bottom: 0;\\n      width: 68%;\\n      height: 68%;\\n      margin: auto;\\n      border-radius: 50%;\\n    }\\n    .play {\\n      animation: ${rotate} 20s linear infinite;\\n      &.pause {\\n        animation-play-state: paused;\\n      }\\n    }\\n  }\\n  .playing_lyric {\\n    position: absolute;\\n    margin: auto;\\n    width: 80%;\\n    top: 95vw;\\n    font-size: 14px;\\n    line-height: 20px;\\n    white-space: normal;\\n    text-align: center;\\n    color: rgba (255, 255, 255, 0.5);\\n  }\\n`;\\n\\n\")])])]),t(\"p\",[n._v(\"needle 和 disc 图片大家可以进入这个链接获取: \"),t(\"a\",{attrs:{href:\"https://github.com/sanyuan0704/react-cloud-music/tree/master/src/application/Player/normal-player\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"点击获取\"),t(\"OutboundLink\")],1)]),n._v(\" \"),t(\"p\",[n._v(\"另外，global-style.js 中的内容也有所更新:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v('const bgFull = () => {\\n  return `\\n    background-position: 50%;\\n    background-size: contain;\\n    background-repeat: no-repeat;\\n  `\\n};\\n\\nexport default {\\n  //...\\n  \"border-color-v2\": \"rgba (228, 228, 228, 0.1)\",\\n  bgFull\\n};\\n\\n')])])]),t(\"p\",[n._v(\"另一部分是 Top 部分的更新。\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v('// JSX\\n<Top className=\"top\">\\n  <div className=\"back\" onClick={() => toggleFullScreenDispatch (false)}>\\n    <i className=\"iconfont icon-back\">&#xe662;</i>\\n  </div>\\n  <div className=\"text\">\\n    <h1 className=\"title\">{song.name}</h1>\\n    <h1 className=\"subtitle\">{getName (song.ar)}</h1>\\n  </div>\\n</Top>\\n\\n//style.js\\nexport const Top = styled.div`\\n  box-sizing: border-box;\\n  position: absolute;\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 15px;\\n  border-bottom: 1px solid ${style [\"border-color-v2\"]};\\n  padding-bottom: 5px;\\n  width: 100%;\\n  height: 8%;\\n  .back {\\n    margin-left: 5px;\\n    z-index: 50;\\n    .iconfont {\\n      display: block;\\n      padding: 9px;\\n      font-size: 24px;\\n      color: ${style [\"font-color-desc\"]};\\n      font-weight: bold;\\n      transform: rotate (90deg);\\n    }\\n  }\\n  .text {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 10px;\\n  }\\n  .title {\\n    line-height: 25px;\\n    font-size: ${style [\"font-size-l\"]};\\n    color: ${style [\"font-color-desc\"]};\\n    ${style.noWrap ()};\\n  }\\n  .subtitle {\\n    line-height: 20px;\\n    font-size: ${style [\"font-size-m\"]};\\n    color: ${style [\"font-color-desc-v2\"]};\\n    ${style.noWrap ()};\\n  }\\n`;\\n\\n')])])]),t(\"p\",[n._v(\"现在，就能看到文章开始的那个效果啦！\")]),n._v(\" \"),t(\"h2\",{attrs:{id:\"倍速播放功能添加\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#倍速播放功能添加\"}},[n._v(\"#\")]),n._v(\" 倍速播放功能添加\")]),n._v(\" \"),t(\"p\",[n._v(\"首先需要作好数据层的准备。因为目前来说我们希望歌曲播放的速度是一个全局性的变量，即使更换了歌曲依然按照速度不会变。因此特意把它放到了 redux 中存储。\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"//constants.js\\nexport const CHANGE_SPEED = 'player/CHANGE_SPEED';\\n\\n//reducer.js\\nconst defaultState = fromJS ({\\n  //...\\n  speed: 1\\n});\\nexport default (state = defaultState, action) => {\\n  switch (action.type) {\\n    //...\\n    case actionTypes.CHANGE_SPEED:\\n      return state.set ('speed', action.data);\\n    default:\\n      return state;\\n  }\\n}\\n\\n//actionCreators.js\\nexport const changeSpeed = (data) => ({\\n  type: CHANGE_SPEED,\\n  data\\n});\\n\\n\")])])]),t(\"p\",[n._v(\"还有对于播放速度的配置数据:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v('//api/config.js\\n// 倍速播放配置\\nexport const list = [\\n  {\\n    key: 0.75,\\n    name: \"x0.75\"\\n  },\\n  {\\n    key: 1,\\n    name:\"x1\"\\n  }, \\n  {\\n    key: 1.25,\\n    name:\"x1.25\"\\n  }, \\n  {\\n    key: 1.5,\\n    name:\"x1.5\"\\n  }, \\n  {\\n    key: 2,\\n    name:\"x2\"\\n  }\\n]\\n\\n')])])]),t(\"p\",[n._v(\"OK, 现在我们来对接 Player 组件。\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v('import { changeSpeed } from \\'./store/actionCreators\\';\\nimport { list } from \"../../../api/config\";\\n\\n// 组件内\\nconst { speed } = props;\\nconst { changeSpeedDispatch } = props;\\n// 映射 Redux 全局的 state 到组件的 props 上\\nconst mapStateToProps = state => ({\\n  //...\\n  speed: state.getIn ([\"player\", \"speed\"]),\\n});\\n\\n// 映射 dispatch 到 props 上\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    //...\\n    changeSpeedDispatch (data) {\\n      dispatch (changeSpeed (data));\\n    }\\n  };\\n}\\n\\n')])])]),t(\"p\",[n._v(\"在 normalPlayer 中的 Bottom 部分我们往首部加入:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"<List>\\n  <span > 倍速听歌 </span>\\n  {\\n    list.map ((item) => {\\n      return (\\n        <ListItem \\n          key={item.key}\\n          className={`${speed === item.key ? 'selected': ''}`} >\\n            {item.name}\\n        </ListItem>\\n      )\\n    })\\n  }\\n</List>\\n\\n\")])])]),t(\"p\",[n._v(\"其中 List, ListItem 在 style.js 中导出:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v('export const List = styled.div`\\n  width: 70%;\\n  margin: auto;\\n  display: flex;\\n  align-items: center;\\n  height: 30px;\\n  justify-content: space-around;\\n  overflow: hidden;\\n  >span:first-of-type {\\n    display: block;\\n    flex: 0 0 auto;\\n    padding: 5px 0;\\n    color: ${style [\"font-color-desc-v2\"]};\\n    font-size: ${style [\"font-size-m\"]};\\n    vertical-align: middle;\\n  }\\n`\\nexport const ListItem = styled.span`\\n  flex: 0 0 auto;\\n  font-size: ${style [\"font-size-m\"]};\\n  padding: 5px 5px;\\n  border-radius: 10px;\\n  color: ${style [\"font-color-desc-v2\"]};\\n  &.selected {\\n    color: ${style [\"theme-color\"]};\\n    border: 1px solid ${style [\"theme-color\"]};\\n    opacity: 0.8;\\n  }\\n`\\n\\n')])])]),t(\"p\",[n._v(\"然后引入:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"import { List, ListItem } from './style';\\n\\n\")])])]),t(\"p\",[n._v(\"现在我们来给每一个 ListItem 绑定点击事件。\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"const { clickSpeed } = props;\\n//JSX\\n<ListItem \\n  //...\\n  onClick={() => clickSpeed (item.key)}>\\n    {item.name}\\n</ListItem>\\n\\n\")])])]),t(\"p\",[n._v(\"这个处理逻辑由父组件传递，我们在父组件来编写具体的逻辑。\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"useEffect (() => {\\n  //...\\n  audioRef.current.src = getSongUrl (current.id);\\n  audioRef.current.autoplay = true;\\n  // 这里加上对播放速度的控制\\n  audioRef.current.playbackRate = speed;\\n  //...\\n}, [currentIndex, playList]);\\nconst clickSpeed = (newSpeed) => {\\n  changeSpeedDispatch (newSpeed);\\n  //playbackRate 为歌词播放的速度，可修改\\n  audioRef.current.playbackRate = newSpeed;\\n  // 别忘了同步歌词\\n  currentLyric.current.changeSpeed (newSpeed);\\n  currentLyric.current.seek (currentTime*1000);\\n}\\n\\n\")])])]),t(\"p\",[n._v(\"好，现在歌曲可以正常播放了。但是同时还有一个非常严重的问题，那就是歌词不能倍速播放，也就是歌曲和歌词不同步！\")]),n._v(\" \"),t(\"p\",[n._v(\"看似是一个难以解决的问题，但是我们只需要稍稍对歌词插件做一些扩展即可：\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"//api/lyric-parser.js\\nexport default class Lyric {\\n  constructor (lrc, handler, speed) {\\n    //...\\n    this.speed = speed || 1;\\n    \\n    this._init ();\\n  }\\n  changeSpeed (speed) {\\n    this.speed = speed;\\n  }\\n}\\n\\n\")])])]),t(\"p\",[n._v(\"然后是一个最关键的修改:\")]),n._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[n._v(\"_playRest (isSeek=false) {\\n  //...\\n  this.timer = setTimeout (() => {\\n    this._callHandler (this.curLineIndex++)\\n    if (this.curLineIndex < this.lines.length && this.state === STATE_PLAYING) {\\n      this._playRest ()\\n    }\\n    // 注意定时器的时间\\n  }, (delay /this.speed))\\n}\\n\\n\")])])]),t(\"p\",[n._v(\"当速度变为 x2 的时候，其实离下一句歌词到来的时间间隔变为了原来的 1 / 2。依此类推。\")]),n._v(\" \"),t(\"p\",[n._v(\"这样歌词能够正常倍速播放了。\")]),n._v(\" \"),t(\"p\",[n._v(\"现在的歌词插件可以说是一个相对完整的插件了，我们也可以将它发布到 npm 上作为第三方包供其他开发者使用。做法也非常简单：\")]),n._v(\" \"),t(\"ol\",[t(\"li\",[n._v(\"在 www.npmjs.com 网站上注册一个用户\")]),n._v(\" \"),t(\"li\",[n._v(\"通过 npm init 创建一个仓库\")]),n._v(\" \"),t(\"li\",[n._v(\"通过 npm adduser 登录你的 npm 账户\")]),n._v(\" \"),t(\"li\",[n._v(\"使用 npm publish 发布你的代码。(上传后第三方包的名字就是 package.json 中的 name 值)\")])]),n._v(\" \"),t(\"p\",[n._v(\"结果如图所示:\")]),n._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/10/26/16e080ca6b6c1c07?w=548&h=256&f=jpeg&s=37955\",alt:\"\"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}
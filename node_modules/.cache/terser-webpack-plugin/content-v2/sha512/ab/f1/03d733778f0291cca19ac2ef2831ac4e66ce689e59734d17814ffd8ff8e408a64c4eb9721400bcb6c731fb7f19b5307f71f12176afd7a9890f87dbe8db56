{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{665:function(t,a,e){\"use strict\";e.r(a);var n=e(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"blockquote\",[e(\"p\",[t._v(\"本节代码对应 GitHub 分支: chapter6\")])]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/sanyuan0704/react-cloud-music/tree/chapter6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"仓库传送门\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"axios-请求准备\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#axios-请求准备\"}},[t._v(\"#\")]),t._v(\" axios 请求准备\")]),t._v(\" \"),e(\"p\",[t._v(\"在 api/request.js 中加入:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"export const getAlbumDetailRequest = id => {\\n  return axiosInstance.get (`/playlist/detail?id=${id}`);\\n};\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"redux-层开发\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redux-层开发\"}},[t._v(\"#\")]),t._v(\" redux 层开发\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_1-声明初始化-state\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-声明初始化-state\"}},[t._v(\"#\")]),t._v(\" 1. 声明初始化 state\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//reducer.js\\nimport * as actionTypes from './constants';\\nimport { fromJS } from 'immutable';\\n\\nconst defaultState = fromJS ({\\n  currentAlbum: {},\\n  enterLoading: false,\\n})\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_2-定义-constants\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-定义-constants\"}},[t._v(\"#\")]),t._v(\" 2. 定义 constants\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//constants.js\\nexport const CHANGE_CURRENT_ALBUM = 'album/CHANGE_CURRENT_ALBUM';\\nexport const CHANGE_ENTER_LOADING = 'album/CHANGE_ENTER_LOADING';\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_3-定义-reducer-函数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-定义-reducer-函数\"}},[t._v(\"#\")]),t._v(\" 3. 定义 reducer 函数\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//reducer.js\\nexport default (state = defaultState, action) => {\\n  switch (action.type) {\\n    case actionTypes.CHANGE_CURRENT_ALBUM:\\n      return state.set ('currentAlbum', action.data);\\n    case actionTypes.CHANGE_ENTER_LOADING:\\n      return state.set ('enterLoading', action.data);\\n    default:\\n      return state;\\n  }\\n};\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_4-编写具体的-action\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-编写具体的-action\"}},[t._v(\"#\")]),t._v(\" 4. 编写具体的 action\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//actionCreators.js\\nimport { CHANGE_CURRENT_ALBUM, CHANGE_ENTER_LOADING } from './constants';\\nimport { getAlbumDetailRequest } from '../../../api/request';\\nimport { fromJS } from 'immutable';\\n\\nconst changeCurrentAlbum = (data) => ({\\n  type: CHANGE_CURRENT_ALBUM,\\n  data: fromJS (data)\\n});\\n\\nexport const changeEnterLoading = (data) => ({\\n  type: CHANGE_ENTER_LOADING,\\n  data\\n});\\n\\nexport const getAlbumList = (id) => {\\n  return dispatch => {\\n    getAlbumDetailRequest (id).then (res => {\\n      let data = res.playlist;\\n      dispatch (changeCurrentAlbum (data));\\n      dispatch (changeEnterLoading (false));\\n    }).catch (() => {\\n      console.log (\\\"获取 album 数据失败！\\\")\\n    });\\n  }\\n};\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_5-将相关变量导出\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-将相关变量导出\"}},[t._v(\"#\")]),t._v(\" 5. 将相关变量导出\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//index.js\\nimport reducer from './reducer'\\nimport * as actionCreators from './actionCreators'\\n\\nexport { reducer, actionCreators };\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"组件连接-redux\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件连接-redux\"}},[t._v(\"#\")]),t._v(\" 组件连接 Redux\")]),t._v(\" \"),e(\"p\",[t._v(\"首先，需要将 Album 下的 reducer 注册到全局 store，在 src 目录下的 store/reducer.js 中，内容如下:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import { combineReducers } from 'redux-immutable';\\nimport { reducer as recommendReducer } from '../application/Recommend/store/index';\\nimport { reducer as singersReducer } from '../application/Singers/store/index';\\nimport { reducer as rankReducer } from '../application/Rank/store/index';\\nimport { reducer as albumReducer } from '../application/Album/store/index';\\n\\nexport default combineReducers ({\\n  recommend: recommendReducer,\\n  singers: singersReducer ,\\n  rank: rankReducer,\\n  album: albumReducer\\n});\\n\\n\")])])]),e(\"p\",[t._v(\"现在在 Album/index.js 中，准备连接 Redux。 增加代码:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import { connect } from 'react-redux';\\n\\n// 组件代码\\n\\n// 映射 Redux 全局的 state 到组件的 props 上\\nconst mapStateToProps = (state) => ({\\n  currentAlbum: state.getIn (['album', 'currentAlbum']),\\n  enterLoading: state.getIn (['album', 'enterLoading']),\\n});\\n// 映射 dispatch 到 props 上\\nconst mapDispatchToProps = (dispatch) => {\\n  return {\\n    getAlbumDataDispatch (id) {\\n      dispatch (changeEnterLoading (true));\\n      dispatch (getAlbumList (id));\\n    },\\n  }\\n};\\n\\n// 将 ui 组件包装成容器组件\\nexport default connect (mapStateToProps, mapDispatchToProps)(React.memo (Album));\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"组件对接真实数据\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件对接真实数据\"}},[t._v(\"#\")]),t._v(\" 组件对接真实数据\")]),t._v(\" \"),e(\"p\",[t._v(\"在组件代码中，\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import React, {useState, useCallback, useRef, useEffect} from 'react';\\nimport { getAlbumList, changeEnterLoading } from './store/actionCreators';\\n\\n// 从路由中拿到歌单的 id\\nconst id = props.match.params.id;\\n\\nconst { currentAlbum:currentAlbumImmutable, enterLoading } = props;\\nconst { getAlbumDataDispatch } = props;\\n\\nuseEffect (() => {\\n  getAlbumDataDispatch (id);\\n}, [getAlbumDataDispatch, id]);\\n\\n// 同时将 mock 数据的代码删除\\nlet currentAlbum = currentAlbumImmutable.toJS ();\\n\\n\")])])]),e(\"p\",[t._v(\"但是如果你现在进入页面，会报一个错误: cannot read avatarUrl of undefined\")]),t._v(\" \"),e(\"p\",[t._v(\"这是为什么呢？\")]),t._v(\" \"),e(\"p\",[t._v(\"当页面进入 Ajax 请求还没有获取数据时，currentAlbum 的值为初始态 {}。直到数据异步加载完成，currentAlbum 才会改变，那么在这个过程中，通过 currentAlbum.creator 为 undefined，通过 current.creator.avatarUrl 取值自然会报错。这样的问题在日常开发中非常常见，那怎么避免这个问题？\")]),t._v(\" \"),e(\"p\",[t._v(\"我们需要在渲染前做一个非空对象的判断。\")]),t._v(\" \"),e(\"p\",[t._v(\"首先在 api/utils 中写一个工具函数：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"// 判断一个对象是否为空\\nexport const isEmptyObject = obj => !obj || Object.keys (obj).length === 0;\\n\\n\")])])]),e(\"p\",[t._v(\"然后自行导入到 Album 组件中。\")]),t._v(\" \"),e(\"p\",[t._v(\"组件中修改如下:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"{\\n  !isEmptyObject (currentAlbum) ? (\\n    <Scroll \\n      onScroll={handleScroll} \\n      bounceTop={false}\\n    >\\n    // 省略内部代码\\n    </Scroll>\\n  ) : null\\n}\\n\\n\")])])]),e(\"p\",[t._v(\"这样页面就能正常显示啦。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"进场-loaing-动画添加\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进场-loaing-动画添加\"}},[t._v(\"#\")]),t._v(\" 进场 Loaing 动画添加\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import Loading from '../../baseUI/loading/index';\\n\\n// 在 Container 样式组件中添加\\n{ enterLoading ? <Loading></Loading> : null}\\n\\n\")])])]),e(\"p\",[t._v(\"到此为止，UI 和数据已经打通了，接下来我们来做一些优化。\")])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}
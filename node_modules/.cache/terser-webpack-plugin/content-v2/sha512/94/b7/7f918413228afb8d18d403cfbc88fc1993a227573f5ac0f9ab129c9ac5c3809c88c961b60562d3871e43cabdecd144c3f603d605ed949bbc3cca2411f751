{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[447],{801:function(e,t,n){\"use strict\";n.r(t);var a=n(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"基础篇-2-小程序·云开发基础知识\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基础篇-2-小程序·云开发基础知识\"}},[e._v(\"#\")]),e._v(\" 基础篇 2：小程序·云开发基础知识\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[n(\"strong\",[n(\"a\",{attrs:{href:\"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"小程序·云开发\"),n(\"OutboundLink\")],1)]),e._v(\" 是微信团队联合腾讯云团队推出的一套小程序开发解决方案。小程序·云开发为开发者提供完整的云端流程，弱化后端和运维概念，开发者无需购买和管理底层计算资源，包括服务器、数据库、静态存储，只需使用平台提供的简易 API 进行核心业务等开发，实现快速上线和迭代，把握业务发展的黄金时期。\")])]),e._v(\" \"),n(\"p\",[e._v(\"简单来说，小程序开发中用到的服务器、数据库和静态资源管理，都可以托管到「小程序·云开发」上，小程序开发者只需要关注业务功能实现，而不需要关心服务器运维等带来的问题。小程序开发主要用到的是前端技术，后端开发和服务运维对于前端开发者来说有一定的门槛，而小程序·云开发的出现就是解决这个问题的。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"小程序·云开发特点\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序·云开发特点\"}},[e._v(\"#\")]),e._v(\" 小程序·云开发特点\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"提供完整后端服务解决方案，包括数据库、静态资源管理和云函数（功能服务）\")]),e._v(\" \"),n(\"li\",[e._v(\"背靠腾讯云大平台，腾讯云丰富的 API 和功能都可以简单调用\")]),e._v(\" \"),n(\"li\",[e._v(\"对于普通开发者，\"),n(\"strong\",[e._v(\"完全免费\")])]),e._v(\" \"),n(\"li\",[e._v(\"对于高级服务型小程序，提供更强服务支持、计费弹性、不使用不计费的特点\")]),e._v(\" \"),n(\"li\",[e._v(\"无服务器搭建，无域名配置，直接调用 API 使用\")])]),e._v(\" \"),n(\"p\",[e._v(\"对于我们普通开发者来说，小程序·云开发是个不错的练手平台。下面详细介绍下小程序·云开发提供的功能。\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序·云开发提供数据库、云函数和静态存储三大功能，还有小程序的用户管理功能，在用户管理界面可以轻松掌握小程序的授权用户情况。目前云开发的这些功能已经深度整合到「微信开发者工具 Beta 版」中，可以在顶部点击「云开发」进入。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531333a4586d62?w=1200&h=877&f=png&s=90409\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"首页会看到一些 API 调用和小程序·云开发的资源配置信息。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"申请小程序·云开发\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#申请小程序·云开发\"}},[e._v(\"#\")]),e._v(\" 申请小程序·云开发\")]),e._v(\" \"),n(\"p\",[e._v(\"如果还没有开通小程序·云开发账号，首次点击「云开发」会出现下面的界面，该界面主要是云开发的介绍和申请入口。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/27/165796be943b5c8b?w=1199&h=787&f=png&s=216045\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"点击蓝色的「创建资源环境」按钮进入新建环境界面。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/27/1657975df8ed1d6e?w=1200&h=786&f=png&s=76893\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"第二步出现选择套餐信息，现在公测阶段只有一个免费套餐选项，将来应该会有更多套餐选择。填写上「环境名称」点击确认之后，会使用小程序开发账号在腾讯云开通一个 \"),n(\"code\",[e._v(\"fake account\")]),e._v(\"。到此小程序·云开发就开通了！\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[n(\"strong\",[e._v(\"TIPS\")]),e._v(\"：目前一个小程序账号可以免费开通两个云开发账号，免费版本的限制应该也要注意：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"数据库存储空间：1GB\")]),e._v(\" \"),n(\"li\",[e._v(\"文件存储空间：5GB\")]),e._v(\" \"),n(\"li\",[e._v(\"文件存储外网下行流量：5GB/月\")]),e._v(\" \"),n(\"li\",[e._v(\"云函数数量：20\")]),e._v(\" \"),n(\"li\",[e._v(\"云函数资源使用量：10万GBs/月\")]),e._v(\" \"),n(\"li\",[e._v(\"API调用次数：3万次/天\")])]),e._v(\" \"),n(\"p\",[n(\"strong\",[e._v(\"这些对于我们做普通的小程序开发练习已经足够了！\")])])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"小程序·云开发在小程序中的调用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序·云开发在小程序中的调用\"}},[e._v(\"#\")]),e._v(\" 小程序·云开发在小程序中的调用\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序·云开发可以在小程序中直接通过调用 \"),n(\"code\",[e._v(\"wx.cloud.*\")]),e._v(\" 的方式进行调用，在调用云开发 API 之前，需要先调用 \"),n(\"code\",[e._v(\"wx.cloud.init\")]),e._v(\" 对云开发进行初始化：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"wx.cloud.init({\\n  env: 'tianqi-xxx'\\n})\\n\\n\")])])]),n(\"p\",[e._v(\"初始化时，需要传入 \"),n(\"code\",[e._v(\"env\")]),e._v(\" 参数，该参数为创建小程序·云开发时的\"),n(\"code\",[e._v(\"环境 ID\")]),e._v(\"，可以在「云开发」页面右上角「当前环境」下拉菜单中找到：\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653133b981bd767?w=639&h=300&f=png&s=41977\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"下面详细介绍下小程序·云开发的三大功能。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"数据库\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据库\"}},[e._v(\"#\")]),e._v(\" 数据库\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序·云开发的数据库是一种 NoSQL 云端数据库，数据以 JSON 格式存储，在底层支持弹性可扩展、自动容灾、监控管理，所以开发者不需要关注数据库的运维。从提供的文档和接口来看，云开发的数据库应该是由 MongoDB 实现的。\")]),e._v(\" \"),n(\"p\",[e._v(\"每个数据库是由多个集合（collection，类比关系型数据库中表的概念）组成，集合有多个 JSON 文档（行）组成，NoSQL 的特点是没有固定的字段，所以整个集合可以看成一个大的 JSON 数组，一个集合在数据库中的存储格式如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('[\\n  {\\n    \"_id\": 1,\\n    \"_openid\": \"ax123CVadb\",\\n    \"name\": \"Alice\",\\n    \"city\": \"Guangzhou\"\\n  },\\n  {\\n    \"_id\": 2,\\n    \"_openid\": \"xj372nJdfa\",\\n    \"name\": \"Bob\",\\n    \"city\": \"Shenzhen\"\\n  }\\n]\\n\\n')])])]),n(\"p\",[e._v(\"需要说明的是，文档中的 \"),n(\"code\",[e._v(\"_id\")]),e._v(\" 是唯一的，开发者可以插入数据的时候自定义，另外 \"),n(\"code\",[e._v(\"_openid\")]),e._v(\" 是增加文档默认创建的，代表当前小程序用户的唯一标示，后面实战部分笔者会重点介绍小程序的用户授权相关的内容。\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"快速入门\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#快速入门\"}},[e._v(\"#\")]),e._v(\" 快速入门\")]),e._v(\" \"),n(\"p\",[e._v(\"详细介绍可以见小程序·云开发的使用文档，这里笔者整理出常用的 API 使用方法：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 初始化\\nwx.cloud.init({\\n  env: 'tianqi-xxx'\\n})\\n// 获取数据库实例\\nconst db = wx.cloud.database()\\n// 增\\ndb.collection('集合名称').add({\\n  data: {} // 插入的数据\\n}).then(res => {\\n  // 可以通过 res._id 获取创建的记录的 id\\n  console.log(res._id)\\n})\\n// 删\\ndb.collection('集合名称').doc('文档 ID').remove().then(res => {\\n  console.log('removed')\\n})\\n// 改\\ndb.collection('集合名称').doc('文档 ID').update({\\n  data: {\\n    title: '我的第 1 篇文章', // 只更新 title 字段，其他不更新\\n  }\\n}).then(res => {\\n  // 可以通过 res._id 获取创建的记录的 id\\n  console.log(res._id)\\n})\\n// 查\\ndb.collection('集合名称').doc('文档 ID').get().then(res => {\\n  // 打印结果，res.data 即为记录的数据\\n  console.log(res)\\n})\\nconst _ = db.command // 取指令\\ndb.collection('集合名称').where({\\n  // 查找条件\\n  category: 'computer',\\n  properties: {\\n    memory: _.gt(8), // 表示大于 8\\n  }\\n})\\n\\n\")])])]),n(\"p\",[e._v(\"小程序·云开发的数据库查询命令是可以使用查询筛选指令的，使用查询筛选指令可以缩小查询范围，找到查询条件的文档。\")]),e._v(\" \"),n(\"p\",[e._v(\"以下指令挂载在 \"),n(\"code\",[e._v(\"db.command\")]),e._v(\" 下\")]),e._v(\" \"),n(\"p\",[e._v(\"类型\")]),e._v(\" \"),n(\"p\",[e._v(\"接口\")]),e._v(\" \"),n(\"p\",[e._v(\"说明\")]),e._v(\" \"),n(\"p\",[e._v(\"比较运算\")]),e._v(\" \"),n(\"p\",[e._v(\"eq\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 ==\")]),e._v(\" \"),n(\"p\",[e._v(\"neq\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 !=\")]),e._v(\" \"),n(\"p\",[e._v(\"gt\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 >\")]),e._v(\" \"),n(\"p\",[e._v(\"gte\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 >=\")]),e._v(\" \"),n(\"p\",[e._v(\"lt\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 <\")]),e._v(\" \"),n(\"p\",[e._v(\"lte\")]),e._v(\" \"),n(\"p\",[e._v(\"字段 <=\")]),e._v(\" \"),n(\"p\",[e._v(\"in\")]),e._v(\" \"),n(\"p\",[e._v(\"字段值在数组里\")]),e._v(\" \"),n(\"p\",[e._v(\"nin\")]),e._v(\" \"),n(\"p\",[e._v(\"字段值不在数组里\")]),e._v(\" \"),n(\"p\",[e._v(\"逻辑运算\")]),e._v(\" \"),n(\"p\",[e._v(\"and\")]),e._v(\" \"),n(\"p\",[e._v(\"表示需同时满足指定的所有条件\")]),e._v(\" \"),n(\"p\",[e._v(\"or\")]),e._v(\" \"),n(\"p\",[e._v(\"表示需同时满足指定条件中的至少一个\")]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v(\"举例说明：在 \"),n(\"code\",[e._v(\"diary\")]),e._v(\" 集合中找出 \"),n(\"code\",[e._v(\"openid\")]),e._v(\" 某个值并且创建时间（\"),n(\"code\",[e._v(\"tsModified\")]),e._v(\"）在 \"),n(\"code\",[e._v(\"start\")]),e._v(\" 和 \"),n(\"code\",[e._v(\"end\")]),e._v(\" 之间的文档。\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"db\\n  .collection('diary')\\n  .where({\\n    openid,\\n    tsModified: _.gte(start).and(_.lt(end))\\n  })\\n  .get()\\n\\n\")])])]),n(\"h3\",{attrs:{id:\"数据库的索引\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据库的索引\"}},[e._v(\"#\")]),e._v(\" 数据库的索引\")]),e._v(\" \"),n(\"p\",[e._v(\"增加合适的索引可以提升文档的查找效率，比如根据时间、用户 ID 查找，可以将时间和用户 ID 字段设置为索引项，笔者在使用的时候发现：\"),n(\"strong\",[e._v(\"在小程序·云开发管理后台并不能对某个字段增加唯一索引。\")])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"自带权限管理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自带权限管理\"}},[e._v(\"#\")]),e._v(\" 自带权限管理\")]),e._v(\" \"),n(\"p\",[e._v(\"在研发中，经常会针对不同的用户设置不同的数据库权限，例如：某条记录是用户 A 创建的，则只有用户 A 可以删除或者更新，其他用户只有查看的权限，这样的需求很常见，实际开发起来却非常费劲，往往要写不少权限判断的代码，小程序·云开发的数据库支持「权限管理」功能，可以针对这类需求对不同的集合进行统一处理，大大降低开发的门槛！\")]),e._v(\" \"),n(\"p\",[e._v(\"集合的操作权限包括以下四种：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"所有用户可读，仅创建者及管理员可写\")]),e._v(\" \"),n(\"li\",[e._v(\"仅创建者及管理员可读写\")]),e._v(\" \"),n(\"li\",[e._v(\"所有用户可读，仅管理员可写\")]),e._v(\" \"),n(\"li\",[e._v(\"仅管理员可读写\")])]),e._v(\" \"),n(\"p\",[e._v(\"可以在「云开发 -> 数据库 -> 选择某个集合 -> 权限设置」页面进行设置。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653133f8470acf5?w=733&h=493&f=png&s=66527\",alt:\"\"}})]),e._v(\" \"),n(\"h2\",{attrs:{id:\"文件存储\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件存储\"}},[e._v(\"#\")]),e._v(\" 文件存储\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序·云开发的文件存储功能是专为存储和提供用户生成的内容（如图片或视频）的开发者打造的。开发者可使用腾讯云的 SDK 来存储图片、音频、视频或其他由用户生成的内容。在小程序内，则可以通过云开发的 API 直接上传、下载和管理存储。\")]),e._v(\" \"),n(\"p\",[e._v(\"公共使用的静态资源，可以通过「云开发 -> 存储」界面直接上传和管理，上传之后，就可以在界面内找到资源的 CDN 地址。\")]),e._v(\" \"),n(\"p\",[e._v(\"而对于小程序内需要上传和管理的则通过下面几个 API 来实现：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 上传，上传后会返回资源的 ID\\nwx.cloud.uploadFile\\n// 下载\\nwx.cloud.downloadFile\\n// 根据资源 ID 获取资源访问地址\\nwx.cloud.getTempFileURL\\n// 根据资源 ID 列表删除某资源\\nwx.cloud.removeFile\\n\\n\")])])]),n(\"p\",[e._v(\"跟数据库权限管理一样，如果需要用户自己上传的内容自己可以管理，那么需要设置存储的操作权限，在「云开发 -> 存储」下可以设置全局的存储操作权限。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531342c74c933b?w=496&h=506&f=png&s=72357\",alt:\"\"}})]),e._v(\" \"),n(\"h2\",{attrs:{id:\"云函数\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#云函数\"}},[e._v(\"#\")]),e._v(\" 云函数\")]),e._v(\" \"),n(\"p\",[e._v(\"云函数是腾讯云提供的一套函数计算解决方案，我们可以将每个功能 API 做成单个可执行的函数，然后放到腾讯云上去托管，每个云函数是相互独立可执行的。代码编写完成后放到云端，不执行不调用不收费，执行调用按照调用次数和 CPU 等计算资源的占用情况收费。有了云函数，开发者无须搭建和购买服务器，只需要将写好的云函数代码上传部署到腾讯云，即可以在小程序内通过 \"),n(\"code\",[e._v(\"wx.cloud.callFunction\")]),e._v(\" 的方法进行调用。\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"快速入门-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#快速入门-2\"}},[e._v(\"#\")]),e._v(\" 快速入门\")]),e._v(\" \"),n(\"h4\",{attrs:{id:\"创建云函数\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建云函数\"}},[e._v(\"#\")]),e._v(\" 创建云函数\")]),e._v(\" \"),n(\"p\",[e._v(\"创建云函数有两种方式，一种是直接在小程序开发者工具中进行操作：\")]),e._v(\" \"),n(\"p\",[e._v(\"进入「云开发 -> 云函数 -> 添加」创建：\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531345ab99757d?w=1065&h=434&f=png&s=53064\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"另外一种是直接在小程序开发者工具中上传，在上传之前需要配置小程序的 \"),n(\"code\",[e._v(\"project.config.json\")]),e._v(\"，指明哪个路径为云函数目录：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('{\\n  \"cloudfunctionRoot\": \"./cloud-functions/\"\\n}\\n\\n')])])]),n(\"p\",[e._v(\"配置完成后，在小程序开发者工具的编辑器中展开 \"),n(\"code\",[e._v(\"cloud-functions\")]),e._v(\" 文件夹，选择对应的云函数文件夹，右键选择「上传并部署」即可：\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531351a0e7da9f?w=442&h=400&f=png&s=67432\",alt:\"\"}})]),e._v(\" \"),n(\"h4\",{attrs:{id:\"写个简单云函数\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#写个简单云函数\"}},[e._v(\"#\")]),e._v(\" 写个简单云函数\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序·云开发的云函数是执行在 Node.js 8.9.0 版本下的，云函数必须在 index.js 有 \"),n(\"code\",[e._v(\"main\")]),e._v(\" 方法为入口，例如下面的代码：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 命名为 test 的函数内容 index.js\\nexports.main = async (event, context) => {\\n  let {a, b} = event\\n  return new Promise((resolve, reject) => {\\n    resolve({result: parseInt(a) + parseInt(b)})\\n  })\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"除了上面 Promise 的写法，还可以用回调的方式：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 命名为 test 的函数内容 index.js\\n// 回调方式 callback\\nexports.main = async (event, context, callback) => {\\n  let {a, b} = event\\n  callback(null, {result: parseInt(a) + parseInt(b)})\\n}\\n\\n\")])])]),n(\"blockquote\",[n(\"p\",[e._v(\"TIPS:\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"云函数如果不存在 \"),n(\"code\",[e._v(\"main\")]),e._v(\" 的方法，上传部署的时候会报错！\")]),e._v(\" \"),n(\"li\",[e._v(\"云函数回调方式写法遵循「错误优先」原则（Error-First Callback）。\")])])]),e._v(\" \"),n(\"p\",[e._v(\"云函数接受两个 JSON 格式的参数 \"),n(\"code\",[e._v(\"event\")]),e._v(\" 和 \"),n(\"code\",[e._v(\"context\")]),e._v(\"，两者分别代表：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[n(\"code\",[e._v(\"event\")]),e._v(\"：平台将 \"),n(\"code\",[e._v(\"event\")]),e._v(\" 入参传递给执行方法，通过此 \"),n(\"code\",[e._v(\"event\")]),e._v(\" 入参对象，代码将与触发函数的事件（event）交互，\"),n(\"code\",[e._v(\"event\")]),e._v(\" 可以获取 \"),n(\"code\",[e._v(\"wx.cloud.callFunction\")]),e._v(\" 调用的参数 \"),n(\"code\",[e._v(\"data\")])]),e._v(\" \"),n(\"li\",[n(\"code\",[e._v(\"context\")]),e._v(\"：平台将 \"),n(\"code\",[e._v(\"context\")]),e._v(\" 入参传递给执行方法，通过此 \"),n(\"code\",[e._v(\"context\")]),e._v(\" 入参对象，代码将能了解到运行环境及当前请求的相关内容\")])]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v(\"TIPS： 开发者可以在云函数内获取到每次调用的上下文（appId、openId 等），无需维护复杂的鉴权机制，即可获取天然可信任的用户登录态（openId），这俩值可以从\"),n(\"code\",[e._v(\"event.userInfo\")]),e._v(\"中读取。\")])]),e._v(\" \"),n(\"p\",[e._v(\"上面 \"),n(\"code\",[e._v(\"test\")]),e._v(\" 的函数上传到腾讯云之后，我们在小程序的 JS 代码中可以使用下面的方法进行调用：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"wx.cloud.callFunction({\\n  name: 'test',\\n  data: {\\n    a: 1,\\n    b: 2\\n  }\\n}).then(r=>{\\n  // 因为 main 的方法实际是个 promisify 的返回，所以可以直接使用 then/catch\\n  console.log(r)\\n}).catch(e=>{\\n  console.log(e)\\n})\\n\\n\")])])]),n(\"h4\",{attrs:{id:\"云函数的依赖管理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#云函数的依赖管理\"}},[e._v(\"#\")]),e._v(\" 云函数的依赖管理\")]),e._v(\" \"),n(\"p\",[e._v(\"在云函数中，可以像正常的 Node.js 一样，使用 \"),n(\"code\",[e._v(\"package.json\")]),e._v(\" 和 \"),n(\"code\",[e._v(\"node_modules\")]),e._v(\" 来对依赖进行管理，在开发完代码之后，需要将 \"),n(\"code\",[e._v(\"node_modules\")]),e._v(\" 文件夹一起上传到云端去。下面笔者将带着大家做一个什么值得买的简单抓取的云函数，讲解函数编写、npm 模块使用、云函数本地测试整个流程。\")]),e._v(\" \"),n(\"p\",[e._v(\"先说下，笔者要实现的功能：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"根据传入的分类参数，获取什么值得买对应分类的最新文章内容\")]),e._v(\" \"),n(\"li\",[e._v(\"提取出文章列表的 title、image、mall，即文章名称、文章的配图和优惠所属的网站\")])]),e._v(\" \"),n(\"p\",[e._v(\"首先在 cloud-functions 文件夹（该文件夹是我们创建的云函数文件夹），创建一个 \"),n(\"code\",[e._v(\"smzdm\")]),e._v(\" 的云函数，目录结构如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"cloud-functions\\n├── smzdm\\n│   ├── index.js\\n\\n\")])])]),n(\"p\",[e._v(\"然后进入 \"),n(\"code\",[e._v(\"smzdm\")]),e._v(\" 目录，执行 \"),n(\"code\",[e._v(\"npm init\")]),e._v(\"，按照提示填写内容以后，会在该目录下生成 \"),n(\"code\",[e._v(\"package.json\")]),e._v(\" 文件，接下来需要安装抓取「什么值得买」手机站点的两个 npm 模块：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://www.npmjs.com/package/request\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"request\"),n(\"OutboundLink\")],1),e._v(\"：用于做数据请求，抓取站点的 HTML 内容\")]),e._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://www.npmjs.com/package/cheerio\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"cheerio\"),n(\"OutboundLink\")],1),e._v(\"：用于将 HTML 结构数据转为类似 jQuery 的对象，可以通过 CSS 选择器对 HTML 的内容进行提取\")])]),e._v(\" \"),n(\"p\",[e._v(\"安装命令如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"# 进入 smzdm 目录，执行\\nnpm install --save request cheerio\\n\\n\")])])]),n(\"p\",[e._v(\"安装之后的目录结构如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"cloud-functions\\n├── smzdm\\n│   ├── node_modules\\n│   ├── index.js\\n│   └── package.json\\n\\n\")])])]),n(\"p\",[e._v(\"然后我们开始编写 index.js 内容，第一步引入模块，编写 \"),n(\"code\",[e._v(\"main\")]),e._v(\" 方法：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 引入 requst 和 cheerio\\nconst request = require('request')\\nconst cheerio = require('cheerio')\\nexports.main = async (event = {}) => {\\n  // 获取具体什么值得买网站分类\\n  let category = event.category || 'diannaoshuma'\\n  return new Promise((resolve, reject) => {\\n\\n  })\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"第二步，开始编写具体的逻辑，即使用 \"),n(\"code\",[e._v(\"request.get\")]),e._v(\" 先获取 HTML 内容，然后使用 \"),n(\"code\",[e._v(\"cheerio\")]),e._v(\" 将 HTML 内容进行结构化，经过使用 Chrome 查看器查看，发现最新文章都包含在一个 \"),n(\"code\",[e._v(\"class\")]),e._v(\" 为 \"),n(\"code\",[e._v(\"card-group-list\")]),e._v(\" 的 div 下，然后找到 \"),n(\"code\",[e._v(\"zm-card-title\")]),e._v(\" 等每个文章的标题、图片和商城信息，将结果放到一个数组，最后 \"),n(\"code\",[e._v(\"resolve\")]),e._v(\" 输出：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const request = require('request')\\nconst cheerio = require('cheerio')\\nexports.main = async (event = {}) => {\\n  let category = event.category || 'diannaoshuma'\\n  return new Promise((resolve, reject) => {\\n    request.get(`https://m.smzdm.com/fenlei/${category}/`, (e, req, body) => {\\n      if (!e && req.statusCode === 200) {\\n        const $ = cheerio.load(body)\\n        const result = []\\n        $('.card-group-list').each((i, v) => {\\n          let $v = $(v)\\n          let title = $v.find('.zm-card-title').text().trim()\\n          let image = $v.find('.zm-card-media img').attr('src')\\n          let mall = $v.find('.card-mall').text().trim()\\n          result.push({\\n            title,\\n            image,\\n            mall\\n          })\\n        })\\n        resolve(result)\\n      }\\n    })\\n  })\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"这样就完成了一个带有依赖模块的云函数编写，上传到腾讯云部署之后，在小程序中使用：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"wx.cloud.callFunction({\\n  name: 'smzdm',\\n  data: {\\n    category: 'diannaoshuma'\\n  }\\n}).then(r=>{console.log(r)})\\n\\n\")])])]),n(\"h4\",{attrs:{id:\"云函数的调试\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#云函数的调试\"}},[e._v(\"#\")]),e._v(\" 云函数的调试\")]),e._v(\" \"),n(\"p\",[e._v(\"云函数有一个很不方便的地方，就是测试起来相对来说比较麻烦，我们不能每次都上传到云端，通过 \"),n(\"code\",[e._v(\"wx.cloud.callFunction\")]),e._v(\" 的方式进行调用，下面介绍几种测试的方法。\")]),e._v(\" \"),n(\"blockquote\",[n(\"ol\",[n(\"li\",[e._v(\"线下：函数自己使用 Node 来测试\")])])]),e._v(\" \"),n(\"p\",[e._v(\"这种方法就是在 index.js 的最后，增加一个测试方法，比如：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const request = require('request')\\nconst cheerio = require('cheerio')\\nconst main = (exports.main = async (event = {}) => {\\n  let category = event.category || 'diannaoshuma'\\n  return new Promise((resolve, reject) => {\\n    request.get(`https://m.smzdm.com/fenlei/${category}/`, (e, req, body) => {\\n      if (!e && req.statusCode === 200) {\\n        const $ = cheerio.load(body)\\n        const result = []\\n        $('.card-group-list').each((i, v) => {\\n          let $v = $(v)\\n          let title = $v.find('.zm-card-title').text().trim()\\n          let image = $v.find('.zm-card-media img').attr('src')\\n          let label = $v.find('.card-label').text().trim()\\n          let mall = $v.find('.card-mall').text().trim()\\n          result.push({\\n            title,\\n            image,\\n            label,\\n            mall\\n          })\\n        })\\n        resolve(result)\\n      }\\n    })\\n  })\\n})\\nmain({category: 'diannaoshuma'}).then(r=>{console.log(r)})\\n\\n\")])])]),n(\"p\",[e._v(\"然后使用 Node.js 直接运行该文件：\"),n(\"code\",[e._v(\"node index.js\")])]),e._v(\" \"),n(\"blockquote\",[n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[e._v(\"线上：使用开发者工具\")])])]),e._v(\" \"),n(\"p\",[e._v(\"在小程序开发者工具的云开发控制台内有测试的工具，进入路径为：「云开发 -> 云函数列表 -> 点击具体云函数 -> 右上角测试」。\")]),e._v(\" \"),n(\"p\",[e._v(\"对于测试的参数，还可以保存下来模板，方便以后使用。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653135a895f19a7?w=1200&h=1057&f=png&s=206458\",alt:\"\"}})]),e._v(\" \"),n(\"h4\",{attrs:{id:\"云函数的-mock-server\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#云函数的-mock-server\"}},[e._v(\"#\")]),e._v(\" 云函数的 mock server\")]),e._v(\" \"),n(\"p\",[e._v(\"上文提到的测试方法，都是将小程序的研发流程完全割裂开来，不能完整地测试小程序的代码，只能要么测试云函数要么测试小程序，那么测试小程序的代码就需要上线云函数，实际还是一种效率不高的做法。这里笔者介绍一种本地 mock server 的方式来开启云函数的测试，这种方式可以打通小程序开发的整个流程。具体做法分两步：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"将云函数作为一个接受请求参数的 server 来访问\")]),e._v(\" \"),n(\"li\",[e._v(\"使用 \"),n(\"code\",[e._v(\"wx.request\")]),e._v(\" 构造请求拿到云函数的处理结果，然后跑通整个研发流程\")])]),e._v(\" \"),n(\"p\",[e._v(\"笔者在 mock server 选型上，选择使用 \"),n(\"a\",{attrs:{href:\"https://www.expressjs.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Express\"),n(\"OutboundLink\")],1),e._v(\" 自建 mock server 的方式。\")]),e._v(\" \"),n(\"p\",[e._v(\"首先，启动一个 Express server：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const express = require('express')\\nconst app = express()\\n\\napp.listen(3000, () => {\\n  console.log(`开发服务器启动成功：http://127.0.0.1:3000`)\\n})\\n\\n\")])])]),n(\"p\",[e._v(\"然后将云函数引入进程序中来，作为一个路由 handler 来接受http url 的参数，处理请求之后，将返回的处理结果通过 Express 的 \"),n(\"code\",[e._v(\"res.json\")]),e._v(\"输出。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const test = require('./cloud-functions/test/').main\\n\\napp.get('/api/test', (req, res, next) => {\\n  // 将 req.query 传入\\n  test(req.query).then(res.json.bind(res)).catch((e) => {\\n    console.error(e)\\n    next(e)\\n  })\\n  // next()\\n})\\n\\n\")])])]),n(\"p\",[e._v(\"这样访问 \"),n(\"code\",[e._v(\"http://127.0.0.1:3000/api/test?a=1&b=2\")]),e._v(\" 就会输出结果了。到这里笔者就将 mock server 搭建完毕了。\")]),e._v(\" \"),n(\"p\",[e._v(\"关于小程序代码中如何调用，怎么保持代码的一致性，自由切换线上代码和线下开发代码的方式，在\"),n(\"a\",{attrs:{href:\"https://juejin.im/book/5b70f101e51d456669381803/section/5b70f587518825612b15bd95\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"实战篇 1：小程序开发环境搭建\"),n(\"OutboundLink\")],1),e._v(\"中会有更详细的讲解。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"小结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),n(\"p\",[e._v(\"本节重点介绍了腾讯新推出的小程序云开发的基础知识，云开发由 NoSQL 数据库、文件存储和云函数三个云产品组成，其中数据库和文件存储都可以单独设置用户权限，这样极大地降低了 UGC（用户产生内容）类小程序的开发门槛。\")]),e._v(\" \"),n(\"p\",[e._v(\"云函数是小程序·云开发中一个很重要的产品，本节介绍了云函数的基本用法和注意事项，同时针对小程序云函数的开发测试比较困难的情况，提出了 mock server 的解决方式。\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{452:function(e,t,n){\"use strict\";n.r(t);var i=n(42),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"flutter布局widget-线性布局\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flutter布局widget-线性布局\"}},[e._v(\"#\")]),e._v(\" Flutter布局Widget —— 线性布局\")]),e._v(\" \"),n(\"p\",[e._v(\"线性布局 可以将 子Widget 在同一个方向(水平和垂直)上排列.\")]),e._v(\" \"),n(\"p\",[e._v(\"Flutter 的线性布局，有两个:\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://docs.flutter.io/flutter/widgets/Row-class.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Row\"),n(\"OutboundLink\")],1),e._v(\"：水平方向的线性布局\")]),e._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://docs.flutter.io/flutter/widgets/Column-class.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Column\"),n(\"OutboundLink\")],1),e._v(\"：垂直方向的线性布局\")])]),e._v(\" \"),n(\"p\",[e._v(\"Row 和 Column 都继承自弹性布局 Flex，其实就是确定了主轴方向的 Flex，其余的用法和 Flex 一致。\")]),e._v(\" \"),n(\"h1\",{attrs:{id:\"row\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#row\"}},[e._v(\"#\")]),e._v(\" Row\")]),e._v(\" \"),n(\"p\",[e._v(\"Row 可以在水平方向排列其 子widget。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"代码所在位置\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码所在位置\"}},[e._v(\"#\")]),e._v(\" 代码所在位置\")]),e._v(\" \"),n(\"p\",[e._v(\"flutter_widget_demo/lib/linear/RowWidget.dart\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"row-的使用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#row-的使用\"}},[e._v(\"#\")]),e._v(\" Row 的使用\")]),e._v(\" \"),n(\"p\",[e._v(\"Row 是水平排列，给其 children 参数添加 子Widget 即可，例如：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('Row(\\n  children: <Widget>[\\n    Text(\"Hello Flutter\"),\\n    Image.asset(\\n      \"images/flutter.png\",\\n      width: 200,\\n    )\\n  ],\\n)\\n\\n')])])]),n(\"p\",[e._v(\"Row 在一个页面使用的 Demo 代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('import \\'package:flutter/material.dart\\';\\n\\nvoid main() => runApp(RowWidget());\\n\\nclass RowWidget extends StatelessWidget {\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: \"Flutter Demo\",\\n      theme: ThemeData(\\n        primaryColor: Colors.blue,\\n      ),\\n      home: Scaffold(\\n        appBar: AppBar(title: Text(\"Flutter布局Widget -- 线性布局\")),\\n        body: Row(\\n          children: <Widget>[\\n            Text(\"Hello Flutter\"),\\n            Image.asset(\\n              \"images/flutter.png\",\\n              width: 200,\\n            )\\n          ],\\n        ),\\n      ),\\n    );\\n  }\\n}\\n\\n')])])]),n(\"p\",[e._v(\"运行效果：\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/3/10/169658c52ff19b81?w=843&h=459&f=jpeg&s=60878\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"Row 的 children 有两个，分别是 Text 和 Image，这两个按照水平方向排列。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"row-的构造函数及参数说明\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#row-的构造函数及参数说明\"}},[e._v(\"#\")]),e._v(\" Row 的构造函数及参数说明\")]),e._v(\" \"),n(\"p\",[e._v(\"Row 的构造函数为：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"class Row extends Flex {\\n  Row({\\n    Key key,\\n    MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,\\n    MainAxisSize mainAxisSize = MainAxisSize.max,\\n    CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,\\n    TextDirection textDirection,\\n    VerticalDirection verticalDirection = VerticalDirection.down,\\n    TextBaseline textBaseline,\\n    List<Widget> children = const <Widget>[],\\n  }) : super(\\n    children: children,\\n    key: key,\\n    direction: Axis.horizontal,\\n    mainAxisAlignment: mainAxisAlignment,\\n    mainAxisSize: mainAxisSize,\\n    crossAxisAlignment: crossAxisAlignment,\\n    textDirection: textDirection,\\n    verticalDirection: verticalDirection,\\n    textBaseline: textBaseline,\\n  );\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"参数名字\")]),e._v(\" \"),n(\"p\",[e._v(\"参数类型\")]),e._v(\" \"),n(\"p\",[e._v(\"意义\")]),e._v(\" \"),n(\"p\",[e._v(\"必选 or 可选\")]),e._v(\" \"),n(\"p\",[e._v(\"key\")]),e._v(\" \"),n(\"p\",[e._v(\"Key\")]),e._v(\" \"),n(\"p\",[e._v(\"Widget 的标识\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"mainAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"MainAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在主轴的对齐方式\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"mainAxisSize\")]),e._v(\" \"),n(\"p\",[e._v(\"MainAxisSize\")]),e._v(\" \"),n(\"p\",[e._v(\"表示主轴应该占用多大的空间\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"crossAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"CrossAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在交叉轴的对齐方式\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"textDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"TextDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在主轴方向上的布局顺序\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"verticalDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"VerticalDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在交叉轴方向上的布局顺序\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"textBaseline\")]),e._v(\" \"),n(\"p\",[e._v(\"TextBaseline\")]),e._v(\" \"),n(\"p\",[e._v(\"排列 子Widget 时使用哪个基线\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"children\")]),e._v(\" \"),n(\"p\",[e._v(\"List< Widget>\")]),e._v(\" \"),n(\"p\",[e._v(\"Flex布局 里排列的内容\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"h1\",{attrs:{id:\"column\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#column\"}},[e._v(\"#\")]),e._v(\" Column\")]),e._v(\" \"),n(\"p\",[e._v(\"Column 可以在垂直方向上排列其 子widget。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"代码所在位置-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码所在位置-2\"}},[e._v(\"#\")]),e._v(\" 代码所在位置\")]),e._v(\" \"),n(\"p\",[e._v(\"flutter_widget_demo/lib/linear/ColumnWidget.dart\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"column-的快速上手\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#column-的快速上手\"}},[e._v(\"#\")]),e._v(\" Column 的快速上手\")]),e._v(\" \"),n(\"p\",[e._v(\"Column 是垂直方向上排列，给其 children 参数添加 子Widget 即可，例如：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('Column(\\n  children: <Widget>[\\n    Text(\"Hello Flutter\"),\\n    Image.asset(\\n      \"images/flutter.png\",\\n      width: 200,\\n    )\\n  ],\\n)\\n\\n')])])]),n(\"p\",[e._v(\"Column 在一个页面使用的 Demo 代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('import \\'package:flutter/material.dart\\';\\n\\nvoid main() => runApp(ColumnWidget());\\n\\nclass ColumnWidget extends StatelessWidget {\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: \"Flutter Demo\",\\n      theme: ThemeData(\\n        primaryColor: Colors.blue,\\n      ),\\n      home: Scaffold(\\n        appBar: AppBar(title: Text(\"Flutter布局Widget -- 线性布局\")),\\n        body: Column(\\n          children: <Widget>[\\n            Text(\"Hello Flutter\"),\\n            Image.asset(\\n              \"images/flutter.png\",\\n              width: 200,\\n            )\\n          ],\\n        ),\\n      ),\\n    );\\n  }\\n}\\n\\n')])])]),n(\"p\",[e._v(\"运行结果：\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/3/10/16965b9308a95917?w=840&h=450&f=jpeg&s=61031\",alt:\"\"}})]),e._v(\" \"),n(\"h2\",{attrs:{id:\"column-的构造函数及参数说明\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#column-的构造函数及参数说明\"}},[e._v(\"#\")]),e._v(\" Column 的构造函数及参数说明\")]),e._v(\" \"),n(\"p\",[e._v(\"Column 的构造函数为：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"class Column extends Flex {\\n  Column({\\n    Key key,\\n    MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,\\n    MainAxisSize mainAxisSize = MainAxisSize.max,\\n    CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,\\n    TextDirection textDirection,\\n    VerticalDirection verticalDirection = VerticalDirection.down,\\n    TextBaseline textBaseline,\\n    List<Widget> children = const <Widget>[],\\n  }) : super(\\n    children: children,\\n    key: key,\\n    direction: Axis.vertical,\\n    mainAxisAlignment: mainAxisAlignment,\\n    mainAxisSize: mainAxisSize,\\n    crossAxisAlignment: crossAxisAlignment,\\n    textDirection: textDirection,\\n    verticalDirection: verticalDirection,\\n    textBaseline: textBaseline,\\n  );\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"参数名字\")]),e._v(\" \"),n(\"p\",[e._v(\"参数类型\")]),e._v(\" \"),n(\"p\",[e._v(\"意义\")]),e._v(\" \"),n(\"p\",[e._v(\"必选 or 可选\")]),e._v(\" \"),n(\"p\",[e._v(\"key\")]),e._v(\" \"),n(\"p\",[e._v(\"Key\")]),e._v(\" \"),n(\"p\",[e._v(\"Widget 的标识\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"mainAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"MainAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在主轴的对齐方式\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"mainAxisSize\")]),e._v(\" \"),n(\"p\",[e._v(\"MainAxisSize\")]),e._v(\" \"),n(\"p\",[e._v(\"表示主轴应该占用多大的空间\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"crossAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"CrossAxisAlignment\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在交叉轴的对齐方式\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"textDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"TextDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在主轴方向上的布局顺序\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"verticalDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"VerticalDirection\")]),e._v(\" \"),n(\"p\",[e._v(\"表示 子Widget 在交叉轴方向上的布局顺序\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"textBaseline\")]),e._v(\" \"),n(\"p\",[e._v(\"TextBaseline\")]),e._v(\" \"),n(\"p\",[e._v(\"排列 子Widget 时使用哪个基线\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"p\",[e._v(\"children\")]),e._v(\" \"),n(\"p\",[e._v(\"List< Widget>\")]),e._v(\" \"),n(\"p\",[e._v(\"Flex布局 里排列的内容\")]),e._v(\" \"),n(\"p\",[e._v(\"可选\")]),e._v(\" \"),n(\"h1\",{attrs:{id:\"特殊情况\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特殊情况\"}},[e._v(\"#\")]),e._v(\" 特殊情况\")]),e._v(\" \"),n(\"p\",[e._v(\"如果 Row 里面嵌套 Row，或者 Column 里面再嵌套 Column，那么只有最外面的 Row 或 Column 会占用尽可能大的空间，里面 Row 或 Column 所占用的空间为实际大小。\")])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{398:function(n,t,a){\"use strict\";a.r(t);var e=a(42),i=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"怎么实现随机粒子\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#怎么实现随机粒子\"}},[n._v(\"#\")]),n._v(\" 怎么实现随机粒子\")]),n._v(\" \"),a(\"p\",[n._v(\"在第 4 节中，我们分析了炫酷背景特效的通性都有哪些，经过这些分析，你是不是已经手痒痒，想要自己实现一番但又不知从何下手呢？\")]),n._v(\" \"),a(\"p\",[n._v(\"本节，我将带大家实现在炫酷网页背景特效中的一个最常见的效果：随机粒子。\")]),n._v(\" \"),a(\"h2\",{attrs:{id:\"随机粒子特效分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#随机粒子特效分析\"}},[n._v(\"#\")]),n._v(\" 随机粒子特效分析\")]),n._v(\" \"),a(\"p\",[n._v(\"如果只是一个纯色或者渐变的背景，肯定会显得有点单调，我们还需要在渐变的基础上加一点 “料”，而这些 “料”通常都是粒子特效。 那么“粒子特效” 都有什么特点呢？\")]),n._v(\" \"),a(\"ul\",[a(\"li\",[n._v(\"粒子\")]),n._v(\" \"),a(\"li\",[n._v(\"规则图形\")]),n._v(\" \"),a(\"li\",[n._v(\"随机\")]),n._v(\" \"),a(\"li\",[n._v(\"数量多\")])]),n._v(\" \"),a(\"p\",[n._v(\"粒子特效这些年还是比较流行的，好多地方都可以看出使用了粒子特效。那么粒子特效是什么呢？\")]),n._v(\" \"),a(\"p\",[n._v(\"百度百科中对粒子特效定义如下：\")]),n._v(\" \"),a(\"blockquote\",[a(\"p\",[n._v(\"将无数的单个粒子组合使其呈现出固定形态，借由控制器，脚本来控制其整体或单个的运动，模拟出现真实的效果。\")])]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2017/12/1/16010035cb3889bd?w=360&h=240&f=gif&s=125696\",alt:\"粒子特效\"}})]),n._v(\" \"),a(\"p\",[n._v(\"上面的例子是一种常见的粒子特效，使用若干粒子构成文字 “Hello World”，并且每一个粒子都在运动，和物理学的 “粒子” 概念类似。\")]),n._v(\" \"),a(\"p\",[n._v(\"粒子特效的首要特点是数量多，在物理学中，粒子是能够以自由状态存在的最小物质组成部分，所以粒子的第一个特点就是数量多。\")]),n._v(\" \"),a(\"p\",[n._v(\"粒子特效的第二个特点是运动，正是因为组成物体的粒子在不断运动，我们才能看到物体在不断运动。\")]),n._v(\" \"),a(\"p\",[n._v(\"粒子特效第三个特点是随机，排列有整齐排列之美，凌乱有凌乱之美，整齐排列的可以直接平铺背景实现，直接使用 img 图片就可以。\")]),n._v(\" \"),a(\"p\",[n._v(\"但是要想有随机效果使用 img 图片就不可以了，所以我们主要使用 Canvas 实现随机粒子效果。各项参数都是随机生成的。\")]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2017/11/28/1600344ace8124af?w=960&h=640&f=gif&s=3429391\",alt:\"背景渐变\"}})]),n._v(\" \"),a(\"p\",[n._v(\"这个例子已经引用好多遍了╥﹏╥...但是它真的是很有特点啊，炫酷特效的通性全部都占有 o(\"),a(\"em\",[n._v(\"////▽////\")]),n._v(\")q\")]),n._v(\" \"),a(\"p\",[n._v(\"在这个例子中，我们可以将背景上的小 “星星” 看成粒子。粒子的数量是可以自己设置的，位置是随机出现的，大小也是随机生成的，包括透明度也是随机的，这样基本上每一个粒子都是独一无二的。\")]),n._v(\" \"),a(\"p\",[n._v(\"然后给粒子设置阴影以营造发光的特效，粒子在不断地“动”，做上升运动。\")]),n._v(\" \"),a(\"p\",[n._v(\"为什么设置随机粒子特效会受欢迎呢？我们来分析一下。首先是我们生成的每一个粒子都是独一无二的，并且每一次刷新位置都是随机的。这种效果是使用其他方式绘制图形都实现不了的（使用 svg 也是可以的，但是本小册不对 svg 绘图做过多的介绍ﾍ(;´Д｀ﾍ)）。\")]),n._v(\" \"),a(\"h2\",{attrs:{id:\"实现随机粒子特效\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现随机粒子特效\"}},[n._v(\"#\")]),n._v(\" 实现随机粒子特效\")]),n._v(\" \"),a(\"p\",[n._v(\"现在我们来一起实现一个随机粒子特效。\")]),n._v(\" \"),a(\"p\",[n._v(\"效果如下：\")]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2017/12/2/16017ec2c15ef624?w=2878&h=1546&f=jpeg&s=80622\",alt:\"随机粒子特效\"}})]),n._v(\" \"),a(\"h3\",{attrs:{id:\"创建全屏-canvas\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建全屏-canvas\"}},[n._v(\"#\")]),n._v(\" 创建全屏 Canvas\")]),n._v(\" \"),a(\"p\",[n._v(\"首先，我们需要一个全屏的 Canvas 画布。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v('<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <title>Title</title>\\n    <style>\\n        html,body {\\n            margin:0;\\n            overflow:hidden;\\n            width:100%;\\n            height:100%;\\n            cursor:none;\\n            background:black;\\n        }\\n    </style>\\n</head>\\n<body>\\n<canvas id=\"canvas\"></canvas>\\n\\n<script>\\n    var ctx = document.getElementById(\\'canvas\\'),\\n        content = ctx.getContext(\\'2d\\'),\\n        WIDTH,\\n        HEIGHT;\\n\\n    WIDTH = document.documentElement.clientWidth;\\n    HEIGHT = document.documentElement.clientHeight;\\n\\n    ctx.width = WIDTH;\\n    ctx.height = HEIGHT;\\n\\n<\\/script>\\n</body>\\n</html>\\n\\n')])])]),a(\"p\",[n._v(\"我们使用 \"),a(\"code\",[n._v(\"WIDTH\")]),n._v(\"、\"),a(\"code\",[n._v(\"HEIGHT\")]),n._v(\" 两个常量储存屏幕宽度和高度信息，我们习惯使用大写来表示改变量为常量，不可变，将屏幕宽度和高度信息储存在常量中是因为我们在稍后还会用到。\")]),n._v(\" \"),a(\"p\",[n._v(\"这时，你应该得到一个全屏的并且为黑色的 Canvas。\")]),n._v(\" \"),a(\"h3\",{attrs:{id:\"设置-round-item-类\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设置-round-item-类\"}},[n._v(\"#\")]),n._v(\" 设置 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 类\")]),n._v(\" \"),a(\"p\",[n._v(\"在创建了一个全屏的 Canvas 之后，我们来创建单个的 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 类。\")]),n._v(\" \"),a(\"p\",[n._v(\"首先我们 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 类需要有什么参数呢？我们要设置的是位置随机、透明度随机、半径随机的圆。为了区分不同的圆，我们还应该设置一个唯一的 \"),a(\"code\",[n._v(\"index\")]),n._v(\" 参数。\")]),n._v(\" \"),a(\"p\",[n._v(\"所以我们需要的参数有：\")]),n._v(\" \"),a(\"ul\",[a(\"li\",[n._v(\"x 坐标\")]),n._v(\" \"),a(\"li\",[n._v(\"y 坐标\")]),n._v(\" \"),a(\"li\",[n._v(\"半径\")]),n._v(\" \"),a(\"li\",[n._v(\"透明度\")]),n._v(\" \"),a(\"li\",[n._v(\"index\")])]),n._v(\" \"),a(\"p\",[n._v(\"根据上面这些可以得出我们的 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 类：\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v('    function Round_item(index,x,y) {\\n        this.index = index;\\n        this.x = x;\\n        this.y = y;\\n        this.r = Math.random() * 2 + 1;\\n        var alpha = (Math.floor(Math.random() * 10) + 1) / 10 / 2;\\n        this.color = \"rgba(255,255,255,\" + alpha + \")\";\\n    }\\n\\n')])])]),a(\"p\",[n._v(\"这里我们使用了构造函数的方式来创建单个的圆，我们还需要一个变量 \"),a(\"code\",[n._v(\"initRoundPopulation\")]),n._v(\" 来设置 round 的个数，然后我们便可以通过 \"),a(\"code\",[n._v(\"for\")]),n._v(\" 循环创建出 \"),a(\"code\",[n._v(\"initRoundPopulation\")]),n._v(\" 个圆。\")]),n._v(\" \"),a(\"h3\",{attrs:{id:\"设置-draw-方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设置-draw-方法\"}},[n._v(\"#\")]),n._v(\" 设置 \"),a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法\")]),n._v(\" \"),a(\"p\",[n._v(\"在设置了单个的 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 类之后，我们还要给每一个 round 设置 \"),a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法，所以我们需要将 \"),a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法设置在 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 的原型中，这样我们创建出来的每一个 \"),a(\"code\",[n._v(\"Round_item\")]),n._v(\" 实例对象都拥有了 \"),a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法。\")]),n._v(\" \"),a(\"p\",[a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法的内容就是我们第 3 节讲到的画圆的方式，这里也就不再过多的说明了，忘记的快去第 3 节补习补习ヽ(；´Д｀)ﾉ\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"    Round_item.prototype.draw = function () {\\n        content.fillStyle = this.color;\\n        content.shadowBlur = this.r * 2;\\n        content.beginPath();\\n        content.arc(this.x, this.y, this.r, 0, 2 * Math.PI, false);\\n        content.closePath();\\n        content.fill();\\n    };\\n\\n\\n\")])])]),a(\"h3\",{attrs:{id:\"设置初始化-init-函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设置初始化-init-函数\"}},[n._v(\"#\")]),n._v(\" 设置初始化 \"),a(\"code\",[n._v(\"init()\")]),n._v(\" 函数\")]),n._v(\" \"),a(\"p\",[n._v(\"然后我们就需要设置初始化 \"),a(\"code\",[n._v(\"init()\")]),n._v(\" 函数了，在 \"),a(\"code\",[n._v(\"init()\")]),n._v(\" 函数中，我们的主要任务是创建单个的 round，然后使用其 \"),a(\"code\",[n._v(\"draw()\")]),n._v(\" 方法。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"    function init() {\\n        for(var i = 0; i < initRoundPopulation; i++ ){\\n            round[i] = new Round_item(i,Math.random() * WIDTH,Math.random() * HEIGHT);\\n            round[i].draw();\\n        }\\n\\n    }\\n\\n\")])])]),a(\"p\",[n._v(\"至此，我们已经完成了随机粒子的实现，完整的代码如下：\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v('<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <title>Title</title>\\n    <style>\\n        html,body {\\n            margin:0;\\n            overflow:hidden;\\n            width:100%;\\n            height:100%;\\n            cursor:none;\\n            background:black;\\n        }\\n    </style>\\n</head>\\n<body>\\n<canvas id=\"canvas\"></canvas>\\n\\n<script>\\n    var ctx = document.getElementById(\\'canvas\\'),\\n        content = ctx.getContext(\\'2d\\'),\\n        round = [],\\n        WIDTH,\\n        HEIGHT,\\n        initRoundPopulation = 80;\\n\\n\\n    WIDTH = document.documentElement.clientWidth;\\n    HEIGHT = document.documentElement.clientHeight;\\n\\n    ctx.width = WIDTH;\\n    ctx.height = HEIGHT;\\n\\n    function Round_item(index,x,y) {\\n        this.index = index;\\n        this.x = x;\\n        this.y = y;\\n        this.r = Math.random() * 2 + 1;\\n        var alpha = (Math.floor(Math.random() * 10) + 1) / 10 / 2;\\n        this.color = \"rgba(255,255,255,\" + alpha + \")\";\\n    }\\n\\n    Round_item.prototype.draw = function () {\\n        content.fillStyle = this.color;\\n        content.shadowBlur = this.r * 2;\\n        content.beginPath();\\n        content.arc(this.x, this.y, this.r, 0, 2 * Math.PI, false);\\n        content.closePath();\\n        content.fill();\\n    };\\n\\n    function init() {\\n        for(var i = 0; i < initRoundPopulation; i++ ){\\n            round[i] = new Round_item(i,Math.random() * WIDTH,Math.random() * HEIGHT);\\n            round[i].draw();\\n        }\\n\\n    }\\n\\n    init();\\n<\\/script>\\n</body>\\n</html>\\n\\n')])])]),a(\"p\",[n._v(\"随意写的代码，欢迎大家 review~\")])])}),[],!1,null,null,null);t.default=i.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{397:function(n,a,r){\"use strict\";r.r(a);var e=r(42),t=Object(e.a)({},(function(){var n=this,a=n.$createElement,r=n._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"使你的鼠标和屏幕互动\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使你的鼠标和屏幕互动\"}},[n._v(\"#\")]),n._v(\" 使你的鼠标和屏幕互动\")]),n._v(\" \"),r(\"p\",[n._v(\"在第 5 节，我们实现了随机粒子；第 6 节，我们让随机粒子动了起来，并且简单介绍了 Canvas 制作动画的原理。\")]),n._v(\" \"),r(\"p\",[n._v(\"本节我们一起来看一下 Canvas 是怎么和我们的鼠标互动的。\")]),n._v(\" \"),r(\"p\",[n._v(\"我们先来看一下这个效果。\")]),n._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2017/12/10/1604102fd7c9ea23?w=960&h=640&f=gif&s=145105\",alt:\"鼠标互动效果\"}})]),n._v(\" \"),r(\"p\",[n._v(\"然后我们分析一下这个效果：鼠标移动，会在经过的地方创建一个圆，圆的半径由小变大，达到某个固定大小时该圆消失。圆的颜色也是在随机变化的（gif 图片时间较短，效果不明显）。\")]),n._v(\" \"),r(\"h2\",{attrs:{id:\"创建-canvas-元素\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建-canvas-元素\"}},[n._v(\"#\")]),n._v(\" 创建 Canvas 元素\")]),n._v(\" \"),r(\"p\",[n._v(\"首先我们还是要创建并获取 Canvas 元素，相信大家对此步骤应该很熟悉了吧。\")]),n._v(\" \"),r(\"p\",[n._v(\"这里也顺带将需要的参数直接写好了，我们将一些可以控制的变量直接写在参数中，这样在后面就可以获取参数直接使用。设置参数主要是为了更改方便。\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v('<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <title>Title</title>\\n    <style>\\n        * {\\n            padding: 0;\\n            margin: 0;\\n        }\\n\\n        #canvas {\\n            background: #000;\\n        }\\n    </style>\\n</head>\\n<body>\\n<canvas id=\"canvas\"></canvas>\\n<script>\\n        var canvas = document.getElementById(\\'canvas\\'),\\n            ctx = canvas.getContext(\\'2d\\'),\\n            WIDTH = canvas.width = document.documentElement.clientWidth,\\n            HEIGHT = canvas.height = document.documentElement.clientHeight,\\n            para = {\\n                num: 100,\\n                color: false,    //  颜色  如果是false 则是随机渐变颜色\\n                r: 0.9,          //   圆每次增加的半径 \\n                o: 0.09,         //      判断圆消失的条件，数值越大，消失的越快\\n                a: 1\\n            },\\n            color,\\n            color2,\\n            round_arr = [];     // 存放圆的数组 \\n<\\/script>\\n</body>\\n</html>\\n\\n')])])]),r(\"p\",[n._v(\"我们就创建一个黑色的全屏 Canvas 元素。\")]),n._v(\" \"),r(\"h2\",{attrs:{id:\"onmousemove-事件\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#onmousemove-事件\"}},[n._v(\"#\")]),n._v(\" \"),r(\"code\",[n._v(\"onmousemove\")]),n._v(\" 事件\")]),n._v(\" \"),r(\"p\",[n._v(\"在创建完了 Canvas 元素之后，我们要写鼠标移动的事件了，我们要考虑一下鼠标事件怎么写。\")]),n._v(\" \"),r(\"p\",[n._v(\"观察一下刚刚的 gif 图片，可以看出，在鼠标移动的过程中，不断地在鼠标滑过的位置产生一个逐渐变大的圆。\")]),n._v(\" \"),r(\"p\",[n._v(\"那么怎么让效果动起来呢？这就用到第 6 节讲到的知识了，我们在 Canvas 中创建动画的方式就是不断地清除屏幕内容然后重绘。\")]),n._v(\" \"),r(\"p\",[n._v(\"我们可以看出来，移动的轨迹是由一个一个的圆构成的，如果移动的速度过快的话，那么就可以明显看出一个一个的圆。\")]),n._v(\" \"),r(\"p\",[n._v(\"既然轨迹是由很多圆构成，那么我们就应该使用数组储存圆的信息（坐标、半径），然后在鼠标移动的时候将鼠标的位置信息储存在数组中。\")]),n._v(\" \"),r(\"p\",[n._v(\"所以在鼠标移动的过程我们首先要获得鼠标的坐标，然后将鼠标的坐标以及其他信息 push 到数组中去：\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"   \\n    window.onmousemove = function (event) {\\n\\n        mouseX = event.clientX;\\n        mouseY = event.clientY;\\n\\n        round_arr.push({\\n            mouseX: mouseX,\\n            mouseY: mouseY,\\n            r: para.r,  // 设置半径每次增大的数值        \\n            o: 1,    //  判断圆消失的条件，数值越大，消失得越快\\n        })\\n    };\\n\\n\\n\")])])]),r(\"h2\",{attrs:{id:\"设置-color\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设置-color\"}},[n._v(\"#\")]),n._v(\" 设置 \"),r(\"code\",[n._v(\"color\")])]),n._v(\" \"),r(\"p\",[n._v(\"我们已经将圆的相关信息储存在 \"),r(\"code\",[n._v(\"round_arr\")]),n._v(\" 数组中了，现在要在 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数中将圆显示出来。\"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数我们稍后再介绍。\")]),n._v(\" \"),r(\"p\",[n._v(\"创建圆需要的坐标信息以及半径，我们在鼠标移动的事件中都已经将其 push 到 \"),r(\"code\",[n._v(\"round_arr\")]),n._v(\" 数组中了，还有一个条件是需要设置的，那就是颜色。\")]),n._v(\" \"),r(\"p\",[n._v(\"怎么对颜色进行处理呢？在 \"),r(\"code\",[n._v(\"para\")]),n._v(\" 参数中，我们可以看出，其中有设置 \"),r(\"code\",[n._v(\"color\")]),n._v(\" 值。如果 \"),r(\"code\",[n._v(\"color\")]),n._v(\" 值不为 \"),r(\"code\",[n._v(\"false\")]),n._v(\"，那么设置的圆的颜色就是设置的 \"),r(\"code\",[n._v(\"color\")]),n._v(\" 值；如果设置的 \"),r(\"code\",[n._v(\"color\")]),n._v(\" 值为 \"),r(\"code\",[n._v(\"false\")]),n._v(\"，那么圆的颜色就是随机的。\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"\\nif (para.color) {\\n    color2 = para.color;\\n} else {\\n    color = Math.random() * 360;\\n}\\n\\n\")])])]),r(\"p\",[n._v(\"那么怎么设置颜色的渐变呢？我们将 \"),r(\"code\",[n._v(\"color\")]),n._v(\" 的颜色值依次增加一个增量。\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"\\nif (!para.color) {\\n    color += .1;\\n    color2 = 'hsl(' + color + ',100%,80%)';\\n}\\n\\n\\n\")])])]),r(\"p\",[n._v(\"要让颜色一直改变，我们要将上面颜色改变的代码放在一个一直执行的函数。我们将上面改变颜色的代码放在下面我们要介绍的 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数中。\")]),n._v(\" \"),r(\"h2\",{attrs:{id:\"animate-函数\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#animate-函数\"}},[n._v(\"#\")]),n._v(\" \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数\")]),n._v(\" \"),r(\"p\",[n._v(\"我们需要一个一直在执行的函数，这个函数主要负责动画的 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数。从函数名就可以看出这个函数的作用，的确，我们需要在该函数中写动画。\")]),n._v(\" \"),r(\"p\",[n._v(\"第 6 节写动画的主要思想是 —— 清除屏幕再重新绘制，这里的 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数也是这样的。\")]),n._v(\" \"),r(\"p\",[n._v(\"我们先来清除屏幕。\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"\\nctx.clearRect(0, 0, WIDTH, HEIGHT);\\n\\n\\n\")])])]),r(\"p\",[n._v(\"接着使用 \"),r(\"code\",[n._v(\"round_arr\")]),n._v(\" 数组中的数据将一个一个的圆绘制出来。\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"for (var i = 0; i < round_arr.length; i++) {\\n\\n    ctx.fillStyle = color2;\\n    ctx.beginPath();\\n    ctx.arc( round_arr[i].mouseX ,round_arr[i].mouseY,round_arr[i].r,0, Math.PI * 2);\\n    ctx.closePath();\\n    ctx.fill();\\n    round_arr[i].r += para.r;\\n    round_arr[i].o -= para.o;\\n\\n    if( round_arr[i].o <= 0){\\n        round_arr.splice(i,1);\\n        i--;\\n    }\\n    \\n}\\n\\n\")])])]),r(\"p\",[n._v(\"然后我们还需要一直执行这个函数：\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"window.requestAnimationFrame(animate);\\n\\n\")])])]),r(\"p\",[n._v(\"我们来看下完整的 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数：\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"\\nfunction animate() {\\n\\n    if (!para.color) {\\n        color += .1;\\n        color2 = 'hsl(' + color + ',100%,80%)';\\n    }\\n\\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\\n\\n    for (var i = 0; i < round_arr.length; i++) {\\n\\n        ctx.fillStyle = color2;\\n        ctx.beginPath();\\n         ctx.arc( round_arr[i].mouseX ,round_arr[i].mouseY,round_arr[i].r,0, Math.PI * 2);\\n        ctx.closePath();\\n        ctx.fill();\\n        round_arr[i].r += para.r;\\n        round_arr[i].o -= para.o;\\n\\n        if( round_arr[i].o <= 0){\\n            round_arr.splice(i,1);\\n            i--;\\n        }\\n    }\\n\\n    window.requestAnimationFrame(animate);\\n};\\n\\n\\n\")])])]),r(\"h2\",{attrs:{id:\"小结\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[n._v(\"#\")]),n._v(\" 小结\")]),n._v(\" \"),r(\"p\",[n._v(\"以上，我们就写完了一个完整的鼠标跟随效果的例子，让我们来看一下主要的有哪些步骤：\")]),n._v(\" \"),r(\"ol\",[r(\"li\",[n._v(\"创建 Canvas 元素，设置参数\")]),n._v(\" \"),r(\"li\",[n._v(\"鼠标移动事件，将坐标信息 push 到数组\")]),n._v(\" \"),r(\"li\",[n._v(\"设置颜色\")]),n._v(\" \"),r(\"li\",[n._v(\"设置动画 \"),r(\"code\",[n._v(\"animate()\")]),n._v(\" 函数\")])]),n._v(\" \"),r(\"p\",[n._v(\"我们来看一下这个例子的完整代码：\")]),n._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[n._v(\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>Title</title>\\n    <style>\\n        * {\\n            padding: 0;\\n            margin: 0;\\n        }\\n\\n        #canvas {\\n            background: #000;\\n        }\\n    </style>\\n</head>\\n<body>\\n<canvas id=\\\"canvas\\\"></canvas>\\n<script>\\n\\n\\n        var canvas = document.getElementById('canvas'),\\n            ctx = canvas.getContext('2d'),\\n            WIDTH = canvas.width = document.documentElement.clientWidth,\\n            HEIGHT = canvas.height = document.documentElement.clientHeight,\\n            para = {\\n                num: 100,\\n                color: false,    //  颜色  如果是false 则是随机渐变颜色\\n                r: 0.9,\\n                o: 0.09,         //  判断圆消失的条件，数值越大，消失的越快\\n                a: 1,\\n\\n            },\\n            color,\\n            color2,\\n            round_arr = [];\\n\\n\\n\\n\\n\\n        window.onmousemove = function (event) {\\n\\n            mouseX = event.clientX;\\n            mouseY = event.clientY;\\n\\n            round_arr.push({\\n                mouseX: mouseX,\\n                mouseY: mouseY,\\n                r: para.r,\\n                o: 1\\n            })\\n        };\\n\\n\\n        // 判断参数中是否设置了 color，如果设置了 color，就使用该值、\\n        // 如果参数中的 color 为 false，那么就使用随机的颜色\\n        if (para.color) {\\n            color2 = para.color;\\n        } else {\\n            color = Math.random() * 360;\\n        }\\n\\n        function animate() {\\n\\n            if (!para.color) {\\n                color += .1;\\n                color2 = 'hsl(' + color + ',100%,80%)';\\n            }\\n\\n            ctx.clearRect(0, 0, WIDTH, HEIGHT);\\n\\n            for (var i = 0; i < round_arr.length; i++) {\\n\\n                ctx.fillStyle = color2;\\n                ctx.beginPath();\\n                ctx.arc( round_arr[i].mouseX ,round_arr[i].mouseY,round_arr[i].r,0, Math.PI * 2);\\n                ctx.closePath();\\n                ctx.fill();\\n                round_arr[i].r += para.r;\\n                round_arr[i].o -= para.o;\\n\\n                if( round_arr[i].o <= 0){\\n                    round_arr.splice(i,1);\\n                    i--;\\n                }\\n            }\\n\\n            window.requestAnimationFrame(animate);\\n        };\\n\\n        animate();\\n<\\/script>\\n</body>\\n</html>\\n\\n\")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{518:function(e,t,a){\"use strict\";a.r(t);var r=a(42),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"响应式页面开发\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#响应式页面开发\"}},[e._v(\"#\")]),e._v(\" 响应式页面开发\")]),e._v(\" \"),a(\"p\",[e._v(\"响应式页面开发的能力可以定义为：\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"利用一套代码实现页面的布局和排版以适配不同分辨率的设备。\")])]),e._v(\" \"),a(\"p\",[e._v(\"响应式页面开发要求我们解决两大问题：\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"为不同特性（如横屏还是竖屏等）的浏览器视窗使用不同的样式代码\")]),e._v(\" \"),a(\"li\",[e._v(\"让页面元素的尺寸能够依据浏览器视窗尺寸变化而平滑变化\")])]),e._v(\" \"),a(\"p\",[e._v(\"本小节的学习目标是学会解决上述问题并能够开发这样一个经典的移动端响应式页面：\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/2/8/16175aa4154b7972?w=429&h=877&f=png&s=85282\",alt:\"响应式页面\"}})]),e._v(\" \"),a(\"p\",[e._v(\"我们分 3 个步骤来实现这样一个响应式页面。\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"步骤-1-添加-viewport-meta-标签\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-1-添加-viewport-meta-标签\"}},[e._v(\"#\")]),e._v(\" 步骤 1 - 添加 viewport meta 标签\")]),e._v(\" \"),a(\"p\",[e._v(\"在页头 \"),a(\"code\",[e._v(\"head\")]),e._v(\" 标签内添加 viewport meta 标签是实现响应式页面的第一步。\")]),e._v(\" \"),a(\"p\",[e._v(\"viewport meta 标签源于 Apple 公司，用来定义 iOS Safari 浏览器展示网页内容的可视范围及缩放比率。它虽然没有成为W3C标准，但是被其他绝大多数的移动端浏览器所支持（目前已知 IE Mobile 10 不支持）。W3C 尝试将 viewport meta 标签的功能进行标准化并通过 CSS 的 @viewport 规则来实现同样的功能，但这个标准目前还在草案中，兼容性也没有 viewport meta 标签好。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"pagespeed-准则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pagespeed-准则\"}},[e._v(\"#\")]),e._v(\" PageSpeed 准则\")]),e._v(\" \"),a(\"p\",[e._v(\"Google 网页性能分析工具 \"),a(\"a\",{attrs:{href:\"https://developers.google.com/speed/pagespeed/insights/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"PageSpeed Insights\"),a(\"OutboundLink\")],1),e._v(\" 的其中一条准则就是：\")]),e._v(\" \"),a(\"p\",[e._v(\"网页应在 head 标签内添加 viewport meta 标签，以便优化在移动设备上的展示效果，其推荐的设置为：\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\n')])])]),a(\"h3\",{attrs:{id:\"扩展阅读\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩展阅读\"}},[e._v(\"#\")]),e._v(\" 扩展阅读\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"Mozilla\"),a(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《Using the viewport meta tag to control layout on mobile browsers》\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"li\",[e._v(\"Google\"),a(\"a\",{attrs:{href:\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/#set-the-viewport\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《Configure the viewport》\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"li\",[e._v(\"Mozilla\"),a(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/@viewport\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《@viewport》\"),a(\"OutboundLink\")],1)])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"步骤-2-使用-media-queries\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-2-使用-media-queries\"}},[e._v(\"#\")]),e._v(\" 步骤 2 - 使用 Media Queries\")]),e._v(\" \"),a(\"p\",[e._v(\"Media Queries 是为指定特性的浏览器视窗应用指定样式的手段，可以看成是 CSS 样式的过滤器或拦截器，通常情况下它可以通过 「@media 规则」结合「6 个查询参数」来拦截设备的浏览器特性（如显示类型、视窗高度、视窗宽度、横竖屏等），藉此可以为不同的特性应用不同的样式代码（相当于为不同的设备应用了不同的 CSS 样式）。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"_6-个参数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-个参数\"}},[e._v(\"#\")]),e._v(\" 6 个参数\")]),e._v(\" \"),a(\"p\",[e._v(\"参数名称\")]),e._v(\" \"),a(\"p\",[e._v(\"参数描述）\")]),e._v(\" \"),a(\"p\",[e._v(\"min-width\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗宽度大于或等于指定值时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"p\",[e._v(\"max-width\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗宽度小于或等于指定值时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"p\",[e._v(\"min-height\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗高度大于或等于指定值时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"p\",[e._v(\"max-height\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗高度小于或等于指定值时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"p\",[e._v(\"orientation=portrait\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗高度大于或等于宽度时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"p\",[e._v(\"orientation=landscape\")]),e._v(\" \"),a(\"p\",[e._v(\"当视窗宽度大于高度时，@media 规则下的样式将被应用\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"_2-种用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-种用法\"}},[e._v(\"#\")]),e._v(\" 2 种用法\")]),e._v(\" \"),a(\"p\",[e._v(\"方法 1，使用 link 标签，根据指定特性引入特定的外部样式文件\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v('<link rel=\"stylesheet\" media=\"(max-width: 640px)\" href=\"max-640px.css\">\\n\\n')])])]),a(\"p\",[e._v(\"方法 2，直接在 style 标签或 样式文件内使用 @media 规则\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"@media (max-width: 640px) {\\n  /*当视窗宽度小于或等于 640px 时，这里的样式将生效*/\\n}\\n\\n\")])])]),a(\"h3\",{attrs:{id:\"样式断点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#样式断点\"}},[e._v(\"#\")]),e._v(\" 样式断点\")]),e._v(\" \"),a(\"p\",[e._v(\"Media Queries 所使用的查询参数的临界值又可称为「样式断点」。 在响应式页面开发过程中，对于「样式断点」我们需要掌握 2 个重要的技巧：\")]),e._v(\" \"),a(\"p\",[e._v(\"依据目标设备的分辨率，制定一套合适的样式断点，并为不同的断点定制必要的 CSS 样式。 移动端优先的页面，可使用 min-width 查询参数从小到大来定义断点。 如果我们页面的响应式设计要涵盖从手机到高清大屏幕，什么样的「样式断点」比较合理呢？\")]),e._v(\" \"),a(\"p\",[e._v(\"我们可以从业界一些热门可靠的 CSS 框架中寻找参考答案，例如 \"),a(\"a\",{attrs:{href:\"https://bulma.io/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Bulma\"),a(\"OutboundLink\")],1),e._v(\"，其采用的「样式断点」有 5 个：\")]),e._v(\" \"),a(\"p\",[e._v(\"断点名称\")]),e._v(\" \"),a(\"p\",[e._v(\"断点描述）\")]),e._v(\" \"),a(\"p\",[e._v(\"mobile\")]),e._v(\" \"),a(\"p\",[e._v(\"移动设备断点，视窗宽度 ≤ 768 px\")]),e._v(\" \"),a(\"p\",[e._v(\"tablet\")]),e._v(\" \"),a(\"p\",[e._v(\"平板电脑设备断点，视窗宽度 ≥ 769 px\")]),e._v(\" \"),a(\"p\",[e._v(\"desktop\")]),e._v(\" \"),a(\"p\",[e._v(\"桌面电脑断点，视窗宽度 ≥ 1024 px\")]),e._v(\" \"),a(\"p\",[e._v(\"widescreen\")]),e._v(\" \"),a(\"p\",[e._v(\"宽屏电脑断点，视窗宽度 ≥ 1216 px\")]),e._v(\" \"),a(\"p\",[e._v(\"fullhd\")]),e._v(\" \"),a(\"p\",[e._v(\"高清宽屏电脑断点，视窗宽度 ≥ 1408 px\")]),e._v(\" \"),a(\"p\",[e._v(\"在实际工作中，「样式断点」的制定需要我们同视觉设计师一起沟通确认，因为视觉设计师可能需要根据不同的断点为页面设计不同的视觉表现。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"一个小例子\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一个小例子\"}},[e._v(\"#\")]),e._v(\" 一个小例子\")]),e._v(\" \"),a(\"p\",[e._v(\"如果针对 tablet 及以上的设备定制样式，我们就可以这样写了：\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"@media (min-width: 769px) {\\n  /* tablet 及以上的设备，页面背景色设置为红色 */\\n  body {\\n    background-color: red;\\n  }\\n}\\n\\n\")])])]),a(\"h3\",{attrs:{id:\"课外作业\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#课外作业\"}},[e._v(\"#\")]),e._v(\" 课外作业\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"使用桌面版的 Chrome 浏览器，打开 Google 的 \"),a(\"a\",{attrs:{href:\"https://googlesamples.github.io/web-fundamentals/fundamentals/design-and-ux/responsive/media-queries.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"在线 Media Queries 例子\"),a(\"OutboundLink\")],1),e._v(\" 直观感受下使用 Media Queries 的效果（请注意缩放浏览器窗口观察页面展示效果）\")]),e._v(\" \"),a(\"li\",[e._v(\"了解 \"),a(\"a\",{attrs:{href:\"https://bulma.io/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Bulma\"),a(\"OutboundLink\")],1),e._v(\" 框架\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"扩展阅读-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩展阅读-2\"}},[e._v(\"#\")]),e._v(\" 扩展阅读\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"Google \"),a(\"a\",{attrs:{href:\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《Responsive Web Design Basic》\"),a(\"OutboundLink\")],1)])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"步骤-3-使用-viewport-单位及-rem\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-3-使用-viewport-单位及-rem\"}},[e._v(\"#\")]),e._v(\" 步骤 3 - 使用 Viewport 单位及 rem\")]),e._v(\" \"),a(\"p\",[e._v(\"Media Queries 只解决了「为不同特性的浏览器视窗使用不同的样式代码」的问题，而 Viewport 单位及 rem 的应用，则是为了解决第二个问题：让页面元素的尺寸能够依据浏览器视窗尺寸变化而平滑变化。\")]),e._v(\" \"),a(\"p\",[e._v(\"关于 Viewport 单位及 rem 单位的基本概念，可通过下面的扩展阅读进行回顾复习。\")]),e._v(\" \"),a(\"p\",[e._v(\"BTW：本文所提及的 Viewport，译为「视窗」，其含义与扩展阅读中相关文章中的「视口」一致。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"方法-1-仅使用-vw-作为-css-长度单位\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法-1-仅使用-vw-作为-css-长度单位\"}},[e._v(\"#\")]),e._v(\" 方法 1 - 仅使用 vw 作为 CSS 长度单位\")]),e._v(\" \"),a(\"p\",[e._v(\"在仅使用 vw 单位作为唯一 CSS 单位时，我们需遵守：\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"利用 Sass 函数将设计稿元素尺寸的像素单位转换为 vw 单位\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"// iPhone 6尺寸作为设计稿基准\\n$vw_base: 375; \\n@function vw($px) {\\n    @return ($px / $vm_base) * 100vw;\\n}\\n\\n\")])])]),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[e._v(\"无论是文本字号大小还是布局高宽、间距、留白等都使用 vw 作为 CSS 单位\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\".mod_nav {\\n    background-color: #fff;\\n    &_list {\\n        display: flex;\\n        padding: vw(15) vw(10) vw(10); // 内间距\\n        &_item {\\n            flex: 1;\\n            text-align: center;\\n            font-size: vw(10); // 字体大小\\n            &_logo {\\n                display: block;\\n                margin: 0 auto;\\n                width: vw(40); // 宽度\\n                height: vw(40); // 高度\\n                img {\\n                    display: block;\\n                    margin: 0 auto;\\n                    max-width: 100%;\\n                }\\n            }\\n            &_name {\\n                margin-top: vw(2);\\n            }\\n        }\\n    }\\n}\\n\\n\")])])]),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[e._v(\"1 物理像素线（也就是普通屏幕下 1px ，高清屏幕下 0.5px 的情况）采用 transform 属性 scale 实现\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\".mod_grid {\\n    position: relative;\\n    &::after {\\n        // 实现1物理像素的下边框线\\n        content: '';\\n        position: absolute;\\n        z-index: 1;\\n        pointer-events: none;\\n        background-color: #ddd;\\n        height: 1px;\\n        left: 0;\\n        right: 0;\\n        top: 0;\\n        @media only screen and (-webkit-min-device-pixel-ratio: 2) {\\n            -webkit-transform: scaleY(0.5);\\n            -webkit-transform-origin: 50% 0%;\\n        }\\n    }\\n    ...\\n}\\n\\n\")])])]),a(\"ol\",{attrs:{start:\"4\"}},[a(\"li\",[e._v(\"对于需要保持高宽比的图，应改用 padding-top 实现\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\".mod_banner {\\n    position: relative;\\n    // 使用padding-top 实现宽高比为 100:750 的图片区域\\n    padding-top: percentage(100/750);\\n    height: 0;\\n    overflow: hidden;\\n    img {\\n        width: 100%;\\n        height: auto;\\n        position: absolute;\\n        left: 0;\\n        top: 0; \\n    }\\n}\\n\\n\")])])]),a(\"p\",[e._v(\"由此，我们不需要增加其他任何额外的脚本代码就能够轻易实现一个常见布局的响应式页面，效果如下：\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/2/8/16175d6ffdfe7c0e?w=1409&h=685&f=png&s=207733\",alt:\"vw和rem\"}})]),e._v(\" \"),a(\"p\",[e._v(\"体验地址：\"),a(\"a\",{attrs:{href:\"https://jdc.jd.com/demo/ting/vw_layout.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"视口单位布局 —— vw 单位\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"友情提醒：桌面版 Chrome 支持的字体大小默认不能小于 12PX，可通过 「chrome://settings/ 显示高级设置－网络内容－自定义字体－最小字号（滑到最小）」设置后再到模拟器里体验 DEMO。\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"方法-2-vw-搭配-rem-寻找最优解\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法-2-vw-搭配-rem-寻找最优解\"}},[e._v(\"#\")]),e._v(\" 方法 2 - vw 搭配 rem，寻找最优解\")]),e._v(\" \"),a(\"p\",[e._v(\"方法 1 实现的响应式页面虽然看起来适配得很好，但是你会发现由于它是利用 Viewport 单位实现的布局，依赖于视窗大小而自动缩放，无论视窗过大还是过小，它也随着视窗过大或者过小，失去了最大最小宽度的限制，有时候不一定是我们所期待的展示效果。试想一下一个 750px 宽的设计稿在 1920px 的大屏显示器上的糟糕样子。\")]),e._v(\" \"),a(\"p\",[e._v(\"当然，你可以不在乎移动端页面在 PC 上的展现效果，但如果有低成本却有效的办法来修复这样的小瑕疵，是真切可以为部分用户提升体验的。\")]),e._v(\" \"),a(\"p\",[e._v(\"我们可以结合 rem 单位来实现页面的布局。rem 弹性布局的核心在于根据视窗大小变化动态改变根元素的字体大小，那么我们可以通过以下步骤来进行优化：\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"给根元素的字体大小设置随着视窗变化而变化的 vw 单位，这样就可以实现动态改变其大小\")]),e._v(\" \"),a(\"li\",[e._v(\"其他元素的文本字号大小、布局高宽、间距、留白都使用 rem 单位\")]),e._v(\" \"),a(\"li\",[e._v(\"限制根元素字体大小的最大最小值，配合 body 加上最大宽度和最小宽度，实现布局宽度的最大最小限制\")])]),e._v(\" \"),a(\"p\",[e._v(\"核心代码实现如下：\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"// rem 单位换算：定为 75px 只是方便运算，750px-75px、640-64px、1080px-108px，如此类推\\n$vw_fontsize: 75; // iPhone 6尺寸的根元素大小基准值\\n@function rem($px) {\\n     @return ($px / $vw_fontsize ) * 1rem;\\n}\\n// 根元素大小使用 vw 单位\\n$vw_design: 750;\\nhtml {\\n    font-size: ($vw_fontsize / ($vw_design / 2)) * 100vw; \\n    // 同时，通过Media Queries 限制根元素最大最小值\\n    @media screen and (max-width: 320px) {\\n        font-size: 64px;\\n    }\\n    @media screen and (min-width: 540px) {\\n        font-size: 108px;\\n    }\\n}\\n// body 也增加最大最小宽度限制，避免默认100%宽度的 block 元素跟随 body 而过大过小\\nbody {\\n    max-width: 540px;\\n    min-width: 320px;\\n}\\n\\n\")])])]),a(\"p\",[e._v(\"体验地址：\"),a(\"a\",{attrs:{href:\"https://jdc.jd.com/demo/ting/vw_rem_layout.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://jdc.jd.com/demo/ting/vw_rem_layout.html\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"h3\",{attrs:{id:\"扩展阅读-3\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩展阅读-3\"}},[e._v(\"#\")]),e._v(\" 扩展阅读\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"Mozilla\"),a(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/length\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《Length》\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"li\",[e._v(\"凹凸实验室 \"),a(\"a\",{attrs:{href:\"https://aotu.io/notes/2017/04/28/2017-4-28-CSS-viewport-units/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"《利用视口单位实现适配布局》\"),a(\"OutboundLink\")],1)])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"小结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),a(\"p\",[e._v(\"在实际工作过程中，考虑到设计以及开发成本，视觉设计师是不大可能为每种不同分辨率的设备分别设计不同的稿子的，拿移动端页面来说，通常会以 iPhone 7 的分辨率（宽为 750 px）作为基准分辨率来出设计稿。因此「响应式页面开发」也便成为了移动互联网时代「H5 开发」的必备技能。\")]),e._v(\" \"),a(\"p\",[e._v(\"本小节所介绍的「利用 Viewport 单位及 rem 实现响应式页面」，相对于传统的 JavaScript 脚本结合 rem 的方式来得更简单优雅。\")])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}
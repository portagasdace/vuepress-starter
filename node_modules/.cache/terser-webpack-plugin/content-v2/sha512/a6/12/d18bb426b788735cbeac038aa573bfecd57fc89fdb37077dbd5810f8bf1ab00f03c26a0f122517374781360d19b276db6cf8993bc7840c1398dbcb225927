{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[315],{671:function(t,a,e){\"use strict\";e.r(a);var n=e(42),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"blockquote\",[e(\"p\",[t._v(\"本节代码对应 GitHub 分支: chapter7\")])]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/sanyuan0704/react-cloud-music/tree/chapter7\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"仓库传送门\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"axios-请求准备\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#axios-请求准备\"}},[t._v(\"#\")]),t._v(\" axios 请求准备\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//api/request.js\\nexport const getSingerInfoRequest = id => {\\n  return axiosInstance.get (`/artists?id=${id}`);\\n};\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"redux-层开发\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redux-层开发\"}},[t._v(\"#\")]),t._v(\" redux 层开发\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_1-声明初始化-state\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-声明初始化-state\"}},[t._v(\"#\")]),t._v(\" 1. 声明初始化 state\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//store/reducer.js\\nimport * as actionTypes from './constants';\\nimport { fromJS } from 'immutable';\\n\\nconst defaultState = fromJS ({\\n  artist: {},\\n  songsOfArtist: [],\\n  loading: true\\n});\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_2-定义-constants\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-定义-constants\"}},[t._v(\"#\")]),t._v(\" 2. 定义 constants\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//store/constants.js\\nexport const CHANGE_ARTIST = 'singer/CHANGE_ARTIST';\\nexport const CHANGE_SONGS_OF_ARTIST = 'singer/CHANGE_SONGS_OF_ARTIST';\\nexport const CHANGE_ENTER_LOADING = 'singer/CHNAGE_ENTER_LOADING';\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_3-定义-reducer-函数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-定义-reducer-函数\"}},[t._v(\"#\")]),t._v(\" 3. 定义 reducer 函数\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//store/reducer.js\\nexport default (state = defaultState, action) => {\\n  switch (action.type) {\\n    case actionTypes.CHANGE_ARTIST:\\n      return state.set ('artist', action.data);\\n    case actionTypes.CHANGE_SONGS_OF_ARTIST:\\n      return state.set ('songsOfArtist', action.data);\\n    case actionTypes.CHANGE_ENTER_LOADING:\\n      return state.set ('loading', action.data);\\n    default:\\n      return state;\\n  }\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_4-编写具体的-action\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-编写具体的-action\"}},[t._v(\"#\")]),t._v(\" 4. 编写具体的 action\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\nimport { CHANGE_SONGS_OF_ARTIST, CHANGE_ARTIST, CHANGE_ENTER_LOADING } from './constants';\\nimport { fromJS } from 'immutable';\\nimport { getSingerInfoRequest } from './../../../api/request';\\n\\nconst changeArtist = (data) => ({\\n  type: CHANGE_ARTIST,\\n  data: fromJS (data)\\n});\\n\\nconst changeSongs = (data) => ({\\n  type: CHANGE_SONGS_OF_ARTIST,\\n  data: fromJS (data)\\n})\\nexport const changeEnterLoading = (data) => ({\\n  type: CHANGE_ENTER_LOADING,\\n  data\\n})\\n\\nexport const getSingerInfo = (id) => {\\n  return dispatch => {\\n    getSingerInfoRequest (id).then (data => {\\n      dispatch (changeArtist (data.artist));\\n      dispatch (changeSongs (data.hotSongs));\\n      dispatch (changeEnterLoading (false));\\n    })\\n  }\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"_5-将相关变量导出\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-将相关变量导出\"}},[t._v(\"#\")]),t._v(\" 5. 将相关变量导出\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"//index.js\\nimport reducer from './reducer'\\nimport * as actionCreators from './actionCreators'\\n\\nexport { reducer, actionCreators };\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"组件连接-redux\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件连接-redux\"}},[t._v(\"#\")]),t._v(\" 组件连接 Redux\")]),t._v(\" \"),e(\"p\",[t._v(\"首先，需要将 Singer 下的 reducer 注册到全局 store，在 src 目录下的 store/reducer.js 中，内容如下:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import { combineReducers } from 'redux-immutable';\\nimport { reducer as recommendReducer } from '../application/Recommend/store/index';\\nimport { reducer as singersReducer } from '../application/Singers/store/index';\\nimport { reducer as rankReducer } from '../application/Rank/store/index';\\nimport { reducer as albumReduimport { reducer as singerInfoReducer } from \\\"../application/Singer/store/index\\\";\\nimport { reducer as singerInfoReducer } from \\\"../application/Singer/store/index\\\";\\n\\nexport default combineReducers ({\\n  recommend: recommendReducer,\\n  singers: singersReducer ,\\n  rank: rankReducer,\\n  album: albumReducer,\\n  singerInfo: singerInfoReducer\\n});\\n\\n\")])])]),e(\"p\",[t._v(\"现在在 Singer/index.js 中，准备连接 Redux。增加代码：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('import { connect } from \\'react-redux\\';\\nimport { getSingerInfo, changeEnterLoading } from \"./store/actionCreators\";\\n\\n// 组件代码省略\\n\\n// 映射 Redux 全局的 state 到组件的 props 上\\nconst mapStateToProps = state => ({\\n  artist: state.getIn ([\"singerInfo\", \"artist\"]),\\n  songs: state.getIn ([\"singerInfo\", \"songsOfArtist\"]),\\n  loading: state.getIn ([\"singerInfo\", \"loading\"]),\\n});\\n// 映射 dispatch 到 props 上\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    getSingerDataDispatch (id) {\\n      dispatch (changeEnterLoading (true));\\n      dispatch (getSingerInfo (id));\\n    }\\n  };\\n};\\n\\n// 将 ui 组件包装成容器组件\\nexport default connect (mapStateToProps,mapDispatchToProps)(React.memo (Singer));\\n\\n')])])]),e(\"p\",[t._v(\"同时组件代码做如下添加:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"// 记得删除 mock 数据\\n\\nconst { \\n  artist: immutableArtist, \\n  songs: immutableSongs, \\n  loading,\\n} = props;\\n\\nconst { getSingerDataDispatch } = props;\\n\\nconst artist = immutableArtist.toJS ();\\nconst songs = immutableSongs.toJS ();\\n\\n\")])])]),e(\"p\",[t._v(\"同时 SongList 组件中传入的 songs 参数应该改为现在从 redux 取得的 songs 变量。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"组件对接真实数据\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件对接真实数据\"}},[t._v(\"#\")]),t._v(\" 组件对接真实数据\")]),t._v(\" \"),e(\"p\",[t._v(\"很简单，我们在 useEffect 中添加请求代码即可:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"useEffect (() => {\\n  const id = props.match.params.id;\\n  getSingerDataDispatch (id);\\n  // 之前写的 UI 处理逻辑省略\\n}, []);\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"添加-loading\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#添加-loading\"}},[t._v(\"#\")]),t._v(\" 添加 loading\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('import Loading from \"./../../baseUI/loading/index\";\\n\\nreturn (\\n  //Container 组件下面\\n  { loading ? (<Loading></Loading>) : null}\\n)\\n\\n')])])]),e(\"p\",[t._v(\"至此，一个精美的歌手详情页就打造完成了。恭喜你，又解锁了一个新的模块。\")]),t._v(\" \"),e(\"p\",[t._v(\"下一章，我们开始本项目最复杂、最具有挑战性的模块：播放器模块开发。大家加油！\")])])}),[],!1,null,null,null);a.default=s.exports}}]);","extractedComments":[]}
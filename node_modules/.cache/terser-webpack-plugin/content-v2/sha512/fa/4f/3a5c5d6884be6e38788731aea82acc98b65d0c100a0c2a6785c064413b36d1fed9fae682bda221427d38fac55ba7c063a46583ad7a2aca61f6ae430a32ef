{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[451],{808:function(e,n,t){\"use strict\";t.r(n);var a=t(42),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"实战篇-3-天气页面样式布局开发\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实战篇-3-天气页面样式布局开发\"}},[e._v(\"#\")]),e._v(\" 实战篇 3：天气页面样式布局开发\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"先写一个-icon-组件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#先写一个-icon-组件\"}},[e._v(\"#\")]),e._v(\" 先写一个 icon 组件\")]),e._v(\" \"),t(\"p\",[e._v(\"「新鲜天气」项目中，用到的 icon 比较多，比如天气图标、心情签到的表情，都是来自 icon 组件，本小节介绍下如何自定义个 icon 组件。\")]),e._v(\" \"),t(\"p\",[e._v(\"我们项目的自定义组件放在 client/components 目录下，首先在其目录下创建 icon 目录，创建组件的页面、样式和 JS 文件：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"client/components\\n└── icon\\n    ├── index.js\\n    ├── index.json\\n    ├── index.scss\\n    ├── index.wxml\\n    └── weather.ttf\\n\\n\")])])]),t(\"p\",[e._v(\"组件需要在自己的页面配置文件（page.json，即 index.json）中声明自己是一个组件：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('// index.json\\n{\\n  \"component\": true\\n}\\n\\n')])])]),t(\"h3\",{attrs:{id:\"编写组件代码\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写组件代码\"}},[e._v(\"#\")]),e._v(\" 编写组件代码\")]),e._v(\" \"),t(\"p\",[e._v(\"icon 组件的 WXML 部分代码很简单：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--index.wxml--\\x3e\\n<text class=\"icon icon-{{ type }}\"></text>\\n\\n')])])]),t(\"p\",[e._v(\"笔者定义了一个 icon 的类型字段，该字段由使用方传入，所以对应 JS 的写法为：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// index.js\\nComponent({\\n  properties: {\\n    type: {\\n      type: String,\\n      value: ''\\n    }\\n  }\\n});\\n\\n\")])])]),t(\"p\",[e._v(\"JS 中使用了 \"),t(\"code\",[e._v(\"Component\")]),e._v(\" 构造器，调用 \"),t(\"code\",[e._v(\"Component\")]),e._v(\" 构造器时可以指定组件的属性、数据、方法等。上面代码中定义了组件可以接受的 \"),t(\"code\",[e._v(\"properties\")]),e._v(\" 有 \"),t(\"code\",[e._v(\"type\")]),e._v(\"，\"),t(\"code\",[e._v(\"type\")]),e._v(\" 是一个字符串类型的值，默认值是空字符串。\")]),e._v(\" \"),t(\"p\",[e._v(\"跟所有的 icon 样式写法一样，笔者通过图标共有的 class \"),t(\"code\",[e._v(\"icon\")]),e._v(\" 定义了统一的样式，包括字体、大小等：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('/* index.scss */\\n@font-face {\\n  font-family: \"weather\";\\n  src: url(\"./weather.ttf\") format(\"truetype\");\\n}\\n\\n.icon {\\n  font-style: normal;\\n  -webkit-font-smoothing: antialiased;\\n  -webkit-text-stroke-width: .4rpx;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.icon::after,\\n.icon::before {\\n  font-family: weather !important;\\n}\\n\\n')])])]),t(\"p\",[e._v(\"然后通过 \"),t(\"code\",[e._v(\".icon-\"+e._s(e.type))]),e._v(\" 定义了不同的图标对应 class 的 content：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('/* index.scss */\\n.icon.icon-xiaolian:before {\\n  content: \"\\\\e60f\";\\n}\\n\\n.icon.icon-shidu:before {\\n  content: \"\\\\e610\";\\n}\\n\\n.icon.icon-zhongyu:before {\\n  content: \"\\\\e611\";\\n}\\n\\n')])])]),t(\"h3\",{attrs:{id:\"字体文件的引用问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字体文件的引用问题\"}},[e._v(\"#\")]),e._v(\" 字体文件的引用问题\")]),e._v(\" \"),t(\"p\",[e._v(\"在小程序内，不支持使用 webfont 的 \"),t(\"code\",[e._v(\"@font-face\")]),e._v(\" 引入本地的 ttf 等文件，这时候需要使用线上地址或者 \"),t(\"code\",[e._v(\"base64\")]),e._v(\"。\")]),e._v(\" \"),t(\"p\",[e._v(\"在新鲜天气的开发中，笔者使用了 Gulp 直接将 webfont 转换成 \"),t(\"code\",[e._v(\"base64\")]),e._v(\" 引入，这样写代码的时候就不需要关注这些事情了，具体做法为：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"const rename = require('gulp-rename')\\nconst postcss = require('gulp-postcss')\\nconst pxtorpx = require('postcss-px2rpx')\\nconst base64 = require('postcss-font-base64')\\nconst combiner = require('stream-combiner2')\\n\\ngulp.task('wxss', () => {\\n  const combined = combiner.obj([\\n    gulp.src(`${src}/**/*.{wxss,scss}`),\\n    sass().on('error', sass.logError),\\n    postcss([pxtorpx(), base64()]),\\n    rename((path) => (path.extname = '.wxss')),\\n    gulp.dest(dist)\\n  ])\\n\\n  combined.on('error', handleError)\\n})\\n\\n\")])])]),t(\"blockquote\",[t(\"p\",[e._v(\"除了字体以外，图片类静态资源的引入可以使用本地资源相对路径、\"),t(\"code\",[e._v(\"base64\")]),e._v(\" 和线上地址，如果是线上地址，则必须是以 \"),t(\"code\",[e._v(\"https\")]),e._v(\" 开头的协议。\")])]),e._v(\" \"),t(\"h3\",{attrs:{id:\"在项目中使用自定义组件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在项目中使用自定义组件\"}},[e._v(\"#\")]),e._v(\" 在项目中使用自定义组件\")]),e._v(\" \"),t(\"p\",[e._v(\"在需要使用自定义组件的页面配置文件 \"),t(\"code\",[e._v(\"page.json\")]),e._v(\" 中添加 \"),t(\"code\",[e._v(\"usingComponents\")]),e._v(\" 字段：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"usingComponents\": {\\n  \"icon\": \"../../components/icon/index\"\\n}\\n\\n')])])]),t(\"p\",[e._v(\"其中，\"),t(\"code\",[e._v(\"icon\")]),e._v(\" 就是我们自定义的标签名称，后面的值则是相对于页面文件、icon 组件对应的路径。\")]),e._v(\" \"),t(\"p\",[e._v(\"这样引入后，在页面中就可以直接通过 icon 标签来使用自定义的 icon 组件了：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--定位icon--\\x3e\\n<icon type=\"dingwei\" />\\n\\x3c!--天气icon--\\x3e\\n<icon type=\"{{ today.icon }}\" class=\"logo\"></icon>\\n\\n')])])]),t(\"p\",[e._v(\"也可以使用 CSS（WXSS）来控制它的样式：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"icon {\\n  float: right;\\n  font-size: 44rpx;\\n  height: 44rpx;\\n  width: 44rpx;\\n}\\n\\n\")])])]),t(\"blockquote\",[t(\"p\",[t(\"strong\",[e._v(\"如何编辑字体\")]),e._v(\"：icon 组件使用的字体是来自 \"),t(\"a\",{attrs:{href:\"http://iconfont.cn\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"iconfont.cn\"),t(\"OutboundLink\")],1),e._v(\"，然后在\"),t(\"a\",{attrs:{href:\"http://fontstore.baidu.com/store\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"百度的字体编辑器\"),t(\"OutboundLink\")],1),e._v(\"中进行编辑。\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"天气预报页面\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#天气预报页面\"}},[e._v(\"#\")]),e._v(\" 天气预报页面\")]),e._v(\" \"),t(\"p\",[e._v(\"天气预报是小程序的第一个页面，首先在 \"),t(\"code\",[e._v(\"app.json\")]),e._v(\" 中的 \"),t(\"code\",[e._v(\"pages\")]),e._v(\" 处添加入口：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"pages\": [\"pages/weather/index\"]\\n\\n')])])]),t(\"blockquote\",[t(\"p\",[e._v(\"如果有多个页面，当前开发的页面可以放到 \"),t(\"code\",[e._v(\"pages\")]),e._v(\" 数组的最前面，这样小程序的默认页面就是当前开发的页面，方便实时开发和查看效果。\")])]),e._v(\" \"),t(\"p\",[e._v(\"添加完入口之后，在 \"),t(\"code\",[e._v(\"client/pages\")]),e._v(\" 目录下创建 \"),t(\"code\",[e._v(\"weather\")]),e._v(\" 文件夹，目录结构如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"pages\\n└── weather\\n    ├── index.js\\n    ├── index.json\\n    ├── index.scss\\n    ├── index.wxml\\n    └── index.wxs\\n\\n\")])])]),t(\"p\",[e._v(\"因为我们要使用上文完成的 icon 组件，所以在 \"),t(\"code\",[e._v(\"index.json\")]),e._v(\" 中添加 \"),t(\"code\",[e._v(\"usingComponents\")]),e._v(\" 字段，天气页面还支持下拉刷新，于是最终版本的 \"),t(\"code\",[e._v(\"index.json\")]),e._v(\" 配置如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('//index.json\\n{\\n  \"enablePullDownRefresh\": true,\\n  \"usingComponents\": {\\n    \"icon\": \"../../components/icon/index\"\\n  }\\n}\\n\\n')])])]),t(\"h2\",{attrs:{id:\"页面整体框架\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#页面整体框架\"}},[e._v(\"#\")]),e._v(\" 页面整体框架\")]),e._v(\" \"),t(\"p\",[e._v(\"首先我们来完成页面的整体框架 WXML 代码，页面整体包裹在 \"),t(\"code\",[e._v(\".wrapper\")]),e._v(\" 中，页面使用 \"),t(\"code\",[e._v(\".container\")]),e._v(\" 来区分不同的页面模块，模块之间通过 \"),t(\"code\",[e._v(\".container\")]),e._v(\" 的 \"),t(\"code\",[e._v(\"margin-bottom\")]),e._v(\" 属性隔开。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--weather/index.wxml--\\x3e\\n<view class=\"wrapper\" style=\"background: url({{backgroundImage}}) center -178rpx / 100% no-repeat {{backgroundColor}};\">\\n\\n  <view class=\"container\" id=\"canvas-wrapper\">\\n    <view class=\"now\">\\n      \\x3c!--当前实时天气和空气质量--\\x3e\\n    </view>\\n    <view class=\"two-days\">\\n      \\x3c!--今明两天天气--\\x3e\\n    </view>\\n  </view>\\n  <view class=\"weather\" style=\"background-color: {{backgroundColor}}\">\\n    <view class=\"container\">\\n      \\x3c!--24 小时天气--\\x3e\\n    </view>\\n    <view class=\"container\">\\n      <view class=\"week\">\\n        \\x3c!--七天天气--\\x3e\\n      </view>\\n    </view>\\n    <view class=\"container\">\\n      <view class=\"life-style\">\\n         \\x3c!--生活指数--\\x3e\\n      </view>\\n    </view>\\n  </view>\\n</view>\\n\\n')])])]),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.scss\\n// 定义 container 间隔\\n$grid-margin: 20rpx;\\n.container {\\n  margin-bottom: $grid-margin;\\n  max-width: 750rpx;\\n  box-sizing: border-box;\\n  color: #fff;\\n}\\n\\n\")])])]),t(\"p\",[t(\"code\",[e._v(\".wrapper\")]),e._v(\" 的背景图片和 \"),t(\"code\",[e._v(\".weather\")]),e._v(\" 的背景色都是根据天气情况更换的，需要根据天气数据赋值，这里笔者设置了默认值：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"Page({\\n  data: {\\n    // 页面数据\\n    backgroundImage: '../../images/cloud.jpg',\\n    backgroundColor: '#62aadc'\\n    ...\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"实时天气部分页面布局\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实时天气部分页面布局\"}},[e._v(\"#\")]),e._v(\" 实时天气部分页面布局\")]),e._v(\" \"),t(\"p\",[e._v(\"天气页面的「实时天气」部分页面布局相对复杂，最终效果如图所示。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653144072e21bbe?w=746&h=778&f=jpeg&s=109939\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"首先是当前天气部分页面结构：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--weather/index.wxml--\\x3e\\n<view class=\"now\">\\n  <view class=\"location\" bindtap=\"chooseLocation\">\\n    <icon type=\"dingwei\" />\\n    <text>{{ address }}</text>\\n  </view>\\n  <view class=\"air-quality\" wx:if=\"{{air.aqi}}\">\\n    <text class=\"circle\" style=\"background: {{ air.color }}\"></text>\\n    <text class=\"value\">{{ air.name }} {{ air.aqi }}</text>\\n  </view>\\n  <view class=\"now-weather\">\\n    <view class=\"temp\">\\n      <text>{{ current.temp }}</text>\\n      <text class=\"degree\">°</text>\\n    </view>\\n    <view class=\"cur-weather\">\\n      <view class=\"inline\">\\n        <icon type=\"{{ current.icon }}\"></icon>\\n        <text>{{ current.weather }}</text>\\n      </view>\\n      <view class=\"inline today\">\\n        <text class=\"item\">{{ utils.humidity(current.humidity) }}</text>\\n        <text class=\"item\">{{ utils.wind(current.wind, current.windLevel) }}</text>\\n      </view>\\n    </view>\\n    <view class=\"tips\" wx:if=\"{{tips}}\">\\n      <text>{{tips}}</text>\\n    </view>\\n  </view>\\n</view>\\n\\n')])])]),t(\"p\",[e._v(\"上面页面需要的 \"),t(\"code\",[e._v(\"AppData\")]),e._v(\" 示例数据为：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"air\": {\\n  \"status\": 0,\\n  \"aqi\": \"77\",\\n  \"color\": \"#00cf9a\",\\n  \"name\": \"良\"\\n},\\n\"current\": {\\n  \"backgroundImage\": \"https://tianqi-1d3bf9.tcb.qcloud.la/bg/day/overcast.jpg\",\\n  \"backgroundColor\": \"#5c7a93\",\\n  \"temp\": \"35\",\\n  \"wind\": \"南风\",\\n  \"windLevel\": \"1\",\\n  \"weather\": \"阴\",\\n  \"humidity\": \"73\",\\n  \"icon\": \"yin\",\\n  \"ts\": \"2018-08-12 14:54\"\\n},\\n\\n')])])]),t(\"p\",[e._v(\"上面的 WXML 中，笔者还使用了 \"),t(\"code\",[e._v(\"utils\")]),e._v(\" 的两个方法。\"),t(\"code\",[e._v(\"utils\")]),e._v(\"的方法来自于\"),t(\"code\",[e._v(\"index.wxs\")]),e._v(\"，要使用\"),t(\"code\",[e._v(\"index.wxs\")]),e._v(\"需要在页面的顶部引入它：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('<wxs src=\"./index.wxs\" module=\"utils\"></wxs>\\n\\n')])])]),t(\"p\",[e._v(\"WXS 相对 JS 来说语法更加受限，但是因为 WXML 的「双括号」数据绑定中对表达式的支持不够完善，我们在小程序开发中，可以使用 WXS 来增强 WXML 的表达式，其中 \"),t(\"code\",[e._v(\"humidity\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"wind\")]),e._v(\" 的 WXS 代码如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.wxs\\nmodule.exports = {\\n  // 湿度处理\\n  humidity: function(h) {\\n    if (h) {\\n      return '湿度 ' + h + '%'\\n    }\\n    return h\\n  },\\n  // 根据风的 code 和风力输出文案\\n  wind: function(code, level) {\\n    if (!code) {\\n      return '无风'\\n    }\\n    if (level) {\\n      level = level.toString().split('-')\\n      level = level[level.length - 1]\\n      return code + ' ' + level + '级'\\n    }\\n    return code\\n  }\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"实时天气模块中，今明两天的 WXML 结构如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--weather/index.wxml--\\x3e\\n\\x3c!--今明两天天气数据--\\x3e\\n<view class=\"two-days\">\\n  <view class=\"item\">\\n    <view class=\"top\">\\n      <text class=\"date\">今天</text>\\n      <text class=\"temp\">{{ today.temp }}</text>\\n    </view>\\n    <view class=\"bottom\">\\n      <text>{{ today.weather }}</text>\\n      <icon type=\"{{ today.icon }}\" class=\"logo\"></icon>\\n    </view>\\n  </view>\\n  <view class=\"item\">\\n    <view class=\"top\">\\n      <text class=\"date\">明天</text>\\n      <text class=\"temp\">{{ tomorrow.temp }}</text>\\n    </view>\\n    <view class=\"bottom\">\\n      <text>{{ tomorrow.weather }}</text>\\n      <icon type=\"{{ tomorrow.icon }}\" class=\"logo\"></icon>\\n    </view>\\n  </view>\\n</view>\\n\\n')])])]),t(\"p\",[e._v(\"由此可见，需要的 \"),t(\"code\",[e._v(\"AppData\")]),e._v(\" 示例数据结构是：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"today\": {\\n  \"temp\": \"24/30°\",\\n  \"icon\": \"leizhenyu\",\\n  \"weather\": \"雷阵雨\"\\n},\\n\"tomorrow\": {\\n  \"temp\": \"24/30°\",\\n  \"icon\": \"leizhenyu\",\\n  \"weather\": \"雷阵雨\"\\n},\\n\\n')])])]),t(\"p\",[e._v(\"需要说明的是，在今明两天天气布局中，笔者使用了 flex 布局，flex 布局使得小程序的页面布局更灵活，结构更明晰：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.scss\\n@mixin flex-row {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.today {\\n  @include flex-row;\\n  .item {\\n    display: block;\\n    flex: 1;\\n    padding-right: 16rpx;\\n    margin: 0 16rpx 0 0;\\n    border-right: 2rpx solid rgba(255, 255, 255, .4);\\n  }\\n}\\n\\n\")])])]),t(\"h3\",{attrs:{id:\"屏幕适配-自定义导航样式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#屏幕适配-自定义导航样式\"}},[e._v(\"#\")]),e._v(\" 屏幕适配：自定义导航样式\")]),e._v(\" \"),t(\"p\",[e._v(\"为了UI效果，笔者使用了自定义导航条样式，即在\"),t(\"code\",[e._v(\"app.json\")]),e._v(\"中增加配置：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"window\": {\\n  \"navigationStyle\": \"custom\"\\n},\\n\\n')])])]),t(\"p\",[e._v(\"经过上面配置，就没有导航条了，整个界面直接是天气预报页面的背景图，现在遇见了小程序的屏幕适配问题，笔者界面设计是定位地址文案部分跟小程序的胶囊操作区域对齐，如下图所示：\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/18/16548a38d0affb97?w=376&h=396&f=jpeg&s=32583\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"但是如果只是简单的使用 rpx，在 iPhone 6 的视觉稿（具体原因见\"),t(\"a\",{attrs:{href:\"https://juejin.im/book/5b70f101e51d456669381803/section/5b70f117518825612a2277ea\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"基础篇 1：小程序开发基础知识\"),t(\"OutboundLink\")],1),e._v(\"）标准下实现：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--pages/weather/index.wxml--\\x3e\\n<view class=\"container\" id=\"canvas-wrapper\" style=\"padding-top: 64rpx\">\\n\\n')])])]),t(\"p\",[e._v(\"上面直接使用 rpx 来布局，由于不同手机的屏幕尺寸不同，实际产生的效果是：\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/18/16548a3baaab5093?w=376&h=340&f=png&s=65502\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"要做好屏幕适配，需要用到 rpx 的基础知识和\"),t(\"code\",[e._v(\"wx.getSystemInfo()\")]),e._v(\"方法。\")]),e._v(\" \"),t(\"p\",[e._v(\"我们通过学习基础知识了解，rpx 是按照屏幕宽度来定义的，\"),t(\"strong\",[e._v(\"不管屏幕多宽，屏幕宽度始终定义为 750rpx\")]),e._v(\"，宽度不同，则 1rpx 实际宽度不同，如果用这个不确定的 rpx 来对高度做统一是实现不了的，所以我们固定使用\"),t(\"code\",[e._v(\"padding-top: 64rpx\")]),e._v(\"实际根据不同屏幕它是高度不一致的。手机都有状态栏（\"),t(\"code\",[e._v(\"statusBar\")]),e._v(\"），状态栏高度也是不同手机不同的尺寸，所以，最终在不同的手机会出现上面图片的效果。\")]),e._v(\" \"),t(\"p\",[e._v(\"要解决这个屏幕适配问题，即确定一个固定的 \"),t(\"code\",[e._v(\"padding-top\")]),e._v(\" 值，需要将状态栏高度和 rpx 的实际对应 px 值进行统一计算。\")]),e._v(\" \"),t(\"p\",[e._v(\"首先，在页面结构中，使用 \"),t(\"code\",[e._v(e._s(e.paddingTop))]),e._v(\" 来表示 \"),t(\"code\",[e._v(\"padding-top\")]),e._v(\" 值。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--pages/weather/index.wxml--\\x3e\\n<view class=\"container\" id=\"canvas-wrapper\" style=\"padding-top: {{paddingTop}}px\">\\n\\n')])])]),t(\"p\",[e._v(\"这个值是计算之后的 \"),t(\"code\",[e._v(\"px\")]),e._v(\" 值，所以单位是 \"),t(\"code\",[e._v(\"px\")]),e._v(\"！这个值在 iPhone 6 手机中是\"),t(\"code\",[e._v(\"32px\")]),e._v(\"（iPhone 6 屏幕宽度为375px，所以\"),t(\"code\",[e._v(\"750rpx = 375px\")]),e._v(\"）。下面我们需要获取系统的状态栏高度（statusBarHeight），可以使用\"),t(\"code\",[e._v(\"wx.getSystemInfo()\")]),e._v(\"或者它的同步方法\"),t(\"code\",[e._v(\"wx.getSystemInfoSync()\")]),e._v(\" 获取：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"//pages/weather/index.js\\nwx.getSystemInfo({\\n  success: (res) => {\\n    // 状态栏高度和屏幕宽度，单位都是px\\n    console.log(res.statusBarHeight, res.windowWidth)\\n  }\\n})\\n\\n\")])])]),t(\"p\",[e._v(\"经过获取状态栏高度发现，iPhone 6 手机的状态栏高度为\"),t(\"code\",[e._v(\"20px\")]),e._v(\"，所以计算出差值为\"),t(\"code\",[e._v(\"12px\")]),e._v(\"（\"),t(\"code\",[e._v(\"32px - 20px\")]),e._v(\"）。下面我们只需要将状态栏高度获取之后，加上\"),t(\"code\",[e._v(\"12px\")]),e._v(\"即可。所以最终\"),t(\"code\",[e._v(\"paddingTop\")]),e._v(\"计算代码是：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"//pages/weather/index.js\\nwx.getSystemInfo({\\n  success: (res) => {\\n    // 状态栏高度和屏幕宽度\\n    // console.log(res.statusBarHeight, res.windowWidth)\\n    // console.log(scale * res.statusBarHeight*2+24)\\n    this.setData({\\n      paddingTop: res.statusBarHeight+12\\n    })\\n  }\\n})\\n\\n\")])])]),t(\"blockquote\",[t(\"p\",[t(\"strong\",[e._v(\"Tips\")]),e._v(\"：rpx 并不是「万能油」，根据实际情况也可以使用 px 来解决实际问题。\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"wxml-的循环-24小时、一周天气和生活指数\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#wxml-的循环-24小时、一周天气和生活指数\"}},[e._v(\"#\")]),e._v(\" WXML 的循环：24小时、一周天气和生活指数\")]),e._v(\" \"),t(\"p\",[e._v(\"天气数据中，24 小时和一周天气都是由数组组成：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('// 24小时天气数据\\n\"hourlyData\": [\\n  {\\n    \"temp\": \"29\",\\n    \"time\": \"16:00\",\\n    \"weather\": \"雷阵雨\",\\n    \"icon\": \"leizhenyu\"\\n  }\\n  // ...\\n],\\n// 一周天气数据\\n\"weeklyData\": [\\n  {\\n    \"day\": \"雷阵雨\",\\n    \"dayIcon\": \"leizhenyu\",\\n    \"dayWind\": \"南风\",\\n    \"dayWindLevel\": \"1-2\",\\n    \"maxTemp\": \"30\",\\n    \"minTemp\": \"24\",\\n    \"night\": \"中雨\",\\n    \"nightIcon\": \"zhenyuye\",\\n    \"nightWind\": \"南风\",\\n    \"nightWindLevel\": \"1-2\",\\n    \"time\": 1534032000000\\n  }\\n  // ...\\n],\\n// 生活指数\\n\"lifeStyle\": [\\n  {\\n    \"name\": \"舒适度\", // 指数名称\\n    \"icon\": \"guominzhishu\", // 指数对应的icon图标type\\n    \"info\": \"较不舒适\", // 指数数值\\n    // 指数的详情\\n    \"detail\": \"白天虽然有雨，但仍无法削弱较高气温带来的暑意，同时降雨造成湿度加大会您感到有些闷热，不很舒适。\"\\n  }\\n  // ...\\n]\\n\\n')])])]),t(\"p\",[e._v(\"对于这些数组结构，我们在写页面的时候可以使用 WXML 的循环语句 \"),t(\"code\",[e._v(\"wx:for\")]),e._v(\" 来输出 WXML：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--weather/index.wxml--\\x3e\\n\\x3c!--24小时天气--\\x3e\\n<scroll-view scroll-x class=\"hourly\">\\n  <view class=\"scrollX\">\\n    <view class=\"item\" wx:for=\"{{hourlyData}}\">\\n      <text class=\"time\">{{ item.time }}</text>\\n      <icon type=\"{{item.icon}}\" class=\"icon\"></icon>\\n      <text class=\"temp\">{{item.temp}}°</text>\\n    </view>\\n  </view>\\n</scroll-view>\\n\\x3c!--一周天气数据--\\x3e\\n<view class=\"week\">\\n  <view class=\"week-weather\">\\n    <view class=\"item\" wx:for=\"{{weeklyData}}\">\\n      <view class=\"day\">{{ utils.formatWeeklyDate(index) }}</view>\\n      <view class=\"date\">{{ utils.formatDate(item.time) }}</view>\\n      <view class=\"daytime\">\\n        <view class=\"wt\">{{item.day}}</view>\\n        <icon type=\"{{item.dayIcon}}\" class=\"img\"></icon>\\n      </view>\\n      <view class=\"night\">\\n        <icon type=\"{{item.nightIcon}}\" class=\"img\"></icon>\\n        <view class=\"wt\">{{item.night}}</view>\\n      </view>\\n      <view class=\"wind\">{{ utils.wind(item.nightWind) }}</view>\\n      <view class=\"wind\" wx:if=\"{{item.nightWind}}\">{{ utils.windLevel(item.nightWindLevel) }}</view>\\n      <view class=\"wind\" wx:else></view>\\n    </view>\\n  </view>\\n\\x3c!--生活指数--\\x3e\\n<view class=\"life-style\">\\n    <view class=\"item\" wx:for=\"{{lifeStyle}}\" data-name=\"{{item.name}}\" data-detail=\"{{item.detail}}\" bindtap=\"indexDetail\">\\n      <view class=\"title\">\\n        <icon type=\"{{item.icon}}\"></icon>\\n        {{item.name}}\\n      </view>\\n      <view class=\"content\">{{item.info}}</view>\\n    </view>\\n</view>\\n\\n')])])]),t(\"p\",[e._v(\"这里需要特别说下「24小时天气」和「生活指数」。对于「24小时天气」，笔者使用了 \"),t(\"code\",[e._v(\"scroll-view\")]),e._v(\" 组件 + flex 布局，根据数组数据的长度（和风天气免费 API 只能获取间隔 3 个小时共 8 个小时天气）来计算 \"),t(\"code\",[e._v(\"scroll-view\")]),e._v(\" 的整体宽度，然后按照等比例划分：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.scss\\n@mixin flex-column {\\n  display: flex;\\n  flex-direction: column;\\n}\\n// hourly\\n.hourly {\\n  .scrollX {\\n    position: relative;\\n    // 总长度，116*8\\n    width: 928rpx;\\n    padding: 40rpx 0;\\n    height: 150rpx;\\n  }\\n  .item {\\n    @include flex-column;\\n    width: 116rpx;\\n  }\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"「生活指数」布局是上下两行：\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653144f363340ba?w=367&h=190&f=jpeg&s=16851\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"flex 布局中使用横向（flex-row）布局，要达到 \"),t(\"code\",[e._v(\"4x2\")]),e._v(\" 的布局效果，需要将子项设置为\"),t(\"code\",[e._v(\"25%\")]),e._v(\"宽度，并且设置父容器 \"),t(\"code\",[e._v(\"flex-wrap: wrap\")]),e._v(\"：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.scss\\n.life-style {\\n  @include flex-row;\\n  flex-wrap: wrap;\\n\\n  .item {\\n    text-align: center;\\n    width: 25%;\\n    height: 188rpx;\\n    border-right: 2rpx solid rgba(255, 255, 255, .1);\\n    border-bottom: 2rpx solid rgba(255, 255, 255, .1);\\n    box-sizing: border-box;\\n    padding: 50rpx 0 0;\\n  }\\n}\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"小结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),t(\"p\",[e._v(\"本节主要从整体上介绍了「新鲜天气」天气预报页面的布局实现，用到了 WXS 来增强 WXML 的数据绑定表达式，使用了多种 flex 布局效果，对于数组型数据，使用了 WXML 中的循环语句 \"),t(\"code\",[e._v(\"wx:for\")]),e._v(\" 来实现。\")])])}),[],!1,null,null,null);n.default=s.exports}}]);","extractedComments":[]}
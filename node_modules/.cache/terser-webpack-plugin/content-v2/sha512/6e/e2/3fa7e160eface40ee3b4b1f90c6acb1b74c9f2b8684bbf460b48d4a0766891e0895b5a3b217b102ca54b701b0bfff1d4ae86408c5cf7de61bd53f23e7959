{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{502:function(t,a,e){\"use strict\";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"邮件发送\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#邮件发送\"}},[t._v(\"#\")]),t._v(\" 邮件发送\")]),t._v(\" \"),e(\"p\",[t._v(\"发送邮件需要一个邮件服务器，通常来说搭建一个邮件服务器是完全没有必要的，我们可以使用163、谷歌、QQ邮箱等，公司可以使用企业邮箱，这类的服务也比较多，本章我将带大家使用 163邮箱进行发送邮件。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"邮箱授权\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#邮箱授权\"}},[t._v(\"#\")]),t._v(\" 邮箱授权\")]),t._v(\" \"),e(\"p\",[t._v(\"要发送邮件，我们需要有自己的邮箱，还要获取到授权码，那怎么获取到授权码呢？ 如下图以 163 为例：\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ad0d4f929436?w=1818&h=886&f=png&s=294997\",alt:\"\"}})]),t._v(\" \"),e(\"p\",[t._v(\"有的小伙伴就要问了，我不使用 163 可以吗，当然是 ok 的啊。其他邮箱的步骤跟 163 大同小异，大家可以进行摸索啊？如有不明白的可以下方留言或者私我哈。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"安装插件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装插件\"}},[t._v(\"#\")]),t._v(\" 安装插件\")]),t._v(\" \"),e(\"p\",[e(\"code\",[t._v(\"Nodemailer\")]),t._v(\" 是Node.js 应用程序的模块，可以轻松发送电子邮件。该项目始于2010年，当时没有理智的选项来发送电子邮件，如今，它已成为大多数Node.js用户默认使用的解决方案。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ npm install nodemailer --save\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"配置参数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置参数\"}},[t._v(\"#\")]),t._v(\" 配置参数\")]),t._v(\" \"),e(\"p\",[e(\"code\",[t._v(\"config/config.default.ts\")]),t._v(\":\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"config.mail = {\\n    host: 'smtp.163.com',  // SMTP服务\\n    port: 465,\\t\\t\\t\\t\\n    auth: {\\n      user: 'xxxxxxxx',\\t// 账号\\n      pass: 'xxxxxxxx',\\t// 授权码\\n    },\\n};\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"编写逻辑\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写逻辑\"}},[t._v(\"#\")]),t._v(\" 编写逻辑\")]),t._v(\" \"),e(\"p\",[t._v(\"在完成上述步骤后，接下来我们来编写发送邮件的逻辑。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"定义接口\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义接口\"}},[t._v(\"#\")]),t._v(\" 定义接口\")]),t._v(\" \"),e(\"p\",[t._v(\"首先我们需要定义一个接口，这个接口中包括了我们发送邮件所需的参数以及类型。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"interface IMailData {\\n  to: string;  // 接收者\\n  subject: string;\\t// 标题\\n  html: string;\\t// 内容\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"编写-service\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写-service\"}},[t._v(\"#\")]),t._v(\" 编写 \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/c72d08141f/app/service/Utils.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"service\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://nodemailer.com/about/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"nodemailer\"),e(\"OutboundLink\")],1),t._v(\" 这个插件非常方便，我们只需要提供一些参数就可以完成邮件发送：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"import * as nodemailer from 'nodemailer';\\n\\nexport default class Utils extends Service {\\n\\tpublic async sendMail(data: IMailData) {\\n        // 所需的参数\\n        const { to, subject, html } = data;\\n        // 我们之前配置的参数\\n        const { host, port, auth } = this.app.config.mail;\\n        // 创建传输器对象\\n        const transporter = nodemailer.createTransport({ host, port, auth });\\n        try {\\n          // 使用定义的传输对象发送邮件\\n          return await transporter.sendMail({\\n            from: auth.user, // 发件人地址\\n            to, // 接收者名单\\n            subject, // 主题\\n            html, // html 正文\\n          });\\n        } catch (error) {\\n          throw error;\\n        }\\n  }\\n}\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"编写服务\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写服务\"}},[t._v(\"#\")]),t._v(\" 编写服务\")]),t._v(\" \"),e(\"p\",[t._v(\"一切准备就绪，接下来让我们来实现发送短信。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"定义类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义类型\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/c72d08141f/app/graphql/utils/schema.graphql\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"定义类型\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"定义参数数据类型：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"input Mail {\\n  # 接收者\\n  to: String!\\n  # 标题\\n  subject: String!\\n  # 内容\\n  html: String!\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"调用方法发送邮件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调用方法发送邮件\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/c72d08141f/app/graphql/utils/connector.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"调用方法发送邮件\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"在这里我们只需要调用我们发送邮件的方法即可：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"public async sendMail(data: IMailData) {\\n    const { ctx } = this;\\n    return await ctx.service.utils.sendMail(data);\\n  }\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"数据操作\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据操作\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/c72d08141f/app/graphql/utils/resolver.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"数据操作\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"接下来我们来进行数据操作，完成发送邮件的服务：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"Mutation: {\\n    async sendMail(_root: any, { data }, { connector }) {\\n      const mail = await connector.utils.sendMail(data);\\n      return mail.response;  // 成功消息\\n    }\\n}\\n\\ntype Mutation {\\n  sendMail(data: Mail!) : String!\\n}\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"测试\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#测试\"}},[t._v(\"#\")]),t._v(\" 测试\")]),t._v(\" \"),e(\"p\",[t._v(\"我们使用开发者工具来测试一下，能不能正常发送短信：\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ad12c573476e?w=1845&h=458&f=png&s=32021\",alt:\"\"}})]),t._v(\" \"),e(\"p\",[t._v(\"我们来查看下邮箱，看看有没有收到邮件：\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708b505f5582c8c?w=1293&h=421&f=png&s=29309\",alt:\"\"}})]),t._v(\" \"),e(\"h2\",{attrs:{id:\"小结\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[t._v(\"#\")]),t._v(\" 小结\")]),t._v(\" \"),e(\"p\",[t._v(\"在这篇里带大家完成了怎么集成邮件服务并发送短信，大家可以想一想可不可以在我们之前注册时，短信验证码的基础上再增加邮件验证。或者你还有什么别的奇思妙想，都可以动起手了哦。\")])])}),[],!1,null,null,null);a.default=s.exports}}]);","extractedComments":[]}
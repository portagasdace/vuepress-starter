{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{464:function(e,t,i){\"use strict\";i.r(t);var a=i(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[i(\"h1\",{attrs:{id:\"flutter-可滚动-widget-pageview\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flutter-可滚动-widget-pageview\"}},[e._v(\"#\")]),e._v(\" Flutter 可滚动 Widget —— PageView\")]),e._v(\" \"),i(\"p\",[e._v(\"PageView 是可以一页一页滑动的 可滚动Widet。其 子Widget 会占据当前屏幕的所有可见区域。\")]),e._v(\" \"),i(\"h2\",{attrs:{id:\"pageview-的使用\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pageview-的使用\"}},[e._v(\"#\")]),e._v(\" PageView 的使用\")]),e._v(\" \"),i(\"p\",[e._v(\"PageView 的使用有三种方式：\")]),e._v(\" \"),i(\"ol\",[i(\"li\",[e._v(\"使用默认的构造函数\")]),e._v(\" \"),i(\"li\",[e._v(\"使用 PageView.builder\")]),e._v(\" \"),i(\"li\",[e._v(\"使用 PageView.custom\")])]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_1-使用默认的构造函数-给-children-属性赋值\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-使用默认的构造函数-给-children-属性赋值\"}},[e._v(\"#\")]),e._v(\" 1.使用默认的构造函数，给 children 属性赋值\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"代码所在位置\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码所在位置\"}},[e._v(\"#\")]),e._v(\" 代码所在位置\")]),e._v(\" \"),i(\"p\",[e._v(\"flutter_widget_demo/lib/pageview/PageViewDefaultWidget.dart\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"使用方法\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用方法\"}},[e._v(\"#\")]),e._v(\" 使用方法\")]),e._v(\" \"),i(\"p\",[e._v(\"使用默认构造函数写 PageView，只适用于那些只有少量 子Widget 的 PageView。\")]),e._v(\" \"),i(\"p\",[e._v(\"demo 如下：\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"import 'package:flutter/material.dart';\\n\\nvoid main() => runApp(PageViewDefaultWidget());\\n\\nclass PageViewDefaultWidget extends StatelessWidget {\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: 'Test',\\n      home: Scaffold(\\n          appBar:\\n              AppBar(title: new Text('Flutter 可滚动Widget -- PageView')),\\n          body: PageView(\\n            onPageChanged: (index){\\n              print('current page $index ');\\n            },\\n            children: <Widget>[\\n              ListTile(title: Text('Title0')),\\n              ListTile(title: Text('Title1')),\\n              ListTile(title: Text('Title2')),\\n              ListTile(title: Text('Title3')),\\n              ListTile(title: Text('Title4')),\\n            ],\\n          )),\\n    );\\n  }\\n}\\n\\n\")])])]),i(\"p\",[e._v(\"运行效果为：\")]),e._v(\" \"),i(\"p\",[i(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/4/9/16a0037ffaedb283?w=428&h=768&f=png&s=38236\",alt:\"\"}})]),e._v(\" \"),i(\"p\",[e._v(\"可以左右滑动切换页面。\")]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_2-使用-pageview-builder-可用于和数据绑定实现大量或无限的列表\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-使用-pageview-builder-可用于和数据绑定实现大量或无限的列表\"}},[e._v(\"#\")]),e._v(\" 2.使用 PageView.builder,可用于和数据绑定实现大量或无限的列表\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"代码所在位置-2\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码所在位置-2\"}},[e._v(\"#\")]),e._v(\" 代码所在位置\")]),e._v(\" \"),i(\"p\",[e._v(\"flutter_widget_demo/lib/pageview/PageViewBuilderWidget.dart\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"使用方法-2\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用方法-2\"}},[e._v(\"#\")]),e._v(\" 使用方法\")]),e._v(\" \"),i(\"p\",[e._v(\"PageView.builder 可以和数据绑定，用于构建大量或无限的列表。而且只会构建那些实际可见的 子Widget。\")]),e._v(\" \"),i(\"p\",[e._v(\"PageView.builder 的定义如下：\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"  PageView.builder({\\n    Key key,\\n    this.scrollDirection = Axis.horizontal,\\n    this.reverse = false,\\n    PageController controller,\\n    this.physics,\\n    this.pageSnapping = true,\\n    this.onPageChanged,\\n    @required IndexedWidgetBuilder itemBuilder,\\n    int itemCount,\\n    this.dragStartBehavior = DragStartBehavior.down,\\n  })\\n\\n\")])])]),i(\"p\",[e._v(\"多了和 ListView.builder 类似的 itemCount 和 itemBuilder 属性，用法也是一样的:\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"import 'package:flutter/material.dart';\\n\\nvoid main() => runApp(PageViewBuilderWidget(\\n      items: List<String>.generate(10000, (i) => \\\"Item $i\\\"),\\n    ));\\n\\nclass PageViewBuilderWidget extends StatelessWidget {\\n  final List<String> items;\\n\\n  PageViewBuilderWidget({Key key, @required this.items}) : super(key: key);\\n\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: 'Test',\\n      home: Scaffold(\\n        appBar: AppBar(title: new Text('Flutter 可滚动Widget -- PageView')),\\n        body: PageView.builder(\\n          onPageChanged: (index) {\\n            print('current page $index ');\\n          },\\n          itemCount: items.length,\\n          itemBuilder: (context, index) {\\n            return ListTile(\\n              title: Text('${items[index]}'),\\n            );\\n          },\\n        ),\\n      ),\\n    );\\n  }\\n}\\n\\n\")])])]),i(\"p\",[e._v(\"运行效果如下：\")]),e._v(\" \"),i(\"p\",[i(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/4/9/16a003838d8f050a?w=428&h=768&f=png&s=38437\",alt:\"\"}})]),e._v(\" \"),i(\"p\",[e._v(\"可以左右滑动切换页面。\")]),e._v(\" \"),i(\"h3\",{attrs:{id:\"_3-使用-pageview-custom\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-使用-pageview-custom\"}},[e._v(\"#\")]),e._v(\" 3.使用 PageView.custom\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"代码所在位置-3\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码所在位置-3\"}},[e._v(\"#\")]),e._v(\" 代码所在位置\")]),e._v(\" \"),i(\"p\",[e._v(\"flutter_widget_demo/lib/pageview/PageViewCustomWidget.dart\")]),e._v(\" \"),i(\"h4\",{attrs:{id:\"使用方法-3\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用方法-3\"}},[e._v(\"#\")]),e._v(\" 使用方法\")]),e._v(\" \"),i(\"p\",[e._v(\"PageView.custom 的定义如下：\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"  PageView.custom({\\n    Key key,\\n    this.scrollDirection = Axis.horizontal,\\n    this.reverse = false,\\n    PageController controller,\\n    this.physics,\\n    this.pageSnapping = true,\\n    this.onPageChanged,\\n    @required this.childrenDelegate,\\n    this.dragStartBehavior = DragStartBehavior.down,\\n  })\\n\\n\")])])]),i(\"p\",[e._v(\"增加了 childrenDelegate 的属性，类型为 SliverChildDelegate，具有定制 子Widget 的能力，和 ListView.custom 里的一样，所以用法也一样:\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"import 'package:flutter/material.dart';\\n\\nvoid main() => runApp(PageViewCustomWidget());\\n\\nclass PageViewCustomWidget extends StatelessWidget {\\n  @override\\n  Widget build(BuildContext context) {\\n    return MaterialApp(\\n      title: 'Test',\\n      home: Scaffold(\\n          appBar: AppBar(title: new Text('Flutter 可滚动Widget -- PageView')),\\n          body: PageView.custom(\\n            onPageChanged: (index) {\\n              print('current page $index ');\\n            },\\n            childrenDelegate: SliverChildListDelegate(<Widget>[\\n              ListTile(title: Text('Title0')),\\n              ListTile(title: Text('Title1')),\\n              ListTile(title: Text('Title2')),\\n              ListTile(title: Text('Title3')),\\n              ListTile(title: Text('Title4')),\\n            ]),\\n          )),\\n    );\\n  }\\n}\\n\\n\")])])]),i(\"p\",[e._v(\"运行效果如下：\")]),e._v(\" \"),i(\"p\",[i(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/4/9/16a0037ffaedb283?w=428&h=768&f=png&s=38236\",alt:\"\"}})]),e._v(\" \"),i(\"p\",[e._v(\"可以左右滑动切换页面。\")]),e._v(\" \"),i(\"h2\",{attrs:{id:\"pageview-的的构造函数及参数说明\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pageview-的的构造函数及参数说明\"}},[e._v(\"#\")]),e._v(\" PageView 的的构造函数及参数说明\")]),e._v(\" \"),i(\"p\",[e._v(\"先看 PageView 的构造函数：\")]),e._v(\" \"),i(\"div\",{staticClass:\"language- extra-class\"},[i(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[i(\"code\",[e._v(\"class PageView extends StatefulWidget {\\n  PageView({\\n    Key key,\\n    this.scrollDirection = Axis.horizontal,\\n    this.reverse = false,\\n    PageController controller,\\n    this.physics,\\n    this.pageSnapping = true,\\n    this.onPageChanged,\\n    List<Widget> children = const <Widget>[],\\n    this.dragStartBehavior = DragStartBehavior.down,\\n  }) : \\n    ...\\n}\\n\\n\")])])]),i(\"p\",[e._v(\"参数名字\")]),e._v(\" \"),i(\"p\",[e._v(\"参数类型\")]),e._v(\" \"),i(\"p\",[e._v(\"意义\")]),e._v(\" \"),i(\"p\",[e._v(\"必选 or 可选\")]),e._v(\" \"),i(\"p\",[e._v(\"key\")]),e._v(\" \"),i(\"p\",[e._v(\"Key\")]),e._v(\" \"),i(\"p\",[e._v(\"Widget 的标识\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"scrollDirection\")]),e._v(\" \"),i(\"p\",[e._v(\"Axis\")]),e._v(\" \"),i(\"p\",[e._v(\"滑动的方向\"),i(\"br\"),e._v(\"\\n默认为 Axis.vertical，垂直方向可滑动\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"reverse\")]),e._v(\" \"),i(\"p\",[e._v(\"bool\")]),e._v(\" \"),i(\"p\",[e._v(\"控制 PageView 里列表项的排列顺序，是按照插入顺序排，还是按照插入顺序相反的方向排序。\"),i(\"br\"),e._v(\"\\n默认为 false，就是按照插入顺序排序，第一个插入的在头部\"),i(\"br\"),e._v(\"\\n，当 reverse 为 true 时，第一个插入的会在底部\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"controller\")]),e._v(\" \"),i(\"p\",[e._v(\"PageController\")]),e._v(\" \"),i(\"p\",[e._v(\"PageController 可以控制滑动到哪一页，还有其他功能\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"physics\")]),e._v(\" \"),i(\"p\",[e._v(\"ScrollPhysics\")]),e._v(\" \"),i(\"p\",[e._v(\"设置 PageView 的滚动效果\"),i(\"br\"),e._v(\"\\n应该使用 PageScrollPhysics\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"pageSnapping\")]),e._v(\" \"),i(\"p\",[e._v(\"bool\")]),e._v(\" \"),i(\"p\",[e._v(\"默认值为 false\"),i(\"br\"),e._v(\"\\n设置为false以禁用页面捕捉，对自定义滚动行为很有用。\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"onPageChanged\")]),e._v(\" \"),i(\"p\",[e._v(\"ValueChanged\"),i(\"int\")],1),e._v(\" \"),i(\"p\",[e._v(\"当 PageView 当前页面切换的时候调用\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"children\")]),e._v(\" \"),i(\"p\",[e._v(\"List\"),i(\"Widget\")],1),e._v(\" \"),i(\"p\",[e._v(\"PageView 的列表项\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"semanticChildCount\")]),e._v(\" \"),i(\"p\",[e._v(\"int\")]),e._v(\" \"),i(\"p\",[e._v(\"提供语义信息的列表项的数量\"),i(\"br\"),e._v(\"\\n默认为 PageView 的 item 的数量\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")]),e._v(\" \"),i(\"p\",[e._v(\"dragStartBehavior\")]),e._v(\" \"),i(\"p\",[e._v(\"DragStartBehavior\")]),e._v(\" \"),i(\"p\",[e._v(\"确定处理拖动开始行为的方式。\"),i(\"br\"),e._v(\"\\n如果设置为[DragStartBehavior.start]，则在检测到拖动手势时将开始滚动拖动行为\"),i(\"br\"),e._v(\"\\n如果设置为[DragStartBehavior.down]，它将在首次检测到向下事件时开始\")]),e._v(\" \"),i(\"p\",[e._v(\"可选\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}
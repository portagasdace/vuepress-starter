{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{513:function(e,a,t){\"use strict\";t.r(a);var s=t(42),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"实战介绍和准备工作\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实战介绍和准备工作\"}},[e._v(\"#\")]),e._v(\" 实战介绍和准备工作\")]),e._v(\" \"),t(\"p\",[e._v(\"本次实战并不是带大家做一个完整的项目，而是我们实际开发中会用到的一些技术，使用 egg 加 graphql 完成如短信验证、第三方登录、用户鉴权、对象存储、支付、客户端与服务器端通信、日志等。虽说不是一个完整的项目，但这些技术在项目中更实用，也更有意义。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"安装插件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装插件\"}},[e._v(\"#\")]),e._v(\" 安装插件\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"egg-sequelize\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#egg-sequelize\"}},[e._v(\"#\")]),e._v(\" egg-sequelize\")]),e._v(\" \"),t(\"p\",[e._v(\"sequelize 是一个广泛使用的 ORM 框架，它支持 MySQL、SQLite 和 MSSQL 、PostgreSQL等多个数据源\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm install egg-sequelize --save\\n\\n\")])])]),t(\"p\",[e._v(\"在 \"),t(\"code\",[e._v(\"config/plugin.js\")]),e._v(\" 中引入 egg-sequelize 插件\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"sequelize: {\\n  enable: true,\\n  package: 'egg-sequelize',\\n};\\n\\n\")])])]),t(\"p\",[e._v(\"在 \"),t(\"code\",[e._v(\"config/config.default.js\")]),e._v(\" 中编写 sequelize 配置\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"exports.sequelize = {\\n  dialect: 'mysql',  // support: mysql, mariadb, postgres, mssql\\n  host: '127.0.0.1',\\n  port: 3306,\\n  database: 'egg-sequelize-doc-unittest', // /数据库名\\n};\\n\\n\")])])]),t(\"h3\",{attrs:{id:\"mysql2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mysql2\"}},[e._v(\"#\")]),e._v(\" mysql2\")]),e._v(\" \"),t(\"p\",[e._v(\"在 Web 应用方面 MySQL 是最常见，最好的关系型数据库之一。非常多网站都选择 MySQL 作为网站数据库。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm install mysql2 --save\\n\\n\")])])]),t(\"h3\",{attrs:{id:\"sequelize-cli\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sequelize-cli\"}},[e._v(\"#\")]),e._v(\" sequelize-cli\")]),e._v(\" \"),t(\"p\",[e._v(\"sequelize 提供了 \"),t(\"a\",{attrs:{href:\"https://github.com/sequelize/cli\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"sequelize-cli\"),t(\"OutboundLink\")],1),e._v(\" 工具来实现 \"),t(\"a\",{attrs:{href:\"http://docs.sequelizejs.com/manual/tutorial/migrations.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Migrations\"),t(\"OutboundLink\")],1),e._v(\"，我们也可以在 egg 项目中引入 sequelize-cli。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm install --save-dev sequelize-cli\\n\\n\")])])]),t(\"p\",[e._v(\"在 egg 项目中，我们希望将所有数据库 Migrations 相关的内容都放在 \"),t(\"code\",[e._v(\"database\")]),e._v(\" 目录下，所以我们在项目根目录下新建一个 \"),t(\"code\",[e._v(\".sequelizerc\")]),e._v(\" 配置文件：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"const path = require('path');\\n\\nmodule.exports = {\\n  config: path.join(__dirname, 'database/config.json'),\\n  'migrations-path': path.join(__dirname, 'database/migrations'),\\n  'seeders-path': path.join(__dirname, 'database/seeders'),\\n  'models-path': path.join(__dirname, 'app/model'),\\n};\\n\\n\")])])]),t(\"p\",[e._v(\"初始化 Migrations 配置文件和目录\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npx sequelize init:config\\n$ npx sequelize init:migrations\\n\\n\")])])]),t(\"p\",[e._v(\"执行完后会生成 \"),t(\"code\",[e._v(\"database/config.json\")]),e._v(\" 文件和 \"),t(\"code\",[e._v(\"database/migrations\")]),e._v(\" 目录，我们修改一下 \"),t(\"code\",[e._v(\"database/config.json\")]),e._v(\" 中的内容，将其改成我们项目中使用的数据库配置：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('{\\n  \"development\": {\\n    \"username\": \"root\",  // 账号\\n    \"password\": null,    // 密码\\n    \"database\": \"egg-sequelize-doc-default\", // 数据库名\\n    \"host\": \"127.0.0.1\",\\n    \"dialect\": \"mysql\"\\n  },\\n  \"test\": {\\n    \"username\": \"root\",\\n    \"password\": null,\\n    \"database\": \"egg-sequelize-doc-unittest\",\\n    \"host\": \"127.0.0.1\",\\n    \"dialect\": \"mysql\"\\n  }\\n}\\n\\n')])])]),t(\"h3\",{attrs:{id:\"sequelize-auto\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sequelize-auto\"}},[e._v(\"#\")]),e._v(\" sequelize-auto\")]),e._v(\" \"),t(\"p\",[e._v(\"利用 \"),t(\"a\",{attrs:{href:\"https://www.npmjs.com/package/egg-sequelize-auto\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"sequelize-auto\"),t(\"OutboundLink\")],1),e._v(\" 对照数据库自动生成相应的models，使用sequelize-auto对照数据库自动生成相应的models减少了对数据库进行增删改查时的sql语句的编写\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm install --save-dev egg-sequelize-auto\\n\\n\")])])]),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708a7673a52cd16?w=1107&h=460&f=png&s=94383\",alt:\"\"}})]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[e._v(\"egg-sequelize-auto -o ./app/model -h localhost -p 3306 -d [数据库] -u [用户名] -x [密码|'']\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"初始化数据库\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初始化数据库\"}},[e._v(\"#\")]),e._v(\" 初始化数据库\")]),e._v(\" \"),t(\"p\",[e._v(\"利用我们定义的快捷命令我们可以很方便的创建我们所需要文件：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm run db:init\\n\\n\")])])]),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708a77a1768c430?w=500&h=189&f=png&s=17139\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"然后把文件内容更改成以下内容：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"'use strict';\\n\\nmodule.exports = {\\n  up: async (queryInterface, Sequelize) => {\\n    const { INTEGER, STRING  } = Sequelize\\n    await queryInterface.createTable('users', {\\n      id: {\\n        type: INTEGER,\\n        primaryKey: true,\\n        autoIncrement: true,\\n        allowNull: true,\\n        comment: '唯一索引',\\n      },\\n      phone: {\\n        type: STRING(11),\\n        unique: true,\\n        allowNull: true,\\n        comment: '手机号',\\n      },\\n      password: {\\n        type: STRING,\\n        allowNull: true,\\n        comment: '密码',\\n      },\\n      name: {\\n        type: STRING(50),\\n        allowNull: false,\\n        comment: '昵称',\\n      },\\n      avatar: {\\n        type: STRING,\\n        allowNull: true,\\n        comment: '头像',\\n      }\\n    })\\n  },\\n\\n  down: async queryInterface => {\\n      await queryInterface.dropTable('users');\\n  }\\n};\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"数据库变更\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据库变更\"}},[e._v(\"#\")]),e._v(\" 数据库变更\")]),e._v(\" \"),t(\"p\",[e._v(\"执行下方命令之后，我们的数据库初始化就完成了\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"$ npm run db:up\\n\\n\")])])]),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('// 升级数据库 `npm run db:up`\\n\"db:up\": \"npx sequelize db:migrate && npm run db:model\"\\n// 需要回滚，可以通过 `npm run db:down` 回退一个变更\\n\"db:down\": \"npx sequelize db:migrate:undo\"\\n// 可以通过 `npm run db:down-all` 回退到初始状态\\n\"db:down-all\": \"npx sequelize db:migrate:undo:all\"\\n\\n')])])]),t(\"p\",[e._v(\"并且会在model目录下帮我们创建 \"),t(\"code\",[e._v(\"users\")]),e._v(\" 这个 \"),t(\"code\",[e._v(\"model\")]),e._v(\"，如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"/* indent size: 2 */\\n\\nmodule.exports = app => {\\n  const DataTypes = app.Sequelize;\\n\\n  const Model = app.model.define('users', {\\n    id: {\\n      type: DataTypes.INTEGER(11),\\n      allowNull: true,\\n      primaryKey: true,\\n      autoIncrement: true\\n    },\\n    phone: {\\n      type: DataTypes.STRING(11),\\n      allowNull: true,\\n      unique: true\\n    },\\n    password: {\\n      type: DataTypes.STRING(255),\\n      allowNull: true\\n    },\\n    name: {\\n      type: DataTypes.STRING(50),\\n      allowNull: false\\n    },\\n    avatar: {\\n      type: DataTypes.STRING(255),\\n      allowNull: true\\n    }\\n  }, {\\n    tableName: 'users'\\n  });\\n\\n  Model.associate = function() {\\n  \\n  }\\n\\n  return Model;\\n};\\n\\n\")])])]),t(\"p\",[e._v(\"这个 Model 就可以在 Controller 和 Service 中通过 \"),t(\"code\",[e._v(\"app.model.Users\")]),e._v(\" 或者 \"),t(\"code\",[e._v(\"ctx.model.Users\")]),e._v(\" 访问到了\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"小结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),t(\"p\",[e._v(\"为了方便我们的开发，在本篇中我们安装了一些必备的插件，并初始化了数据库与模型为我们下一节做铺垫，下一节我们将正式实战开发。\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{441:function(t,e,r){\"use strict\";r.r(e);var a=r(42),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"flutter-写-ui-的方式-声明式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flutter-写-ui-的方式-声明式\"}},[t._v(\"#\")]),t._v(\" Flutter 写 UI 的方式 —— 声明式\")]),t._v(\" \"),r(\"p\",[t._v(\"Flutter 采用了一种新的方式来写 UI，这种方式就是声明式，刚开始你可能会不适应，但用过之后你就会发现它非常好用。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"android-、ios-的-ui-布局的写法\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#android-、ios-的-ui-布局的写法\"}},[t._v(\"#\")]),t._v(\" Android 、iOS 的 UI 布局的写法\")]),t._v(\" \"),r(\"p\",[t._v(\"在讲如何写 Flutter UI 之前，首先我们回顾一下 Android 和 iOS 的是如何布局的：\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[t._v(\"Android：XML\")]),t._v(\" \"),r(\"p\",[t._v(\"Android 中，通过 XML 来写布局。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"Android：代码\")]),t._v(\" \"),r(\"p\",[t._v(\"代码以 \"),r(\"code\",[t._v(\"命令式\")]),t._v(\" 的方法来写布局\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"iOS：Storyboard\")]),t._v(\" \"),r(\"p\",[t._v(\"使用 Storyboard 来组织视图和设置约束。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"iOS：代码\")]),t._v(\" \"),r(\"p\",[t._v(\"可以在 ViewController 中以 \"),r(\"code\",[t._v(\"命令式\")]),t._v(\" 的编程方式设置约束。\")])])]),t._v(\" \"),r(\"p\",[t._v(\"在 Android 中通常使用 XML 来写 UI，XML 也是一种声明式，但使用 XML 写 UI，是不能在代码里直接操作 UI，还需要一步 findViewById 的步骤；在 iOS 中通常使用 \"),r(\"code\",[t._v(\"命令式\")]),t._v(\" 的代码来写 UI ，\"),r(\"code\",[t._v(\"命令式\")]),t._v(\" 可以直接在代码里操作 UI，但是要写复杂的界面的时候，就会很痛苦。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"flutter-ui-布局的写法\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flutter-ui-布局的写法\"}},[t._v(\"#\")]),t._v(\" Flutter UI 布局的写法\")]),t._v(\" \"),r(\"p\",[t._v(\"Flutter 写 UI 布局：\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"只能用代码来写 UI\")]),t._v(\" \"),r(\"li\",[t._v(\"而且 Flutter 用代码写 UI 的方式是声明式的，和其他平台用代码来写 UI 的命令式不同。\")])]),t._v(\" \"),r(\"p\",[t._v(\"为了看出 Flutter 声明式和其他平台命令式的不同，接下来举一个例子说明。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"命令式-vs-声明式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令式-vs-声明式\"}},[t._v(\"#\")]),t._v(\" 命令式 VS 声明式\")]),t._v(\" \"),r(\"p\",[t._v(\"假设要实现一个下面的界面：\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/4/21/16a40728166289c9?w=298&h=448&f=jpeg&s=22681\",alt:\"\"}})]),t._v(\" \"),r(\"h4\",{attrs:{id:\"使用命令式实现\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用命令式实现\"}},[t._v(\"#\")]),t._v(\" 使用命令式实现\")]),t._v(\" \"),r(\"p\",[t._v(\"如果用命令式的代码来实现，那么代码就会是这样子的（）：\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"// 分别实现各个view\\nViewA a = new ViewA(...)\\nViewB b = new ViewB(...)\\nViewC c1 = new ViewC(...)\\nViewC c2 = New ViewC(...)\\n// 然后将子view 添加到容器中\\na.add(b)\\nb.add(c1)\\nb.add(c2)\\n\\n\")])])]),r(\"p\",[t._v(\"你首先要通过 View 的构造函数创建 View 的实例，然后在组织 View 的层级。\")]),t._v(\" \"),r(\"h4\",{attrs:{id:\"使用声明式实现\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用声明式实现\"}},[t._v(\"#\")]),t._v(\" 使用声明式实现\")]),t._v(\" \"),r(\"p\",[t._v(\"用 Flutter \"),r(\"code\",[t._v(\"声明式\")]),t._v(\" 的代码实现就是这样的：\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"Widget build(BuildContext context) {\\n    return ViewA{\\n        child: ViewB{\\n            color: yellow,\\n            children: [\\n                ViewC(...),\\n                ViewC(...)\\n            ]\\n        }\\n    }\\n}\\n\\n\")])])]),r(\"p\",[t._v(\"这种方式写 UI，有点类似于 Android 的 XML，声明了 UI 元素之间的关系和嵌套层次，但却是用代码实现的，所以少了 XML 解析的步骤，也使 Flutter UI 构建的效率更高。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"flutter-写-ui\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flutter-写-ui\"}},[t._v(\"#\")]),t._v(\" Flutter 写 UI\")]),t._v(\" \"),r(\"p\",[t._v(\"再看之前创建的 Flutter 工程里，用来写 UI 的 代码：\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"Widget build(BuildContext context) {\\n    return MaterialApp(\\n        title: 'Flutter Demo',\\n        theme: ThemeData(\\n          primarySwatch: Colors.blue,\\n        ),\\n        home: Scaffold(\\n          body: Center(\\n              child: GestureDetector(\\n                child: Text(widget.content),\\n                onTap: increment,\\n              )\\n          ),\\n        )\\n    );\\n  }\\n\\n\")])])]),r(\"p\",[t._v(\"用代码来写 UI，同时也表现出了 UI 的层级:\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2019/3/3/16941ff8b01ea72c?w=960&h=720&f=png&s=13757\",alt:\"\"}})])])}),[],!1,null,null,null);e.default=i.exports}}]);","extractedComments":[]}
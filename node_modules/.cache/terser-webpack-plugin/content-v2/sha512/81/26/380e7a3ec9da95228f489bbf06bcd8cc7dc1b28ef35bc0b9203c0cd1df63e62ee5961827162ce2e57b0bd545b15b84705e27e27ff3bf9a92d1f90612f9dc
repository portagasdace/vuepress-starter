{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{519:function(t,e,n){\"use strict\";n.r(e);var a=n(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"动效开发-1-让它动起来\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#动效开发-1-让它动起来\"}},[t._v(\"#\")]),t._v(\" 动效开发 1：让它动起来\")]),t._v(\" \"),n(\"p\",[t._v(\"在现实生活中，人们的大脑习惯了被动态的东西所吸引，适当的动画效果可以为网页添加有价值的交互和反馈，提升用户的情感体验。\")]),t._v(\" \"),n(\"blockquote\",[n(\"p\",[t._v(\"情感设计的主要目标是促进人与人之间的沟通，即便媒介是网页。一旦我们在这方面做得到位，电脑本身将回归背后，而网页的个性化将因此得到凸显。\"),n(\"br\"),t._v(\"\\n—— Aarron Walter，\"),n(\"a\",{attrs:{href:\"https://abookapart.com/products/designing-for-emotion\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n(\"em\",[t._v(\"Designing For Emotion\")]),n(\"OutboundLink\")],1),t._v(\" 一书的作者\")])]),t._v(\" \"),n(\"p\",[t._v(\"动画效果是情感设计的重要手段，从本小节开始，我们将为大家介绍「H5 开发」的第四个重要的能力 —— 「动画效果开发」，简称「动效开发」，即综合利用 JavaScript、CSS(3)、SVG、Canvas 等多种 Web 技术手段开发出动人的网页动态效果。\")]),t._v(\" \"),n(\"p\",[t._v(\"回想下我们第 1 小节提及的 「H5 开发」三角形能力模型，「动效开发」处在三角形的上部，毫无疑问这项能力越强，在此岗位中的竞争力越大。\")]),t._v(\" \"),n(\"p\",[t._v(\"动效开发 —— 先「动」而后「效」，为网页添加动态元素的方法有很多：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"GIF、Flash —— 廉颇老矣，尚能饭否？\")]),t._v(\" \"),n(\"li\",[t._v(\"视频 —— 可远观而不可亵玩焉\")]),t._v(\" \"),n(\"li\",[t._v(\"CSS3 结合 JavaScript —— 当红小生\")])]),t._v(\" \"),n(\"p\",[t._v(\"我们将把重心放在 CSS3 动画上面，因为 CSS3 在现如今的网页动效开发中占据着最为重要的一席，作为老大哥 CSS 的补充，它像是专门为「H5 开发」量身定制的动效武器。\")]),t._v(\" \"),n(\"p\",[t._v(\"拿起这件武器准备杀出一条血路之前，得先找到它的扳机在哪里。\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"css3-transition\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css3-transition\"}},[t._v(\"#\")]),t._v(\" CSS3 Transition\")]),t._v(\" \"),n(\"p\",[t._v(\"在 CSS3 的世界里，让网页元素动起来的第一个方法是利用 \"),n(\"code\",[t._v(\"transition\")]),t._v(\"，基于 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 可以让元素的某个 CSS 属性从指定的开始状态过渡到特定的结束状态。我们将元素「从指定的开始状态过渡到特定的结束状态」这个过程简称为「状态变换」，注意这里的\"),n(\"strong\",[t._v(\"过渡\")]),t._v(\"，事实上 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 便像是页面元素「状态变换」的润滑剂，如果没有 \"),n(\"code\",[t._v(\"transition\")]),t._v(\"，元素「状态变换」的过程将会显得生硬而突兀（如下图中左边的小圆球，\"),n(\"a\",{attrs:{href:\"https://codepen.io/mamboer/full/pLvLyv/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"查看 DEMO\"),n(\"OutboundLink\")],1),t._v(\"）。\")]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/3/10/1620f2835b9b7448?w=950&h=220&f=gif&s=97142\",alt:\"transition\"}})]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"transition\")]),t._v(\" 可作用于普通的 CSS 属性（如 \"),n(\"code\",[t._v(\"background\")]),t._v(\" 、\"),n(\"code\",[t._v(\"opacity\")]),t._v(\" ...），也可以作用于 CSS3 出现时新引入的 \"),n(\"code\",[t._v(\"transform\")]),t._v(\" 属性，而利用后者可以实现 3D 的过渡效果。\"),n(\"code\",[t._v(\"transform\")]),t._v(\" 属性就像是 CSS3 这个动效武器子弹里的火药，大家可以通过 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\" 的 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/transform\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"《transform》\"),n(\"OutboundLink\")],1),t._v(\" 一文进行进一步地了解学习，务必做到深谙其门道，避免一知半解。\")]),t._v(\" \"),n(\"h3\",{attrs:{id:\"一个-3d-过渡动效例子\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一个-3d-过渡动效例子\"}},[t._v(\"#\")]),t._v(\" 一个 3D 过渡动效例子\")]),t._v(\" \"),n(\"p\",[t._v(\"如前面所说，利用 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 结合 \"),n(\"code\",[t._v(\"transform\")]),t._v(\" 可实现元素的 3D 过渡动效，所以我们这个例子的目标是：利用 \"),n(\"code\",[t._v(\"transform\")]),t._v(\" 属性画一个立方体，然后利用 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 实现立方体的翻转效果。大家不妨打开 \"),n(\"a\",{attrs:{href:\"https://codepen.io/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"CodePen\"),n(\"OutboundLink\")],1),t._v(\" 按照以下步骤亲自动手试试，或者直接 \"),n(\"a\",{attrs:{href:\"https://codepen.io/mamboer/full/XEJqPy\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"查看 DEMO\"),n(\"OutboundLink\")],1),t._v(\" 体会最终的结果。\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"步骤-1-准备立方体的-html-代码\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-1-准备立方体的-html-代码\"}},[t._v(\"#\")]),t._v(\" 步骤 1 - 准备立方体的 HTML 代码\")]),t._v(\" \"),n(\"p\",[t._v(\"一个立方体（\"),n(\"code\",[t._v(\".cube\")]),t._v(\"）的 6 个面（\"),n(\"code\",[t._v(\".cube-face\")]),t._v(\"）。\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('<div class=\"demo\">\\n  <div class=\"cube show-default\">\\n    <div class=\"cube-face is-front\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/1.jpg\" alt=\"pic1\"/></div>\\n    <div class=\"cube-face is-back\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/2.jpg\" alt=\"pic2\"/></div>\\n    <div class=\"cube-face is-right\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/3.jpg\" alt=\"pic3\"/></div>\\n    <div class=\"cube-face is-left\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/4.jpg\" alt=\"pic4\"/></div>\\n    <div class=\"cube-face is-top\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/5.jpg\" alt=\"pic5\"/></div>\\n    <div class=\"cube-face is-bottom\"><img src=\"https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/6.jpg\" alt=\"pic6\"/></div>\\n  </div>\\n</div>\\n\\n')])])]),n(\"h4\",{attrs:{id:\"步骤-2-利用-css-3-将-6-个面组装成立体形状的立方体\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-2-利用-css-3-将-6-个面组装成立体形状的立方体\"}},[t._v(\"#\")]),t._v(\" 步骤 2 - 利用 CSS(3) 将 6 个面组装成立体形状的立方体\")]),t._v(\" \"),n(\"blockquote\",[n(\"p\",[t._v(\"这里使用了 SCSS 样式预处理语言，如果你正在 CodePen 上跟着做，注意将样式预处理器（CSS Preprocessor）配置成为 SCSS。\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\"// demo styles\\n$cube-size: 300px;\\n$cube-radius: $cube-size / 2;\\n.demo {\\n  width: $cube-size;\\n  height: $cube-size;\\n  perspective: 1000px;\\n  position: relative;\\n  margin: 30px auto;\\n}\\n.cube {\\n  width: 100%;\\n  height: 100%;\\n  transform-style: preserve-3d;\\n  position: absolute;\\n  &-face {\\n    border: 2px solid #000;\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    overflow: hidden;\\n    opacity: 0.6;\\n    backface-visibility: visible;\\n    &.is-front  {\\n      transform: translateZ( $cube-radius );\\n    }\\n    &.is-back   {\\n      transform: rotateX( -180deg ) translateZ( $cube-radius );\\n    }\\n    &.is-right {\\n      transform: rotateY( 90deg ) translateZ( $cube-radius );\\n    }\\n    &.is-left {\\n      transform: rotateY( -90deg ) translateZ( $cube-radius );\\n    }\\n    &.is-top {\\n      transform: rotateX( 90deg ) translateZ( $cube-radius );\\n    }\\n    &.is-bottom {\\n      transform: rotateX( -90deg ) translateZ( $cube-radius );\\n    }\\n  }\\n  img {\\n    width: 100%;\\n  }\\n}\\n\\n\")])])]),n(\"p\",[t._v(\"至此，我们得到一个正面朝着我们的边长为 \"),n(\"code\",[t._v(\"300px\")]),t._v(\" 的立方体，为了让它在网页上呈现 3D 的视觉效果，我们写了以下几行关键的代码：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"利用 3D 旋转 \"),n(\"code\",[t._v(\"rotateX\")]),t._v(\" 或 \"),n(\"code\",[t._v(\"rotateY\")]),t._v(\"，以及 Z 轴位移 \"),n(\"code\",[t._v(\"translateZ\")]),t._v(\" 来衔接拼装立方体的每一个面\")]),t._v(\" \"),n(\"li\",[t._v(\"设置每一个面的背面可见性：\"),n(\"code\",[t._v(\"backface-visibility: visible\")]),t._v(\"，注意这里前一行代码 \"),n(\"code\",[t._v(\"opacity: 0.6\")]),t._v(\" 是辅助性的，而 \"),n(\"code\",[t._v(\"backface-visibility\")]),t._v(\" 属性的默认值其实即 \"),n(\"code\",[t._v(\"visible\")]),t._v(\"，这里写出来便于大家理解代码。\")]),t._v(\" \"),n(\"li\",[t._v(\"在立方体的父级元素上设置透视距离：\"),n(\"code\",[t._v(\"perspective: 1000px\")])]),t._v(\" \"),n(\"li\",[t._v(\"在立方体上设置变形方式：\"),n(\"code\",[t._v(\"transform-style: preserve-3d\")])])]),t._v(\" \"),n(\"p\",[t._v(\"以上关键代码的关键 CSS 属性，在小册后面的「聊一聊 3D」小节中会有进一步的解读，这里就不多说了。读者也可自行在 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\" 上搜到具体的说明资料，建议结合资料和本例子亲自把玩体会。\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"步骤-3-让立方体显得更立体点\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-3-让立方体显得更立体点\"}},[t._v(\"#\")]),t._v(\" 步骤 3 - 让立方体显得更立体点\")]),t._v(\" \"),n(\"p\",[t._v(\"为了让立方体默认看起来更立体点（不是单纯地正面对着我们），可以利用 \"),n(\"code\",[t._v(\"rotate\")]),t._v(\" 将立方体在 X 和 Y 轴上各旋转 \"),n(\"code\",[t._v(\"15deg\")]),t._v(\"，让它正面斜对着我们。\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"注意\")]),t._v(\"：以下代码需要合并到前面步骤 2 里的代码中去。\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\".cube {\\n  ...\\n  &.show-default {\\n    transform: translateZ( - $cube-radius ) rotateY( -15deg ) rotateX(-15deg);\\n  }\\n  &.show-left {\\n    transform: translateZ( - $cube-radius ) rotateY( 90deg );\\n  }\\n  &-face {\\n    ...\\n    opacity: 0.9;\\n    ...\\n  }\\n  ...\\n}  \\n\\n\")])])]),n(\"p\",[t._v(\"我们给立方体新增了两个表示状态的类 \"),n(\"code\",[t._v(\"show-default\")]),t._v(\" 和 \"),n(\"code\",[t._v(\"show-left\")]),t._v(\"，分别表示它「默认的展示状态 - 正面斜对着我们」和「左面正对着我们」，读者可以依样画葫芦添加另外几个面对着我们的样式代码。\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"步骤-4-设置立方体的-transition-属性\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-4-设置立方体的-transition-属性\"}},[t._v(\"#\")]),t._v(\" 步骤 4 - 设置立方体的 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 属性\")]),t._v(\" \"),n(\"p\",[t._v(\"最后一步就是给立方体添加 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 属性，让它的状态变换拥有过渡动画效果。\")]),t._v(\" \"),n(\"p\",[t._v(\"通过查阅 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\" 资料可得 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 的用法为：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\".transition-target {\\n  transition: <property> <duration> <timing-function> <delay>;\\n}\\n\\n\")])])]),n(\"p\",[t._v(\"我们为立方体加上相应的代码：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\".cube {\\n  ...\\n  // <property> = transform\\n  // <timing-function> = ease\\n  // <duration> = 1s\\n  // <delay> = 0\\n  transition: transform ease 1s;\\n  ...\\n}\\n\\n\")])])]),n(\"p\",[t._v(\"此时如果我们将立方体 \"),n(\"code\",[t._v(\"div\")]),t._v(\" 容器的 \"),n(\"code\",[t._v(\"show-default\")]),t._v(\" 类名替换成 \"),n(\"code\",[t._v(\"show-left\")]),t._v(\"，就可以看到它左面旋转至我们眼前的 3D 效果啦。\")]),t._v(\" \"),n(\"p\",[t._v(\"案例最终的效果如下图所示：\")]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/3/10/1620fe3acf281813?w=950&h=376&f=gif&s=2510549\",alt:\"3D transition\"}})]),t._v(\" \"),n(\"h3\",{attrs:{id:\"transition-动画的局限性和适用性\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#transition-动画的局限性和适用性\"}},[t._v(\"#\")]),t._v(\" Transition 动画的局限性和适用性\")]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"transition\")]),t._v(\" 实现的动画有下面这些特点：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"支持有限的 CSS 属性\")])]),t._v(\" \"),n(\"p\",[t._v(\"可通过\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"《CSS animated properties》\"),n(\"OutboundLink\")],1),t._v(\"一文查看支持过渡动效的 CSS 属性。\")]),t._v(\" \"),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[t._v(\"隐式过渡（implicit transitions）\")])]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"transition\")]),t._v(\" 的过渡动画是隐式的（如下图所示，图片来源于 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\"），即除了动画的开始状态和结束状态我们可以自定义之外，「状态变换」的具体过程由浏览器自动执行，中途无法进行人为干预。当然，我们还可以为浏览器执行动画时指定动画的具体时长（\"),n(\"code\",[t._v(\"duration\")]),t._v(\"），以及时间轴函数（\"),n(\"code\",[t._v(\"timing function\")]),t._v(\"）。\")]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/3/12/1621877fdfc0d719?w=706&h=204&f=png&s=18685\",alt:\"隐式过渡\"}})]),t._v(\" \"),n(\"ol\",{attrs:{start:\"3\"}},[n(\"li\",[t._v(\"一次性、不可暂停或反转\")])]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"transition\")]),t._v(\" 只支持两个状态之间的变换过渡，不支持多个状态的连续变换过渡，并且状态的变换是一次性的（无法循环）， 不可暂停，且不可反转（从状态 A 过渡到 B 后不能立即又过渡回 A）。\")]),t._v(\" \"),n(\"p\",[t._v(\"所以，在实际应用中我们常常利用 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 来做那些轻量的、修饰性的动效，用于增强用户在网页上操作时得到的反馈。例如：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"元素「hover」 或「点击」后的反馈\")]),t._v(\" \"),n(\"li\",[t._v(\"弹窗「打开」或「关闭」时的效果\")]),t._v(\" \"),n(\"li\",[t._v(\"...\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"扩展阅读\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩展阅读\"}},[t._v(\"#\")]),t._v(\" 扩展阅读\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"通过 Mozilla 的 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\" 文档来了解 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 的详细说明及使用示例：\")])]),t._v(\" \"),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"《Using CSS transitions》\"),n(\"OutboundLink\")],1)])]),t._v(\" \"),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[t._v(\"结合 CodePen 代码示例了解 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 和 \"),n(\"code\",[t._v(\"transform\")]),t._v(\" 的相关属性:\")])]),t._v(\" \"),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://robots.thoughtbot.com/transitions-and-transforms\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"《CSS Transitions and Transforms for Beginners》\"),n(\"OutboundLink\")],1)])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"css3-animation\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css3-animation\"}},[t._v(\"#\")]),t._v(\" CSS3 Animation\")]),t._v(\" \"),n(\"p\",[t._v(\"如果我们想让元素的动效支持多个状态之间的连续过渡变换、支持循环，甚至支持暂停或反转，我们该怎么办？答案就是：\"),n(\"code\",[t._v(\"animation\")]),t._v(\" -- 利用 CSS3 让网页元素动起来的第二个方法。\")]),t._v(\" \"),n(\"p\",[t._v(\"学习 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 动画需首先掌握两个关键的基本知识点：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"关键帧（\"),n(\"code\",[t._v(\"@keyframes\")]),t._v(\"）\")]),t._v(\" \"),n(\"li\",[n(\"code\",[t._v(\"animation\")]),t._v(\" 属性\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"关键帧-keyframes\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关键帧-keyframes\"}},[t._v(\"#\")]),t._v(\" 关键帧（\"),n(\"code\",[t._v(\"@keyframes\")]),t._v(\"）\")]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"@keyframes\")]),t._v(\" 用来定义动画的具体内容，它包括以下内容：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"动画叫什么名字？\")]),t._v(\" \"),n(\"li\",[t._v(\"动画开始、中间及结束状态有哪些？（可以理解成每个状态对应一个关键帧）\")]),t._v(\" \"),n(\"li\",[t._v(\"每个状态出现在动画过程中的哪个时间点？\")])]),t._v(\" \"),n(\"p\",[t._v(\"我们来瞅一个 \"),n(\"code\",[t._v(\"@keyframes\")]),t._v(\" 的实际例子，来源于有名的 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 动画库 \"),n(\"a\",{attrs:{href:\"https://daneden.github.io/animate.css/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Animate.css\"),n(\"OutboundLink\")],1),t._v(\"，其中的「\"),n(\"a\",{attrs:{href:\"https://github.com/daneden/animate.css/blob/master/source/bouncing_entrances/bounceIn.css\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"bounceIn\"),n(\"OutboundLink\")],1),t._v(\"」动效的关键帧代码如下：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\"@keyframes bounceIn {\\n  from,\\n  20%,\\n  40%,\\n  60%,\\n  80%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n\\n  20% {\\n    transform: scale3d(1.1, 1.1, 1.1);\\n  }\\n\\n  40% {\\n    transform: scale3d(0.9, 0.9, 0.9);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(1.03, 1.03, 1.03);\\n  }\\n\\n  80% {\\n    transform: scale3d(0.97, 0.97, 0.97);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: scale3d(1, 1, 1);\\n  }\\n}\\n\\n\")])])]),n(\"p\",[t._v(\"显然，这段关键帧的代码做了以下事情：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"定义了动画的名称为「bounceIn」\")]),t._v(\" \"),n(\"li\",[t._v(\"将动画过程划分成了 6 个状态（6 个关键帧）\")]),t._v(\" \"),n(\"li\",[t._v(\"除了开始和结束这两个时间位置外，另外 4 个关键帧的时间位置分别为：20%、40%、60% 和 80%\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"animation-属性\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#animation-属性\"}},[t._v(\"#\")]),t._v(\" \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性\")]),t._v(\" \"),n(\"p\",[t._v(\"细心的读者会发现上面示例中的 \"),n(\"code\",[t._v(\"animation-timing-function\")]),t._v(\" 相关代码，其实是 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性相关的知识点，除了关键帧之外，谙熟 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性（及其“子”属性）的具体含义及用法，也是学习 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 动效的基本要求。\")]),t._v(\" \"),n(\"p\",[n(\"code\",[t._v(\"@keyframes\")]),t._v(\" 用来定义一个动画的具体状态内容，而 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性用来定义一个元素执行某个动画时的相关动画设定，包括：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"指定元素用什么动画？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-name\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"动画的持续时间是多少？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-duration\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-duration\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"浏览器用什么样的时间轴函数来执行该动画？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-timing-function\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"是否需要延时执行该动画？(\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-delay\"),n(\"OutboundLink\")],1),t._v(\")\")]),t._v(\" \"),n(\"li\",[t._v(\"动画循环执行的次数是多少？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-iteration-count\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-iteration-count\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"动画执行的方向是什么？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-direction\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-direction\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"动画填充模式是什么？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-fill-mode\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-fill-mode\"),n(\"OutboundLink\")],1),t._v(\"）\")]),t._v(\" \"),n(\"li\",[t._v(\"动画执行状态是运行还是暂停？（\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"animation-play-state\"),n(\"OutboundLink\")],1),t._v(\"）\")])]),t._v(\" \"),n(\"p\",[t._v(\"对于 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 相关属性的介绍和使用示例，可以在 \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"MDN\"),n(\"OutboundLink\")],1),t._v(\" 找到十分详尽的资料，这里就不搬运了，读者可以点击括号内的链接进行逐一学习。\")]),t._v(\" \"),n(\"p\",[t._v(\"值得一提的是，\"),n(\"code\",[t._v(\"animation\")]),t._v(\" 动画的延时可以设置为负值（\"),n(\"a\",{attrs:{href:\"https://codepen.io/mamboer/pen/ZxGdpE\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"试试看\"),n(\"OutboundLink\")],1),t._v(\"），善用负值的 \"),n(\"code\",[t._v(\"animation-delay\")]),t._v(\" 有时候可以用最少的代码实现出乎意料的动效。\")]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/3/12/1621a4bc7d9c9595?w=950&h=350&f=gif&s=575776\",alt:\"负值animation-delay\"}})]),t._v(\" \"),n(\"p\",[t._v(\"上图的案例（\"),n(\"a\",{attrs:{href:\"https://codepen.io/mamboer/full/xWGvqj\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"查看 DEMO\"),n(\"OutboundLink\")],1),t._v(\"）来源于\"),n(\"a\",{attrs:{href:\"https://css-tricks.com/css-animation-tricks/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"《CSS Animation Tricks: State Jumping, Negative Delays, Animating Origin, and More》\"),n(\"OutboundLink\")],1),t._v(\" 一文，利用负值 \"),n(\"code\",[t._v(\"animation-delay\")]),t._v(\" 复用同一个动画轻松实现。相同的效果如果用 GIF 或 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 来实现的话，恐怕会复杂很多。\")]),t._v(\" \"),n(\"h3\",{attrs:{id:\"例子-让立方体自己转起来\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#例子-让立方体自己转起来\"}},[t._v(\"#\")]),t._v(\" 例子 - 让立方体自己转起来\")]),t._v(\" \"),n(\"p\",[t._v(\"为了更好地体会 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 和 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 两者做动效的异同之处，我们接下来试着利用 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 改写前面 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 做的立方体例子，让它自己转动起来。\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"步骤-1-利用-keyframes-定义转动的动画\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤-1-利用-keyframes-定义转动的动画\"}},[t._v(\"#\")]),t._v(\" 步骤 1 - 利用 \"),n(\"code\",[t._v(\"@keyframes\")]),t._v(\" 定义转动的动画\")]),t._v(\" \"),n(\"p\",[t._v(\"定义一个名为「autoRotate」的关键帧动画，并将 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 版本例子中显示立方体每一面的代码搬到 \"),n(\"code\",[t._v(\"@keyframes\")]),t._v(\" 中去。 立方体有 6 个面，所以我们把整个动画划分为 6 个关键帧，如下所示：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\"@keyframes autoRotate {\\n  // show-front\\n  0%, 100% {\\n    transform: translateZ( - $cube-radius );\\n  }\\n  // show-back\\n  16.5% {\\n    transform: translateZ( - $cube-radius ) rotateX( -180deg );\\n  }\\n  // show-left\\n  33% {\\n    transform: translateZ( - $cube-radius ) rotateY( 90deg );\\n  }\\n  // show-right\\n  49.5% {\\n    transform: translateZ( - $cube-radius ) rotateY( -90deg );\\n  }\\n  // show-top\\n  66% {\\n    transform: translateZ( - $cube-radius ) rotateX( -90deg );\\n  }\\n  // show-bottom \\n  82.5% {\\n    transform: translateZ( - $cube-radius ) rotateX( 90deg );\\n  }\\n}\\n\\n\")])])]),n(\"h4\",{attrs:{id:\"步骤2-将-transition-属性替换成-animation-属性\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤2-将-transition-属性替换成-animation-属性\"}},[t._v(\"#\")]),t._v(\" 步骤2 - 将 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 属性替换成 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性\")]),t._v(\" \"),n(\"p\",[t._v(\"利用 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性，在立方体上应用我们前面定义的「autoRotate」动画，并做以下设定：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"时间轴函数（\"),n(\"code\",[t._v(\"animation-timing-function\")]),t._v(\"）为 \"),n(\"code\",[t._v(\"ease\")])]),t._v(\" \"),n(\"li\",[t._v(\"持续时间（\"),n(\"code\",[t._v(\"animation-duration\")]),t._v(\"）为 18 秒\")]),t._v(\" \"),n(\"li\",[t._v(\"执行次数（\"),n(\"code\",[t._v(\"animation-iteration-count\")]),t._v(\"）为 \"),n(\"code\",[t._v(\"infinite\")]),t._v(\"，即无限次\")]),t._v(\" \"),n(\"li\",[t._v(\"执行方向（\"),n(\"code\",[t._v(\"animation-direction\")]),t._v(\"）为 \"),n(\"code\",[t._v(\"alternate\")]),t._v(\"，即正、反向交替执行\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v(\"// transition: transform ease 1s;\\nanimation: autoRotate ease 18s alternate infinite;\\n\\n\")])])]),n(\"p\",[t._v(\"以上两个简单的步骤完成了 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 替代 \"),n(\"code\",[t._v(\"transition\")]),t._v(\" 实现更丰富的动效，读者可以通过 \"),n(\"a\",{attrs:{href:\"https://codepen.io/mamboer/pen/bvVbxv\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"查看完整示例代码\"),n(\"OutboundLink\")],1),t._v(\" 并修改 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 属性的其他设定（如 \"),n(\"code\",[t._v(\"animation-play-state\")]),t._v(\" 等）来加深体会。\")]),t._v(\" \"),n(\"h3\",{attrs:{id:\"扩展阅读-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩展阅读-2\"}},[t._v(\"#\")]),t._v(\" 扩展阅读\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"结合 CodePen 案例学习 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 的每一个属性：\"),n(\"a\",{attrs:{href:\"https://robots.thoughtbot.com/css-animation-for-beginners\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"CSS Animation for Beginners\"),n(\"OutboundLink\")],1)]),t._v(\" \"),n(\"li\",[t._v(\"学习 \"),n(\"code\",[t._v(\"animation\")]),t._v(\" 动画的小奇巧：\"),n(\"a\",{attrs:{href:\"https://css-tricks.com/css-animation-tricks/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"CSS Animation Tricks: State Jumping, Negative Delays, Animating Origin, and More\"),n(\"OutboundLink\")],1)])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"小结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[t._v(\"#\")]),t._v(\" 小结\")]),t._v(\" \"),n(\"p\",[t._v(\"动效开发以「动」为始，本小节结合示例介绍了利用 CSS3 让网页元素动起来的两种方法——\"),n(\"code\",[t._v(\"transition\")]),t._v(\" 和 \"),n(\"code\",[t._v(\"animation\")]),t._v(\"，通过对比和结合来加深读者对这两种方法制作动效的理解与体会。\")])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}
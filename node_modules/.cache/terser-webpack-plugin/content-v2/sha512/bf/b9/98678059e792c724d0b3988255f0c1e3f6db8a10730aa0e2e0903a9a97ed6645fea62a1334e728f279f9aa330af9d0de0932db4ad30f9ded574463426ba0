{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{509:function(e,r,t){\"use strict\";t.r(r);var s=t(42),a=Object(s.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"后端技术选型\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#后端技术选型\"}},[e._v(\"#\")]),e._v(\" 后端技术选型\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"egg-js-简介\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#egg-js-简介\"}},[e._v(\"#\")]),e._v(\" Egg.js 简介\")]),e._v(\" \"),t(\"p\",[t(\"a\",{attrs:{href:\"https://eggjs.org/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Eggjs\"),t(\"OutboundLink\")],1),e._v(\" 是一个基于 \"),t(\"a\",{attrs:{href:\"https://www.koajs.com.cn/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Koajs\"),t(\"OutboundLink\")],1),e._v(\" 的框架，所以它应当属于框架之上的框架，它继承了 Koajs 的高性能优点，同时又加入了一些约束与开发规范，来规避Koajs框架本身的开发自由度太高的问题。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708a67ca8205f84?w=1339&h=698&f=png&s=104608\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"可以看出 \"),t(\"code\",[e._v(\"Eggjs\")]),e._v(\" 的\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708a68dd19a07b3?w=48&h=48&f=png&s=2823\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"还是很多的，而且作为大厂出品，加上现在 \"),t(\"code\",[e._v(\"nodejs\")]),e._v(\" 的发展，学习 egg 还是很有必要的。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"为什么选择-egg-js\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么选择-egg-js\"}},[e._v(\"#\")]),e._v(\" 为什么选择 Egg.js\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"egg-js-的理念\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#egg-js-的理念\"}},[e._v(\"#\")]),e._v(\" Egg.js 的理念\")]),e._v(\" \"),t(\"p\",[e._v(\"Egg 的插件机制有很高的可扩展性，\"),t(\"strong\",[e._v(\"一个插件只做一件事\")]),e._v(\"（比如 \"),t(\"a\",{attrs:{href:\"https://mozilla.github.io/nunjucks\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Nunjucks\"),t(\"OutboundLink\")],1),e._v(\" 模板封装成了 \"),t(\"a\",{attrs:{href:\"https://github.com/eggjs/egg-view-nunjucks\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"egg-view-nunjucks\"),t(\"OutboundLink\")],1),e._v(\"、MySQL 数据库封装成了 \"),t(\"a\",{attrs:{href:\"https://github.com/eggjs/egg-mysql\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"egg-mysql\"),t(\"OutboundLink\")],1),e._v(\"）。Egg 通过框架聚合这些插件，并根据自己的业务场景定制配置，这样应用的开发成本就变得很低。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708a693cb16f76e?w=1361&h=649&f=png&s=84472\",alt:\"\"}})]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[e._v(\"Egg 奉行『\"),t(\"strong\",[e._v(\"约定优于配置\")]),e._v(\"』，按照\"),t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/advanced/loader.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"一套统一的约定\"),t(\"OutboundLink\")],1),e._v(\"进行应用开发，团队内部采用这种方式可以减少开发人员的学习成本，开发人员不再是『钉子』，可以流动起来。没有约定的团队，沟通成本是非常高的，比如有人会按目录分栈而其他人按目录分功能，开发者认知不一致很容易犯错。但约定不等于扩展性差，相反 Egg 有很高的扩展性，可以按照团队的约定定制框架。使用 \"),t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/advanced/loader.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Loader\"),t(\"OutboundLink\")],1),e._v(\" 可以让框架根据不同环境定义默认配置，还可以覆盖 Egg 的默认约定。\")])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"egg-js-的特性\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#egg-js-的特性\"}},[e._v(\"#\")]),e._v(\" Egg.js 的特性\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"提供基于 Egg \"),t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/advanced/framework.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"定制上层框架\"),t(\"OutboundLink\")],1),e._v(\"的能力\")]),e._v(\" \"),t(\"li\",[e._v(\"高度可扩展的\"),t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/basics/plugin.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"插件机制\"),t(\"OutboundLink\")],1)]),e._v(\" \"),t(\"li\",[e._v(\"内置\"),t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/advanced/cluster-client.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"多进程管理\"),t(\"OutboundLink\")],1)]),e._v(\" \"),t(\"li\",[e._v(\"基于 \"),t(\"a\",{attrs:{href:\"http://koajs.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Koa\"),t(\"OutboundLink\")],1),e._v(\" 开发，性能优异\")]),e._v(\" \"),t(\"li\",[e._v(\"框架稳定，测试覆盖率高\")]),e._v(\" \"),t(\"li\",[t(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/tutorials/progressive.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"渐进式开发\"),t(\"OutboundLink\")],1)])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"现有的nodejs框架与eggjs对比\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#现有的nodejs框架与eggjs对比\"}},[e._v(\"#\")]),e._v(\" \"),t(\"strong\",[e._v(\"现有的Nodejs框架与Eggjs对比\")])]),e._v(\" \"),t(\"h3\",{attrs:{id:\"expresss-vs-egg-js\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#expresss-vs-egg-js\"}},[e._v(\"#\")]),e._v(\" Expresss VS Egg.js\")]),e._v(\" \"),t(\"p\",[e._v(\"Express和Koa两个框架是同一班人发布的，首先Koa肯定先天就有express不能替代的优势，那也代表着以Koa为基础的 egg 本身比express也是有优势的。在Express这个框架在使用的时候，由于框架的自由度很高，每个开发者都化身为哈姆雷特。比如实现某一个功能的时候，第一个使用者喜欢把 controller 和 service 区分开，另一个使用者却就喜欢写在一起，这样的结果就是同是 express 的项目，换一个人来维护时，成本变得很高，因为你不知道前面开发者的骚操作到底能骚到什么地步。而egg为了企业中使用相同的规范去开发，本身奉行“约定大于配置”的原则，就如上面这个例子，它本身就约定了这个功能该有怎样的规范去实现，从而使得它能在企业框架域中站住脚，发挥 Koajs 的价值。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"sails-vs-egg-js\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sails-vs-egg-js\"}},[e._v(\"#\")]),e._v(\" Sails VS Egg.js\")]),e._v(\" \"),t(\"p\",[e._v(\"Sails框架也是一个nodejs为基础的企业级框架。sails的思想是ruby语言的框架rails借鉴来的，它是以express为基础的一个MVC框架，本身也是奉行“约定大于配置”的原则来面向开发者，但是它本身并不属于精巧的那种，框架自身内置了一些常用的功能，例如它的 blueprints，自动生成restApi路由的功能，但是其实我们在正式开发的时候因为这个功能的不能满足我们的要求，实际是不开启这个功能的。它本身还集成了前端模块进去，但是我们只将其作为后端服务来用，也从来没有使用过这些功能。而 egg 则非常的小巧，所有的模块功能均以插件的模式由开发者选择是否需要被安装使用，完全可以按照自己的需求去觉得框架那些需要安装，做的定制开发。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"小结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),t(\"p\",[e._v(\"从以上各项可以看出 egg 无论从设计理念、特性，或者和其他一些框架的对比都丝毫不落下风，甚至要比 现有的很多 nodejs 框架要优秀，下一节我们将走进 egg 的世界。\")])])}),[],!1,null,null,null);r.default=a.exports}}]);","extractedComments":[]}
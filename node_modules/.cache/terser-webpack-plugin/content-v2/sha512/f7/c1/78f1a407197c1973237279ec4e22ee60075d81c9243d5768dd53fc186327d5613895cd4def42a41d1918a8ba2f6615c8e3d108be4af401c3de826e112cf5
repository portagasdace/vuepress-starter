{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[455],{811:function(e,n,t){\"use strict\";t.r(n);var a=t(42),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"实战篇-6-心情签到页面开发\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实战篇-6-心情签到页面开发\"}},[e._v(\"#\")]),e._v(\" 实战篇 6：心情签到页面开发\")]),e._v(\" \"),t(\"p\",[e._v(\"「新鲜天气」的心情签到页面结构比较简单，本小节主要介绍三部分内容：\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"使用日历插件\")]),e._v(\" \"),t(\"li\",[e._v(\"用户授权和登录流程\")]),e._v(\" \"),t(\"li\",[e._v(\"使用小程序云开发的数据库功能\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"使用日历插件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用日历插件\"}},[e._v(\"#\")]),e._v(\" 使用日历插件\")]),e._v(\" \"),t(\"p\",[e._v(\"心情签到页面最重要的模块就是日历，日历使用了一个\"),t(\"a\",{attrs:{href:\"https://github.com/czcaiwj/calendar\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"开源的日历插件\"),t(\"OutboundLink\")],1),e._v(\"，在小程序内使用插件需要经过下面三步。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"_1-在小程序管理后台添加三方服务插件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-在小程序管理后台添加三方服务插件\"}},[e._v(\"#\")]),e._v(\" 1. 在小程序管理后台添加三方服务插件\")]),e._v(\" \"),t(\"p\",[e._v(\"登录小程序管理后台，依次进入「设置 -> 第三方服务」搜索日历插件的 AppID（wx92c68dae5a8bb046）就可以搜索到「极点日历」，这时候申请授权即可。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653148e5a1554e6?w=555&h=444&f=jpeg&s=15786\",alt:\"\"}})]),e._v(\" \"),t(\"h4\",{attrs:{id:\"_2-在-app-json-中增加插件配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-在-app-json-中增加插件配置\"}},[e._v(\"#\")]),e._v(\" 2. 在 app.json 中增加插件配置\")]),e._v(\" \"),t(\"p\",[e._v(\"第二步是在项目的 app.json 中增加 \"),t(\"code\",[e._v(\"plugins\")]),e._v(\" 字段内容：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\"plugins\": {\\n    \"calendar\": {\\n        \"version\": \"1.1.3\",\\n        \"provider\": \"wx92c68dae5a8bb046\"\\n    }\\n}\\n\\n')])])]),t(\"h4\",{attrs:{id:\"_3-在-diary-页面增加组件配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-在-diary-页面增加组件配置\"}},[e._v(\"#\")]),e._v(\" 3. 在 diary 页面增加组件配置\")]),e._v(\" \"),t(\"p\",[e._v(\"在 pages/diary/index.json 的页面配置中的 \"),t(\"code\",[e._v(\"usingComponents\")]),e._v(\" 里增加 \"),t(\"code\",[e._v(\"calendar\")]),e._v(\" 的插件地址：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('{\\n  \"usingComponents\": {\\n    \"calendar\": \"plugin://calendar/calendar\",\\n    \"icon\": \"../../components/icon/index\"\\n  }\\n}\\n\\n\\n')])])]),t(\"p\",[e._v(\"经过上面三步之后，我们就可以在页面中使用 \"),t(\"code\",[e._v(\"<calendar />\")]),e._v(\" 标签了。具体日历的用法，可以参考它的 \"),t(\"a\",{attrs:{href:\"https://github.com/czcaiwj/calendar/wiki\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"wiki 主页\"),t(\"OutboundLink\")],1),e._v(\"。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"设置日历的心情颜色\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设置日历的心情颜色\"}},[e._v(\"#\")]),e._v(\" 设置日历的心情颜色\")]),e._v(\" \"),t(\"p\",[e._v(\"在心情设置上，笔者设计了 5 种心情，由 5 种颜色来表示，具体数值如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// client/pages/diary/index.js Page data\\nemotions: ['serene', 'hehe', 'ecstatic', 'sad', 'terrified'],\\ncolors: {\\n  serene: '#64d9fe',\\n  hehe: '#d3fc1e',\\n  ecstatic: '#f7dc0e',\\n  sad: '#ec238a',\\n  terrified: '#ee1aea'\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"签到不同的心情，最终在日历上会展现出下面的效果：\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/17/165469e5ba884ab6?w=345&h=271&f=jpeg&s=22788\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"要在某天设置该天的背景颜色，需要使用日历的 \"),t(\"code\",[e._v(\"days-color\")]),e._v(\" 属性，这里笔者将 \"),t(\"code\",[e._v(\"days-color\")]),e._v(\" 与 \"),t(\"code\",[e._v(\"daysStyle\")]),e._v(\" 进行绑定：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--diary/index.wxml--\\x3e\\n<calendar days-color=\"{{daysStyle}}\" />\\n\\n')])])]),t(\"p\",[t(\"code\",[e._v(\"daysStyle\")]),e._v(\" 的计算和赋值是在 \"),t(\"code\",[e._v(\"setCalendarColor\")]),e._v(\" 方法内的：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// diary/index.js\\nsetCalendarColor(year, month) {\\n  year = year || new Date().getFullYear()\\n  month = month || new Date().getMonth() + 1\\n  // 从数据库读取数据\\n  getEmotionByOpenidAndDate(this.data.openid, year, month)\\n    .then((r) => {\\n      const data = r.data || []\\n      const styles = []\\n      const now = new Date()\\n      const today = dateFormat(now)\\n      let todayEmotion = ''\\n      let colors = this.data.colors\\n      // 遍历日期，存在表情的日期则设置对应的颜色\\n      data.forEach((v) => {\\n        let ts = v.tsModified\\n        let date = new Date(ts)\\n        let day = date.getDate()\\n        if (today === dateFormat(date)) {\\n          todayEmotion = v.emotion || ''\\n        }\\n        styles.push({\\n          month: 'current',\\n          day,\\n          color: 'black',\\n          background: colors[v.emotion]\\n        })\\n      })\\n      // 设置 daysStyle\\n      this.setData({\\n        lastMonth: `${year}-${('00' + month).slice(-2)}`,\\n        showPublish: true,\\n        todayEmotion,\\n        daysStyle: styles\\n      })\\n    })\\n    .catch((e) => {\\n      wx.showToast({\\n        title: '加载已签数据失败，请稍后再试',\\n        icon: 'none',\\n        duration: 3000\\n      })\\n    })\\n}\\n\\n\")])])]),t(\"h3\",{attrs:{id:\"日历事件绑定\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#日历事件绑定\"}},[e._v(\"#\")]),e._v(\" 日历事件绑定\")]),e._v(\" \"),t(\"p\",[e._v(\"当日历切换月份的时候，我们应该获取当前切换到的月份，获取当前月份的心情数据，所以在 \"),t(\"code\",[e._v(\"calendar\")]),e._v(\" 上绑定 \"),t(\"code\",[e._v(\"dateChange\")]),e._v(\" 事件：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--diary/index.wxml--\\x3e\\n<calendar binddateChange=\"dateChange\" />\\n\\n')])])]),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// diary/index.js page\\ndateChange(e) {\\n  // console.log(e)\\n  let {currentYear, currentMonth} = e.detail\\n  this.setData({\\n    daysStyle: []\\n  })\\n  this.setCalendarColor(currentYear, currentMonth)\\n}\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"小程序用户登录和授权流程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小程序用户登录和授权流程\"}},[e._v(\"#\")]),e._v(\" 小程序用户登录和授权流程\")]),e._v(\" \"),t(\"p\",[e._v(\"在心情签到的功能开发中，需要得到用户信息，获取用户信息需要用户账号授权才可以。用户账号授权是小程序开发中经常碰见的技术点，本节重点介绍下小程序的登录授权机制。\")]),e._v(\" \"),t(\"p\",[e._v(\"小程序开发文档中有一张很完整的流程图（见下图），笔者会围绕这张图来介绍用户授权流程，然后结合云函数来实现一个获取用户授权信息的功能。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531493dbf89301?w=710&h=720&f=jpeg&s=61617\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"从这张图来看，整个数据通信过程包含了小程序、开发者服务器（云函数）和微信接口服务，这三方是都参与其中的，整个流程跟公众号和第三方登录授权流程都基本类似。\")]),e._v(\" \"),t(\"p\",[e._v(\"整个授权流程可分为下面五个步骤。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"_1-wx-login-获取临时登录凭证-code\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-wx-login-获取临时登录凭证-code\"}},[e._v(\"#\")]),e._v(\" 1. \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 获取临时登录凭证 code\")]),e._v(\" \"),t(\"p\",[e._v(\"「小程序」内调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 方法，如果用户是第一次授权或者授权过期，则会弹出授权窗口，提示用户个人信息会被授权给第三方服务使用。这时候如果用户同意授权，则会拿到\"),t(\"strong\",[e._v(\"临时登录凭证 code\")]),e._v(\"，这个临时登录凭证有效期只有 \"),t(\"strong\",[e._v(\"5 分钟\")]),e._v(\"。我们拿到这个临时登录凭证需要调用「开发者服务器（云函数）」的接口，将临时凭证发送给服务器，然后「开发者服务器」调用「微信接口服务」的 \"),t(\"code\",[e._v(\"jscode2session\")]),e._v(\" 接口获取 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"wx.login({\\n  success: () => {\\n    if (res.code) {\\n        // example: 081LXytJ1xxxxcdfxxx1FWxdfdsfXyth\\n        // 将 code 发送给开发者服务器\\n    }\\n  }\\n})\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_2-获取-openid-和-session-key\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-获取-openid-和-session-key\"}},[e._v(\"#\")]),e._v(\" 2. 获取 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"session_key\")])]),e._v(\" \"),t(\"p\",[e._v(\"微信内，同一用户在任意小程序、公众号或者服务号中，都会有一个不同的唯一标识 \"),t(\"code\",[e._v(\"openid\")]),e._v(\"，所以可以认为，我们在应用中获取的用户 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 是唯一的，并且该用户在另外一个应用中的 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 跟其他应用的是不同的。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"session_key\")]),e._v(\" 是微信服务派发给我们的一个用户登录有效性的凭证，通过它我们可以间接维护用户微信的登录态。\")]),e._v(\" \"),t(\"p\",[e._v(\"获取 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 需要调用微信的接口：\"),t(\"br\"),e._v(\" \"),t(\"code\",[e._v(\"https://api.weixin.qq.com/sns/jscode2session?appid=APPID&secret=SECRET&js_code=JSCODE&grant_type=authorization_code\")])]),e._v(\" \"),t(\"p\",[e._v(\"这个接口的参数为：\")]),e._v(\" \"),t(\"p\",[e._v(\"参数\")]),e._v(\" \"),t(\"p\",[e._v(\"必填\")]),e._v(\" \"),t(\"p\",[e._v(\"说明\")]),e._v(\" \"),t(\"p\",[e._v(\"appid\")]),e._v(\" \"),t(\"p\",[e._v(\"是\")]),e._v(\" \"),t(\"p\",[e._v(\"小程序唯一标识\")]),e._v(\" \"),t(\"p\",[e._v(\"secret\")]),e._v(\" \"),t(\"p\",[e._v(\"是\")]),e._v(\" \"),t(\"p\",[e._v(\"小程序的 app secret\")]),e._v(\" \"),t(\"p\",[e._v(\"js_code\")]),e._v(\" \"),t(\"p\",[e._v(\"是\")]),e._v(\" \"),t(\"p\",[e._v(\"登录时获取的 code\")]),e._v(\" \"),t(\"p\",[e._v(\"grant_type\")]),e._v(\" \"),t(\"p\",[e._v(\"是\")]),e._v(\" \"),t(\"p\",[e._v(\"填写为 authorization_code\")]),e._v(\" \"),t(\"p\",[e._v(\"其中 \"),t(\"code\",[e._v(\"appid\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"secret\")]),e._v(\" 可以在小程序管理后台找到，具体路径为「设置 -> 开发设置 -> 开发者 ID」。\"),t(\"code\",[e._v(\"appid\")]),e._v(\" 直接可见，而 \"),t(\"code\",[e._v(\"secret\")]),e._v(\" 需要点击「生成」链接，并用开发者账号的微信扫码才能生成，生成之后需自行保存。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"secret\")]),e._v(\" 是授权中保证安全性的一个重要 ID，不能外泄，因此必须放在开发者自己的服务器上使用，不能直接放到前端页面调用微信服务接口，因为如果这样的话 \"),t(\"code\",[e._v(\"secret\")]),e._v(\" 就暴露了，这也是整个授权过程需要小程序、开发者服务器、微信服务三方都介入的原因。如果忘记或泄露了 \"),t(\"code\",[e._v(\"secret\")]),e._v(\"，需要在微信后台重置。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653149778229d90?w=1298&h=447&f=png&s=39517\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"js_code\")]),e._v(\" 就是第一步中我们通过 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 获取到的临时授权凭证 code。有了\"),t(\"code\",[e._v(\"appid\")]),e._v(\"、\"),t(\"code\",[e._v(\"secret\")]),e._v(\"和\"),t(\"code\",[e._v(\"js_code\")]),e._v(\"，我们可以写一个云函数来请求微信的 \"),t(\"code\",[e._v(\"jscode2session\")]),e._v(\" 接口：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// 云函数名称：jscode2session\\nconst API_URL = 'https://api.weixin.qq.com/sns/jscode2session'\\nconst request = require('request')\\nconst querystring = require('querystring')\\n/*<jdists import=\\\"../../inline/utils.js\\\" />*/\\n\\n/*<remove>*/\\nconst $ = require('../../inline/utils')\\n/*</remove>*/\\n\\nexports.main = async (event) => {\\n  let {code} = event\\n  // 这里微信的 id 和 secret 从配置文件中获取\\n  let {id, sk} = $.getWechatAppConfig()\\n  const data = {\\n    appid: id,\\n    secret: sk,\\n    js_code: code,\\n    grant_type: 'authorization_code'\\n  }\\n  let url = API_URL + '?' + querystring.stringify(data)\\n  return new Promise((resolve, reject) => {\\n    request.get(url, (error, response, body) => {\\n      if (error || response.statusCode !== 200) {\\n        reject(error)\\n      } else {\\n        try {\\n          const r = JSON.parse(body)\\n          resolve(r)\\n        } catch (e) {\\n          reject(e)\\n        }\\n      }\\n    })\\n  })\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"有了 \"),t(\"code\",[e._v(\"jscode2session\")]),e._v(\" 这个云函数，我们就可以在小程序中调用云函数，将 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 获取的 code 作为参数传递过去：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"wx.login({\\n  success: (res) => {\\n    if(res.code){\\n      wx.cloud.callFunctions({\\n        name: 'jscode2session',\\n        data: {\\n          code: res.code\\n        }\\n      }).then(res => {\\n        let {openid = '', session_key = ''} = res.result || {}\\n        console.log(openid, session_key)\\n        wx.setStorage({\\n              key: 'openid',\\n              data: openid\\n            })\\n      })\\n    }\\n})\\n\\n\")])])]),t(\"p\",[e._v(\"关于获取到的 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"，我们还需要注意以下两点。\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"code\",[e._v(\"session_key\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 获取的 code 是一一对应的，同一 code 只能换取一次 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"。每次调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\"，都会下发一个新的 code 和对应的 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"，为了保证用户体验和登录态的有效性，开发者需要清楚用户需要重新登录时才去调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\"。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"session_key\")]),e._v(\" 是有时效性的，即便是不调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\"，\"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 也会过期，过期时间跟用户使用小程序的频率成正相关，但具体的时间长短开发者和用户都是获取不到的。\")])]),e._v(\" \"),t(\"p\",[e._v(\"由于 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 具有实效性，因而我们可以将 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 存入本地缓存，每次进入小程序的时候判断下 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 是否过期即可：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"wx.setStorage({\\n  key: 'session_key',\\n  data: session_key\\n})\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_3-获取用户昵称等信息\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-获取用户昵称等信息\"}},[e._v(\"#\")]),e._v(\" 3. 获取用户昵称等信息\")]),e._v(\" \"),t(\"p\",[e._v(\"获取用户信息需要用到 \"),t(\"code\",[e._v('open-type=\"getUserInfo\"')]),e._v(\" 的 \"),t(\"code\",[e._v(\"button\")]),e._v(\" 组件，具体做法是：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('<button open-type=\"getUserInfo\" bindgetuserinfo=\"getUserInfo\">使用该功能需要授权登录</button>\\n\\n')])])]),t(\"p\",[e._v(\"上面的代码定义了一个 \"),t(\"code\",[e._v(\"getUserInfo\")]),e._v(\" 类型的按钮，如果授权成功，则调用页面的 \"),t(\"code\",[e._v(\"getUserInfo\")]),e._v(\" 方法（通过 \"),t(\"code\",[e._v(\"bindgetuserinfo\")]),e._v(\" 绑定的）。\"),t(\"code\",[e._v(\"getUserInfo\")]),e._v(\" 代码如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"getUserInfo(){\\n  wx.getUserInfo({\\n    success: (res) => {\\n      let rs = res.userInfo\\n      this.setData({\\n        nickname: rs.nickName,\\n        avatarUrl: rs.avatarUrl\\n      })\\n    }\\n  })\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"获取到的用户信息，包括以下几部分：\")]),e._v(\" \"),t(\"p\",[e._v(\"参数\")]),e._v(\" \"),t(\"p\",[e._v(\"类型\")]),e._v(\" \"),t(\"p\",[e._v(\"说明\")]),e._v(\" \"),t(\"p\",[e._v(\"userInfo\")]),e._v(\" \"),t(\"p\",[e._v(\"OBJECT\")]),e._v(\" \"),t(\"p\",[e._v(\"用户信息对象，不包含 openid 等敏感信息\")]),e._v(\" \"),t(\"p\",[e._v(\"rawData\")]),e._v(\" \"),t(\"p\",[e._v(\"String\")]),e._v(\" \"),t(\"p\",[e._v(\"不包括敏感信息的原始数据字符串，用于计算签名\")]),e._v(\" \"),t(\"p\",[e._v(\"signature\")]),e._v(\" \"),t(\"p\",[e._v(\"String\")]),e._v(\" \"),t(\"p\",[e._v(\"使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息\")]),e._v(\" \"),t(\"p\",[e._v(\"encryptedData\")]),e._v(\" \"),t(\"p\",[e._v(\"String\")]),e._v(\" \"),t(\"p\",[e._v(\"包括敏感数据在内的完整用户信息的加密数据\")]),e._v(\" \"),t(\"p\",[e._v(\"iv\")]),e._v(\" \"),t(\"p\",[e._v(\"String\")]),e._v(\" \"),t(\"p\",[e._v(\"加密算法的初始向量\")]),e._v(\" \"),t(\"p\",[e._v(\"除了实战中使用的包含用户昵称和头像的 \"),t(\"code\",[e._v(\"userInfo\")]),e._v(\" 外，还有敏感信息的 \"),t(\"code\",[e._v(\"encryptedData\")]),e._v(\" 字段，如果需要使用该字段，则需要按照\"),t(\"a\",{attrs:{href:\"https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"加密数据解密算法\"),t(\"OutboundLink\")],1),e._v(\"的文档来解密。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"_4-解密敏感数据\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-解密敏感数据\"}},[e._v(\"#\")]),e._v(\" 4. 解密敏感数据\")]),e._v(\" \"),t(\"p\",[e._v(\"尽管心情签到功能并没有涉及敏感信息的解密，这里笔者还是简单介绍下如何解密敏感数据。\")]),e._v(\" \"),t(\"p\",[e._v(\"解密敏感信息需要用到小程序的 AppID 和 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"，在开发者文档中有提供 Node.js 版本的解密 demo，下面来简单实现个云函数：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"const crypto = require('crypto');\\n/*<jdists import=\\\"../../inline/utils.js\\\" />*/\\n\\n/*<remove>*/\\nconst $ = require('../../inline/utils')\\n/*</remove>*/\\n\\nfunction WXBizDataCrypt(appId, sessionKey) {\\n  this.appId = appId;\\n  this.sessionKey = sessionKey;\\n}\\n\\nWXBizDataCrypt.prototype.decryptData = function (encryptedData, iv) {\\n  // base64 decode\\n  const sessionKey = new Buffer(this.sessionKey, 'base64');\\n  encryptedData = new Buffer(encryptedData, 'base64');\\n  iv = new Buffer(iv, 'base64');\\n  let decoded;\\n  try {\\n    // 解密\\n    const decipher = crypto.createDecipheriv('aes-128-cbc', sessionKey, iv);\\n    // 设置自动 padding 为 true，删除填充补位\\n    decipher.setAutoPadding(true);\\n    decoded = decipher.update(encryptedData, 'binary', 'utf8');\\n    decoded += decipher.final('utf8');\\n    decoded = JSON.parse(decoded);\\n  } catch (err) {\\n    throw new Error('Illegal Buffer');\\n  }\\n  if (decoded.watermark.appid !== this.appId) {\\n    throw new Error('Illegal Buffer');\\n  }\\n  return decoded;\\n};\\n\\nexports.main = async (event) => {\\n  let {iv, data, session_key} = event\\n  // 这里微信的 id 和 secret 从配置文件中获取\\n  let appId = $.getWechatAppConfig().id\\n  return new Promise((resolve, reject) => {\\n    const pc = new WXBizDataCrypt(appId, session_key)\\n    resolve(pc.decryptData(data, iv))\\n  })\\n}\\n\\n\")])])]),t(\"h4\",{attrs:{id:\"_5-检测-session-key-是否失效\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-检测-session-key-是否失效\"}},[e._v(\"#\")]),e._v(\" 5. 检测 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 是否失效\")]),e._v(\" \"),t(\"p\",[e._v(\"前面提到 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 需要存入本地缓存，但是存在可能失效的情况，小程序提供的 \"),t(\"code\",[e._v(\"wx.checkSession\")]),e._v(\" 方法可以检测当前的 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 是否失效，如果失效则重新调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 登录授权流程。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"wx.checkSession\")]),e._v(\" 方法并不需要传入任何有关 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 的信息参数，而是小程序自己去调自己的服务来查询用户最近一次生成的 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 是否过期。如果当前 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 过期，就让用户来重新登录，更新 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"，并将最新的 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 存入用户数据表中。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"整个授权流程图和代码\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#整个授权流程图和代码\"}},[e._v(\"#\")]),e._v(\" 整个授权流程图和代码\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653149c0d99db7d?w=1024&h=768&f=jpeg&s=116659\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"用代码来表示如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// 或者在 app.js 内使用 onLaunch\\nonLoad(){\\n  let loginFlag = wx.getStorageSync('session_key');\\n  if (loginFlag) {\\n    // 检查 session_key 是否过期\\n    wx.checkSession({\\n        // session_key 有效（未过期）\\n        success: function() {\\n            // 业务逻辑处理\\n        },\\n\\n        // session_key 过期\\n        fail: function() {\\n            // session_key 过期，重新登录\\n            this.doLogin();\\n        }\\n    });\\n  ) else {\\n    // 无 session_key，作为首次登录\\n    this.doLogin();\\n  }\\n}\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"使用云开发数据库来存储心情数据\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用云开发数据库来存储心情数据\"}},[e._v(\"#\")]),e._v(\" 使用云开发数据库来存储心情数据\")]),e._v(\" \"),t(\"p\",[e._v(\"可以在小程序中通过 \"),t(\"code\",[e._v(\"wx.cloud\")]),e._v(\" 相关的方法使用云开发的数据库，而且它支持权限设置，很方便存储 UGC（用户原创内容）的数据（在\"),t(\"a\",{attrs:{href:\"https://juejin.im/book/5b70f101e51d456669381803/section/5b70f2656fb9a009a545f6c7\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"第 3 节\"),t(\"OutboundLink\")],1),e._v(\"介绍过）。在心情签到功能中，就使用了小程序云的数据库，用它来存储用户的签到心情。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"在云开发控制台创建数据库\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在云开发控制台创建数据库\"}},[e._v(\"#\")]),e._v(\" 在云开发控制台创建数据库\")]),e._v(\" \"),t(\"p\",[e._v(\"首先从小程序开发者工具中的「云开发」进入数据库管理 tab，然后点击「添加集合」，创建一个 \"),t(\"code\",[e._v(\"diary\")]),e._v(\" 的集合（数据库）。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653149ee77c70b2?w=544&h=176&f=jpeg&s=10801\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"这个集合中的文档数据格式如下图所示。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/9/1/165938bd3dbe91ab?w=311&h=143&f=jpeg&s=13693\",alt:\"\"}})]),e._v(\" \"),t(\"p\",[e._v(\"其中，\"),t(\"code\",[e._v(\"_id\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"_openid\")]),e._v(\" 是系统自动生成的，文档（表）中其他字段的意思解释如下：\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"emotion：当天的心情，一共有 5 种心情\")]),e._v(\" \"),t(\"li\",[e._v(\"tsModified：签到的时间戳\")]),e._v(\" \"),t(\"li\",[e._v(\"openid：根据授权信息获取的 openid，跟 \"),t(\"code\",[e._v(\"_openid\")]),e._v(\" 一致\")])]),e._v(\" \"),t(\"p\",[e._v(\"有了数据库的信息，需要编写增加一条心情数据（\"),t(\"code\",[e._v(\"addEmotion\")]),e._v(\"）和获取某个月份所有心情数据（\"),t(\"code\",[e._v(\"getEmotionByOpenidAndDate\")]),e._v(\"）。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"增加心情数据\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#增加心情数据\"}},[e._v(\"#\")]),e._v(\" 增加心情数据\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// lib/api.js\\n// 初始化 cloud 环境\\nwx.cloud.init({\\n  env: 'envID'\\n})\\n\\n// 获取数据库实例\\nconst db = wx.cloud.database()\\n\\n// 用户心情签到\\nexport const addEmotion = (openid, emotion) => {\\n  return db.collection('diary').add({\\n    data: {\\n      openid,\\n      emotion,\\n      tsModified: Date.now()\\n    }\\n  })\\n}\\n\\n\")])])]),t(\"h3\",{attrs:{id:\"获取心情数据\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获取心情数据\"}},[e._v(\"#\")]),e._v(\" 获取心情数据\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// lib/api.js\\n// 初始化 cloud 环境\\nwx.cloud.init({\\n  env: 'envID'\\n})\\n\\n// 获取数据库实例\\nconst db = wx.cloud.database()\\n\\n// 根据用户 openid 和日期获取心情数据\\nexport const getEmotionByOpenidAndDate = (openid, year, month) => {\\n  const _ = db.command\\n  year = parseInt(year)\\n  month = parseInt(month)\\n\\n  let start = new Date(year, month - 1, 1).getTime()\\n  let end = new Date(year, month, 1).getTime()\\n  // console.log(start, end, `${year}-${nextMonth}-01 00:00:00`,`${year}-${month}-01 00:00:00`)\\n  return db\\n    .collection('diary')\\n    .where({\\n      openid,\\n      tsModified: _.gte(start).and(_.lt(end))\\n    })\\n    .get()\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"小程序云开发的数据库为了提升查询性能，\"),t(\"strong\",[e._v(\"不能够一次查询出来超过20条以上的数据\")]),e._v(\"。所以上面的代码最多能够查询出20条数据，当签到数据超过20天（一个月最多31天），这时候就需要做两次查询（根据\"),t(\"code\",[e._v(\"tsModified\")]),e._v(\" 正序，反序各取一次），然后合并数据了，所以最后的代码如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"export const getEmotionByOpenidAndDate = (openid, year, month) => {\\n  const _ = db.command\\n  year = parseInt(year)\\n  month = parseInt(month)\\n\\n  let start = new Date(year, month - 1, 1).getTime()\\n  let end = new Date(year, month, 1).getTime()\\n  // 这里因为限制 limit 20，所以查询两次，一共31条（最多31天）记录\\n  // 正序反序各取一次，使用 orderBy 排序\\n  return new Promise((resolve, reject) => {\\n    Promise.all([\\n      db\\n        .collection('diary')\\n        .where({\\n          openid,\\n          tsModified: _.gte(start).and(_.lt(end))\\n        })\\n        .orderBy('tsModified', 'desc')\\n        .limit(15)\\n        .get(),\\n      db\\n        .collection('diary')\\n        .where({\\n          openid,\\n          tsModified: _.gte(start).and(_.lt(end))\\n        })\\n        .orderBy('tsModified', 'asc')\\n        .limit(16)\\n        .get()\\n    ])\\n      .then((data) => {\\n        let [data1, data2] = data\\n        let set = new Set()\\n        data1 = data1.data || []\\n        data2 = data2.data || []\\n        data = data1.concat(data2).filter((v) => {\\n          if (set.has(v._id)) {\\n            return false\\n          }\\n          set.add(v._id)\\n          return true\\n        })\\n        resolve({data})\\n      })\\n      .catch((e) => {\\n        console.log(e)\\n        reject(e)\\n      })\\n  })\\n}\\n\\n\")])])]),t(\"p\",[e._v(\"心情数据是根据 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 和月份获取的，日期范围为：月份 1 日的凌晨 0 点（start）到下一月份 1 日的凌晨 0 点（end），在云数据库中可以使用 \"),t(\"code\",[e._v(\"_.gte(start).and(_.lt(end))\")]),e._v(\"，即大于等于 \"),t(\"code\",[e._v(\"start\")]),e._v(\" 小于 \"),t(\"code\",[e._v(\"end\")]),e._v(\"。\")]),e._v(\" \"),t(\"p\",[e._v(\"这里计算 \"),t(\"code\",[e._v(\"start\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"end\")]),e._v(\" 的时候，遇见了 \"),t(\"code\",[e._v(\"Date\")]),e._v(\" 兼容性的两个问题：\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"code\",[e._v(\"localDateString\")]),e._v(\" 问题\")]),e._v(\" \"),t(\"li\",[e._v(\"时区问题\")])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"localdatestring-问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#localdatestring-问题\"}},[e._v(\"#\")]),e._v(\" \"),t(\"code\",[e._v(\"localDateString\")]),e._v(\" 问题\")]),e._v(\" \"),t(\"p\",[e._v(\"笔者一开始使用将日期转化成类似 \"),t(\"code\",[e._v(\"2018-01-01 00:00:00\")]),e._v(\" 的格式，然后使用 \"),t(\"code\",[e._v(\"new Date('2018-01-01 00:00:00')\")]),e._v(\"，可以得到 Date 实例，这在开发者工具和 Android 手机上都没有问题，但是在 iOS 系统下却识别成了 \"),t(\"code\",[e._v(\"Invalid Date\")]),e._v(\"，变成了 \"),t(\"code\",[e._v(\"1970-01-01\")]),e._v(\"。这是因为 iOS 上 \"),t(\"code\",[e._v(\"localDateString\")]),e._v(\"（本地时间）的\"),t(\"a\",{attrs:{href:\"https://stackoverflow.com/questions/13363673/javascript-date-is-invalid-on-ios\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"问题\"),t(\"OutboundLink\")],1),e._v(\"，使用 \"),t(\"code\",[e._v(\"new Date().toLocaleDateString()\")]),e._v(\" 就可以知道，iOS 下识别的数据是 \"),t(\"code\",[e._v(\"2018/01/01 00:00:00\")]),e._v(\" 这样的格式的。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"时区问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#时区问题\"}},[e._v(\"#\")]),e._v(\" 时区问题\")]),e._v(\" \"),t(\"p\",[e._v(\"小程序云开发的云函数和数据库是面向全球开发者的，它们使用的时区并不是我们的东八区（北京时间），因此我们在获取 Date 的时候就要小心，简单拼接 \"),t(\"code\",[e._v(\"2018-01-01 00:00:00\")]),e._v(\" 获取的时间并不是北京时间，数据库存入的数据如果使用北京时间（本地 JS），那么获取数据的时候就应该使用北京时间（云端执行 JS 时）。\")]),e._v(\" \"),t(\"p\",[e._v(\"为了解决 Date 的问题，笔者在计算时区的时候，都转换成了 UTC 标准时间，比如在云函数中，笔者使用了 \"),t(\"code\",[e._v(\"new Date().getUTCHours()\")]),e._v(\" 这样的时间，详见 server/inline/utils.js。\")]),e._v(\" \"),t(\"p\",[e._v(\"而在获取特定某一天的 Date 实例的时候，则使用 \"),t(\"code\",[e._v(\"new Date(year, month, day)\")]),e._v(\" 的方式，这样在数据库获取某个月份时间戳时，就不会出现不同系统环境不同数值的问题，详见 client/lib/api.js 的 \"),t(\"code\",[e._v(\"getEmotionByOpenidAndDate\")]),e._v(\" 方法。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"使用-navigator-增加跳转\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用-navigator-增加跳转\"}},[e._v(\"#\")]),e._v(\" 使用 navigator 增加跳转\")]),e._v(\" \"),t(\"p\",[e._v(\"心情签到页面做完之后，还需要在天气预报页面给它做跳转。在天气预报页面增加跳转的 WXML 代码如下：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--weather/index.wxml--\\x3e\\n<view class=\"navigator\" bindtap=\"goDiary\">\\n  <icon type=\"edit\"/>\\n</view>\\n\\n')])])]),t(\"p\",[e._v(\"页面绑定了事件 \"),t(\"code\",[e._v(\"goDiary\")]),e._v(\" 代码：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// weather/index.js\\nPage({\\n  goDiary() {\\n    let url = `/pages/diary/index`\\n    wx.navigateTo({\\n      url\\n    })\\n  }\\n})\\n\\n\")])])]),t(\"p\",[e._v(\"在心情签到页面，顶部导航需要增加返回操作：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v('\\x3c!--diary/index.wxml--\\x3e\\n<view class=\"navigator\">\\n  <icon type=\"back\" bindtap=\"goBack\"/>\\n</view>\\n\\n')])])]),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"// diary/index.js\\nPage({\\n  goBack() {\\n    wx.navigateBack()\\n  }\\n})\\n\\n\")])])]),t(\"h2\",{attrs:{id:\"心情签到页面整体流程图\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#心情签到页面整体流程图\"}},[e._v(\"#\")]),e._v(\" 心情签到页面整体流程图\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531487782ac35b?w=1024&h=768&f=jpeg&s=210592\",alt:\"\"}})]),e._v(\" \"),t(\"h2\",{attrs:{id:\"小结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),t(\"p\",[e._v(\"本节介绍了新鲜天气日历使用、用户授权流程和数据库操作。\")]),e._v(\" \"),t(\"p\",[e._v(\"日历使用需要在小程序管理后台搜索对应的插件 id，然后申请授权。日历的日期背景颜色是跟当时签到心情相对应的，当切换了日历的月份之后，应该重新获取当前月份的签到数据信息。\")]),e._v(\" \"),t(\"p\",[e._v(\"用户授权流程由小程序、开发者服务器和微信接口服务三方参与，整个流程包括调用 \"),t(\"code\",[e._v(\"wx.login\")]),e._v(\" 授权获取临时登录凭证，使用临时登录凭证获取 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 和 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\"，以及获取用户信息三个步骤。\"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 可以用于解密敏感数据，但是 \"),t(\"code\",[e._v(\"session_key\")]),e._v(\" 具有时效性，需要调用 \"),t(\"code\",[e._v(\"wx.checkSession\")]),e._v(\" 方法来校验其是否失效。\")]),e._v(\" \"),t(\"p\",[e._v(\"云开发的数据库每条记录自带 \"),t(\"code\",[e._v(\"_openid\")]),e._v(\" 字段，可以单独来设置数据库权限。笔者在心情签到功能中主动通过授权获得用户 \"),t(\"code\",[e._v(\"openid\")]),e._v(\" 然后增加记录。在进行跟日期、时间戳相关的数据查询时应该注意云环境的时区，最佳实践是使用格林尼治时间，使用 \"),t(\"code\",[e._v(\"Date\")]),e._v(\" 对象的时候也应该注意生产环节和本地环境 \"),t(\"code\",[e._v(\"localeDateString\")]),e._v(\" 的差异。\")])])}),[],!1,null,null,null);n.default=s.exports}}]);","extractedComments":[]}
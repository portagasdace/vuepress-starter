{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[339],{695:function(s,e,n){\"use strict\";n.r(e);var t=n(42),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h2\",{attrs:{id:\"导读\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#导读\"}},[s._v(\"#\")]),s._v(\" 导读\")]),s._v(\" \"),n(\"p\",[s._v(\"本节标题：「工程竣工 」- 构建生产环境\")]),s._v(\" \"),n(\"p\",[s._v(\"本节主旨：从0实现生产环境下双端构建和资源处理\")]),s._v(\" \"),n(\"p\",[s._v(\"本节配套代码：\")]),s._v(\" \"),n(\"p\",[n(\"a\",{attrs:{href:\"https://github.com/Bigerfe/koa-react-ssr/tree/better/packages/my-react-ssr-prod\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://github.com/Bigerfe/koa-react-ssr/tree/better/packages/my-react-ssr-prod\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"h1\",{attrs:{id:\"正文\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正文\"}},[s._v(\"#\")]),s._v(\" 正文\")]),s._v(\" \"),n(\"p\",[s._v(\"诶？这么快就到生产环境了吗？我们的开发环境还没彻底完善呢，之前遗留的手动刷新页面才能看到最新效果的问题呢？\")]),s._v(\" \"),n(\"p\",[s._v(\"是的，的确有些地方还需要优化，但这个过程就像是““盖房子”。\")]),s._v(\" \"),n(\"p\",[s._v(\"当我们配置生产环境后，这个“毛坯房”就算是建造完成了，他已经能“用”，而剩下的那些优化和处理相当于是后期的“装修”，是为了让我们住的更舒服，体验更好。\")]),s._v(\" \"),n(\"p\",[s._v(\"“毛坯房”就像是骨架，骨架是基础，有了骨架后面的优化才有立足之地。\")]),s._v(\" \"),n(\"p\",[s._v(\"所以，我们本节一起来进行生产环境的配置、构建以及项目部署，让我们的“毛坯房竣工”。\")]),s._v(\" \"),n(\"h1\",{attrs:{id:\"生产环境都需要做哪些处理呢\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生产环境都需要做哪些处理呢\"}},[s._v(\"#\")]),s._v(\" 生产环境都需要做哪些处理呢？\")]),s._v(\" \"),n(\"p\",[s._v(\"这里主要是对\"),n(\"code\",[s._v(\"webpack\")]),s._v(\"进行相关配置，相信大家都玩过，那咱们就开门见山了。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"对应的应该拥有一个独立的生产环境配置文件\")]),s._v(\" \"),n(\"li\",[s._v(\"设置环境变量，区分开发和生产环境\")]),s._v(\" \"),n(\"li\",[s._v(\"压缩\"),n(\"code\",[s._v(\"js css\")]),s._v(\"资源，体积更小，提高下载速度\")]),s._v(\" \"),n(\"li\",[n(\"code\",[s._v(\"js\")]),s._v(\"分包，基础库和业务代码分别打包，可以提高缓存利用率,提高页面渲染效率，节省用户流量\")]),s._v(\" \"),n(\"li\",[s._v(\"为打包的\"),n(\"code\",[s._v(\"bundle\")]),s._v(\"名称配置\"),n(\"code\",[s._v(\"hash\")]),s._v(\"值,这样有利于发布和资源缓存\")]),s._v(\" \"),n(\"li\",[s._v(\"生成资源映射表，用于服务端使用\")]),s._v(\" \"),n(\"li\",[s._v(\"有独立的发布命令\")]),s._v(\" \"),n(\"li\",[s._v(\"可以在本机运行生产环境 \"),n(\"code\",[s._v(\"server\")]),s._v(\"，方便本地调试\")]),s._v(\" \"),n(\"li\",[s._v(\"开发环境做相应的调整\")])]),s._v(\" \"),n(\"h1\",{attrs:{id:\"整体看资源的分布情况\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#整体看资源的分布情况\"}},[s._v(\"#\")]),s._v(\" 整体看资源的分布情况\")]),s._v(\" \"),n(\"p\",[s._v(\"先看下开发环境和生产环境的资源加载情况，然后下面再进行具体的实现。\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/3/16f6afce7b40116b?w=833&h=553&f=png&s=109031\",alt:\"\"}})]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/3/16f6afdaed2eb779?w=833&h=553&f=png&s=108169\",alt:\"\"}})]),s._v(\" \"),n(\"p\",[s._v(\"通过上图可以比较清晰的看到生产环境和开发环境的差别。\")]),s._v(\" \"),n(\"p\",[s._v(\"下面来看具体实现\")]),s._v(\" \"),n(\"h1\",{attrs:{id:\"准备工作\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#准备工作\"}},[s._v(\"#\")]),s._v(\" 准备工作\")]),s._v(\" \"),n(\"p\",[s._v(\"安装所需 \"),n(\"code\",[s._v(\"npm\")]),s._v(\" 包\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"npm i optimize-css-assets-webpack-plugin 压缩 css\\nnpm i uglifyjs-webpack-plugin 压缩 js\\nnpm i mini-css-extract-plugin 提取 css ，上一节已介绍过\\nnpm i clean-webpack-plugin 打包前清理 dist 目录\\n\\n\")])])]),n(\"h1\",{attrs:{id:\"前端生产环境构建配置\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端生产环境构建配置\"}},[s._v(\"#\")]),s._v(\" 前端生产环境构建配置\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"css js\")]),s._v(\"相关的 \"),n(\"code\",[s._v(\"loader\")]),s._v(\" 配置和我们前面介绍的开发环境的一致，所以这里仅介绍有区别的地方。\")]),s._v(\" \"),n(\"p\",[s._v(\"首先我们创建生产环境配置文件\"),n(\"code\",[s._v(\"./webpack/webpack.prod.config.js\")])]),s._v(\" \"),n(\"h2\",{attrs:{id:\"配置环境变量\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置环境变量\"}},[s._v(\"#\")]),s._v(\" 配置环境变量\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"    plugins: [\\n        //...\\n        new webpack.DefinePlugin({\\n        'process.env': { NODE_ENV: '\\\"production\\\"'},//标识生产环境\\n        '__IS_PROD__': true//方便在代码中使用\\n        })\\n        //...\\n    ]\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"配置文件-hash\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置文件-hash\"}},[s._v(\"#\")]),s._v(\" 配置文件 hash\")]),s._v(\" \"),n(\"p\",[s._v(\"方便文件的发布和充分利用资源的强缓存\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//...\\n output: {\\n        //设置 js\\n        filename: 'js/[name].[chunkhash:8].js',\\n        path: resolvePath('../dist/static'),\\n        publicPath: '/'\\n    }\\n//...\\n    \\n   new MiniCssExtractPlugin({\\n        //设置 css \\n        filename:'css/[name].[contenthash:8].css'\\n        })\\n//...\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"压缩-js-css-文件\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#压缩-js-css-文件\"}},[s._v(\"#\")]),s._v(\" 压缩 js css 文件\")]),s._v(\" \"),n(\"p\",[s._v(\"使其体积更小，提高下载速度\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//压缩和优化 css\\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\\n\\n//压缩 js 代码\\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\\n\\n//...\\n\\n optimization: {\\n        minimizer: [\\n            //压缩 js\\n            new UglifyJsPlugin({\\n                uglifyOptions: {\\n                    compress: {\\n                        drop_console: true,\\n                        drop_debugger: true\\n                    },\\n                    warnings: false,\\n                    ie8: true,\\n                    output: {\\n                        comments: false,\\n                    },\\n                },\\n                cache: true,\\n                sourceMap: false\\n            }),\\n            //压缩 css\\n            new OptimizeCSSAssetsPlugin()\\n        ]\\n    }\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"js-分包\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js-分包\"}},[s._v(\"#\")]),s._v(\" js 分包\")]),s._v(\" \"),n(\"p\",[s._v(\"将基础库和业务代码分别打包\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"optimization: {\\n       //...\\n        splitChunks: {\\n            cacheGroups: {\\n                libs: { // 抽离第三方库\\n                    test: /node_modules/, // 指定node_modules下的包\\n                    chunks: 'initial',\\n                    name: 'libs'// 打包后的文件名    \\n                }\\n            }\\n        }\\n    }\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"生成资源映射表-用于服务端使用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生成资源映射表-用于服务端使用\"}},[s._v(\"#\")]),s._v(\" 生成资源映射表，用于服务端使用\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/3/16f6b1051b95c0fb?w=472&h=173&f=png&s=29708\",alt:\"\"}})]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//生成 manifest 方便定位对应的资源文件\\nconst ManifestPlugin = require('webpack-manifest-plugin');\\n\\n//...\\n\\n plugins: [\\n        //生成 manifest\\n        new ManifestPlugin({\\n            fileName: '../server/asset-manifest.json',\\n        })\\n    ],\\n\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"配置构建命令\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置构建命令\"}},[s._v(\"#\")]),s._v(\" 配置构建命令\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('npm run client:build\\n\\n// ./package.json\\n\\n\"client:build\": \"NODE_ENV=production webpack --config  ./webpack/webpack.prod.config.js\",\\n\\n\\n\\n')])])]),n(\"p\",[s._v(\"这仅仅是前端资源的构建，还缺少服务端代码的构建。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"完整前端生产环境配置代码\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#完整前端生产环境配置代码\"}},[s._v(\"#\")]),s._v(\" 完整前端生产环境配置代码\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// webpack/webpack.prod.config.js\\n\\n//生产环境配置\\n\\n//webpack 配置文件\\nconst path = require('path')\\nconst webpack = require('webpack');\\n//提取 css  插件\\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\\n//生成 manifest 方便定位对应的资源文件\\nconst ManifestPlugin = require('webpack-manifest-plugin');\\n\\n//压缩 js 代码\\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\\n\\n//构建前清理目录\\nconst {\\n    CleanWebpackPlugin\\n} = require('clean-webpack-plugin');\\n\\n//压缩和优化 css\\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\\n\\n//路径转换\\nconst resolvePath = (pathstr) => path.resolve(__dirname, pathstr);\\n\\nprocess.env.BABEL_ENV ='development';//指定 babel 编译环境\\n\\nmodule.exports = {\\n    mode: 'production',\\n    devtool: 'none',\\n    entry: {\\n        main: [resolvePath('../src/client/app/index.js')] //指定一个入口名称\\n    },\\n    output: {\\n        filename: 'js/[name].[chunkhash:8].js',\\n        path: resolvePath('../dist/static'),\\n        publicPath: '/'\\n    },\\n    module: {\\n        rules: [{\\n                test: /\\\\.jsx?$/,\\n                loader: 'babel-loader',\\n                exclude: /node_modules/\\n            },\\n            {\\n                test: /\\\\.(sa|sc|c)ss$/,\\n                use: [{\\n                        loader: MiniCssExtractPlugin.loader,\\n                    },\\n                    {\\n                        loader: \\\"css-loader\\\",\\n                    },\\n                    {\\n                        loader: \\\"postcss-loader\\\"\\n                    },\\n                    {\\n                        loader: \\\"sass-loader\\\"\\n                    },\\n                ]\\n            },\\n            {\\n                test: /\\\\.(png|jpg|gif)$/,\\n                use: [{\\n                    loader: 'file-loader',\\n                    options: {\\n                        name: 'img/[name].[hash:8].[ext]',\\n                        publicPath: '/'\\n                    }\\n                }]\\n            }\\n        ]\\n    },\\n    plugins: [\\n        new MiniCssExtractPlugin({\\n            filename: 'css/[name].[contenthash:8].css'\\n        }),\\n        // 清理上一次构建的文件\\n        new CleanWebpackPlugin(),\\n        //生成 manifest 方便定位对应的资源文件\\n        new ManifestPlugin({\\n            fileName: '../server/asset-manifest.json',\\n        }),\\n        new webpack.DefinePlugin({\\n        'process.env': { NODE_ENV: '\\\"production\\\"'},\\n        '__IS_PROD__': true\\n        })\\n\\n    ],\\n    optimization: {\\n        minimizer: [\\n            new UglifyJsPlugin({\\n                uglifyOptions: {\\n                    compress: {\\n                        drop_console: true,\\n                        drop_debugger: true\\n                    },\\n                    warnings: false,\\n                    ie8: true,\\n                    output: {\\n                        comments: false,\\n                    },\\n                },\\n                cache: true,\\n                parallel: true,\\n                sourceMap: false\\n            }),\\n            new OptimizeCSSAssetsPlugin()\\n        ],\\n        splitChunks: {\\n            cacheGroups: {\\n                libs: { // 抽离第三方库\\n                    test: /node_modules/, // 指定是node_modules下的第三方包\\n                    chunks: 'initial',\\n                    name: 'libs'// 打包后的文件名，任意命名    \\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\\n\")])])]),n(\"h1\",{attrs:{id:\"服务端生产环境配置\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务端生产环境配置\"}},[s._v(\"#\")]),s._v(\" 服务端生产环境配置\")]),s._v(\" \"),n(\"p\",[s._v(\"我们需要在已有的配置\"),n(\"code\",[s._v(\"webpack.server.config\")]),s._v(\"中兼容生产环境的配置。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"定义环境变量\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义环境变量\"}},[s._v(\"#\")]),s._v(\" 定义环境变量\")]),s._v(\" \"),n(\"p\",[s._v(\"在服务端就可以通过以下变量来判断当前环境。\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"process.env.NODE_ENV:production|development\")])]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"__IS_PROD__:true|false\")]),s._v(\" 简易访问\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"\\n//获取当前环境\\nconst isProd=process.env.NODE_ENV==='production';\\n\\n\\n//...\\n    plugins:[\\n        new webpack.DefinePlugin({\\n        'process.env': { NODE_ENV: `\\\"${process.env.NODE_ENV}\\\"`},\\n        '__IS_PROD__':isProd\\n        })\\n    ]\\n//...\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"定义生产目录别名\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义生产目录别名\"}},[s._v(\"#\")]),s._v(\" 定义生产目录别名\")]),s._v(\" \"),n(\"p\",[s._v(\"因为在服务端执行需要导入静态资源映射表\"),n(\"code\",[s._v(\"asset-manifest.json\")]),s._v(\"，定义别名更方便导入。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//...\\n resolve: {\\n        alias: {\\n            //定义 dist 目录别名，方便导入模块\\n            '@dist': path.resolve(__dirname,'../dist')\\n        }\\n    }\\n/...\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"服务端代码调整\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务端代码调整\"}},[s._v(\"#\")]),s._v(\" 服务端代码调整\")]),s._v(\" \"),n(\"p\",[s._v(\"服务端需要根据当前环境来启动，生产环境需要得到\"),n(\"code\",[s._v(\"js css\")]),s._v(\" 资源文件，然后作为资源和 \"),n(\"code\",[s._v(\"html\")]),s._v(\" 结构一同直出给浏览器端。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"创建资源处理模块\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建资源处理模块\"}},[s._v(\"#\")]),s._v(\" 创建资源处理模块\")]),s._v(\" \"),n(\"p\",[s._v(\"新建\"),n(\"code\",[s._v(\"src/server/common/assets.js\")]),s._v(\"模块，用于服务端对静态资源的读取。\")]),s._v(\" \"),n(\"p\",[s._v(\"下面代码是一个完整的模块，最终返回静态资源的 \"),n(\"code\",[s._v(\"html\")]),s._v(\" 标记。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('//生产环境中 静态资源的处理\\nmodule.exports = function () {\\n\\n    let devHost = \\'//localhost:9001\\';\\n\\n    let jsFiles = [\\'libs.js\\',\\'main.js\\'];\\n    let cssFiles = [\\'main.css\\'];\\n\\n    const assets = {\\n        js: [],\\n        css: []\\n    };\\n    if (!__IS_PROD__) {//开发环境\\n        assets.js.push(`<script type=\"text/javascript\"  src=\"${devHost}/libs.js\"><\\/script>`);\\n        assets.js.push(`<script type=\"text/javascript\"  src=\"${devHost}/main.js\"><\\/script>`);\\n        assets.css.push(`<link rel=\"stylesheet\" type=\"text/css\" href=\"${devHost}/main.css\" />`);\\n    } else {\\n        //生产环境 从 asset-manifest.json 读取资源\\n        const map = require(\\'@dist/server/asset-manifest.json\\');\\n        jsFiles.forEach(item => {\\n            if(map[item])\\n                assets.js.push(`<script type=\"text/javascript\"  src=\"${map[item]}\"><\\/script>`)\\n        });\\n        cssFiles.forEach(item => {\\n            if(map[item])\\n                assets.css.push(`<link rel=\"stylesheet\" type=\"text/css\" href=\"${map[item]}\" />`)\\n        });\\n    }\\n\\n    return assets;\\n}\\n\\n')])])]),n(\"h3\",{attrs:{id:\"ssr-中间件-react-ssr-js-调整\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ssr-中间件-react-ssr-js-调整\"}},[s._v(\"#\")]),s._v(\" ssr 中间件 \"),n(\"code\",[s._v(\"react-ssr.js\")]),s._v(\" 调整\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('//导入资源处理库\\nconst getAssets = require(\\'../common/assets\\');\\n\\n//得到静态资源\\nconst assetsMap = getAssets();\\n\\n//绑定资源\\n\\n//...\\n    ctx.body=`<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <title>${tdk.title}</title>\\n    <meta name=\"keywords\" content=\"${tdk.keywords}\" />\\n    <meta name=\"description\" content=\"${tdk.description}\" />\\n     ${assetsMap.css.join(\\'\\')} //输出 css 资源\\n</head>\\n<body>\\n    <div id=\"root\">\\n       ${html}\\n    </div>\\n    <textarea id=\"ssrTextInitData\" style=\"display:none;\">\\n    ${JSON.stringify(fetchResult)}\\n    </textarea>\\n</body>\\n</html>\\n</body>\\n ${assetsMap.js.join(\\'\\')}  //输出 js 资源\\n`;\\n\\n//...\\n\\n')])])]),n(\"h2\",{attrs:{id:\"服务端生产环境构建命令\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务端生产环境构建命令\"}},[s._v(\"#\")]),s._v(\" 服务端生产环境构建命令\")]),s._v(\" \"),n(\"p\",[s._v(\"配置 \"),n(\"code\",[s._v(\"npm scripts\")]),s._v(\" 命令,同时设置环境变量为\"),n(\"code\",[s._v(\"NODE_ENV=production\")]),s._v(\"，必须要有此设置，否则会按照开发环境执行。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('\"server:build\": \"NODE_ENV=production webpack --config  ./webpack/webpack.server.config.js\"\\n\\n')])])]),n(\"h2\",{attrs:{id:\"生产环境服务启动\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生产环境服务启动\"}},[s._v(\"#\")]),s._v(\" 生产环境服务启动\")]),s._v(\" \"),n(\"p\",[s._v(\"方便本地查看和调试\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"npm run prod:start\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(' \"prod:start\": \"node ./dist/server/app.js\"\\n\\n')])])]),n(\"h1\",{attrs:{id:\"开发环境调整\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开发环境调整\"}},[s._v(\"#\")]),s._v(\" 开发环境调整\")]),s._v(\" \"),n(\"p\",[s._v(\"因为最初在开发环境对\"),n(\"code\",[s._v(\"js\")]),s._v(\"资源打包没有分包，所以这里要和生产环境统一。\")]),s._v(\" \"),n(\"p\",[s._v(\"这里为了方便演示，生产环境和开发环境采用的两个独立的配置文件，其实可以将相同的配置提取出来，然后使用\"),n(\"code\",[s._v(\"webpack-merge\")]),s._v(\"进行合并。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// ./webpack/src/webpack-dev.config.js\\n\\n//...\\n    optimization: {\\n        splitChunks: {\\n            cacheGroups: {\\n                libs: { // 抽离第三方库\\n                    test: /node_modules/, // 指定是node_modules下的第三方包\\n                    chunks: 'initial',\\n                    name: 'libs'// 打包后的文件名，任意命名    \\n                }\\n            }\\n        }\\n    }\\n//...\\n\\n\")])])]),n(\"h1\",{attrs:{id:\"最终的构建命令\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最终的构建命令\"}},[s._v(\"#\")]),s._v(\" 最终的构建命令\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"npm run build\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(' \"scripts\": {\\n    \"build\": \"NODE_ENV=production npm run client:build && npm run server:build\",\\n    \"client:build\": \"NODE_ENV=production webpack --config  ./webpack/webpack.prod.config.js\",\\n    \"server:build\": \"NODE_ENV=production webpack --config  ./webpack/webpack.server.config.js\",\\n    \"prod:start\": \"node ./dist/server/app.js\"\\n  },\\n\\n')])])]),n(\"p\",[s._v(\"到此全部配置完成，具体运行效果看下图\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/1/3/16f6b27d22cb2cb5?w=765&h=561&f=png&s=152658\",alt:\"\"}})]),s._v(\" \"),n(\"h1\",{attrs:{id:\"项目部署\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#项目部署\"}},[s._v(\"#\")]),s._v(\" 项目部署\")]),s._v(\" \"),n(\"p\",[s._v(\"通常一个项目线上运行都会使用\"),n(\"code\",[s._v(\"nginx\")]),s._v(\"做反向代理，请求都会发到\"),n(\"code\",[s._v(\"nginx\")]),s._v(\"服务，然后再转发到我们的\"),n(\"code\",[s._v(\"node\")]),s._v(\"服务，而\"),n(\"code\",[s._v(\"node\")]),s._v(\"服务的进程守护一般都会用\"),n(\"code\",[s._v(\"pm2\")]),s._v(\"来做。\")]),s._v(\" \"),n(\"p\",[s._v(\"下面代码便是我们使用\"),n(\"code\",[s._v(\"pm2\")]),s._v(\"来启动服务\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('PORT=9001 pm2 start ./dist/server/app.js -n xxx.com -o \"/data1/logs/xxx.com.-out.log\" -e \"/data1/logs/xxx.com-err.log\" --watch\\n\\n')])])]),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//参数说明 \\nPORT=9001 //指定服务启动的端口\\npm2 start ./dist/server/app.js //服务入口文件\\n-n xxx.com //设置服务名称\\n-o xx //设置日志文件\\n-e xx //设置错误日志文件\\n--watch //开启监听，文件改动会自动重启\\n\\n\")])])]),n(\"h1\",{attrs:{id:\"小结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[s._v(\"#\")]),s._v(\" 小结\")]),s._v(\" \"),n(\"p\",[s._v(\"本节我们完成了生产环境的搭建和配置，我们的“毛坯房”建成了， 完成了一个重大的里程碑。\")]),s._v(\" \"),n(\"p\",[s._v(\"客户端配置就像是我们开发单页时的配置一样， 差别主要在于如何处理服务端代码构建，以及静态资源的规划。\")]),s._v(\" \"),n(\"p\",[s._v(\"后面我们就需要对我们的“房子”进行装修了，也就是优化，有哪些需要优化地方呢？咱们后面接着聊。\")]),s._v(\" \"),n(\"p\",[s._v(\"本节代码地址\")]),s._v(\" \"),n(\"p\",[n(\"a\",{attrs:{href:\"https://github.com/Bigerfe/koa-react-ssr/tree/better/packages/my-react-ssr-prod\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://github.com/Bigerfe/koa-react-ssr/tree/better/packages/my-react-ssr-prod\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"p\",[s._v(\"感谢你的阅读。\")]),s._v(\" \"),n(\"p\",[s._v(\"如果有问题欢迎留言，也欢迎在留言区留下你的想法和思考。\")])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[452],{804:function(e,t,n){\"use strict\";n.r(t);var a=n(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"实战篇-4-天气页面数据获取和交互实现\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实战篇-4-天气页面数据获取和交互实现\"}},[e._v(\"#\")]),e._v(\" 实战篇 4：天气页面数据获取和交互实现\")]),e._v(\" \"),n(\"p\",[e._v(\"天气预报页面主要有两个重要的流程：获取地理位置和获取天气数据。本节重点介绍这两部分的代码实现。\")]),e._v(\" \"),n(\"h2\",{attrs:{id:\"定位和逆地址查询\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定位和逆地址查询\"}},[e._v(\"#\")]),e._v(\" 定位和逆地址查询\")]),e._v(\" \"),n(\"p\",[e._v(\"获取地理位置功能可以拆成两个步骤：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"使用微信 \"),n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 方法获取用户当前位置的经纬度\")]),e._v(\" \"),n(\"li\",[e._v(\"使用拿到的经纬度请求腾讯地图的逆地址解析接口，获取省市县和详细地址\")])]),e._v(\" \"),n(\"p\",[e._v(\"下面来逐一介绍。\")]),e._v(\" \"),n(\"h3\",{attrs:{id:\"获取用户当前位置经纬度\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获取用户当前位置经纬度\"}},[e._v(\"#\")]),e._v(\" 获取用户当前位置经纬度\")]),e._v(\" \"),n(\"p\",[e._v(\"小程序可以使用 \"),n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 方法获取用户的当前位置经纬度。\"),n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 默认获取的是 \"),n(\"code\",[e._v(\"wgs84\")]),e._v(\" 坐标系，即 GPS 的坐标系，而国内地图（除百度地图外）一般用的都是 \"),n(\"code\",[e._v(\"GCJ02\")]),e._v(\"（国测局坐标，又称为“火星坐标系”）的坐标系，所以需要传入 \"),n(\"code\",[e._v(\"type\")]),e._v(\" 来指定坐标系统。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"wx.getLocation({\\n  type: 'gcj02',\\n  success: this.updateLocation,\\n  fail: (e) => {\\n    // console.log(e)\\n    this.openLocation()\\n  }\\n})\\n\\n\")])])]),n(\"blockquote\",[n(\"p\",[n(\"strong\",[e._v(\"Tips：\")]),e._v(\" 出于国家安全考虑，国内使用的坐标系都是经过国测局统一加密偏移后的坐标，所以我们拿到的坐标并不是真正的坐标，国测局统一加密后的坐标系就是 GCJ02。国测局规定：国内地图产品需要用 GCJ02 的坐标系，或者在 GCJ02 基础上再次加密的坐标系，百度自有的 BD09 坐标系就是在 GCJ02 基础上再次加密的坐标系。\")]),e._v(\" \"),n(\"p\",[e._v(\"GPS 定位拿到的是 WGS84 坐标系，直接在国内地图上使用或者调用国内地图的位置 API 服务都会计算有偏移。因为我们实战中用的逆地址解码服务是腾讯地图服务，腾讯地图的坐标系是 GCJ02，所以 \"),n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 的参数 \"),n(\"code\",[e._v(\"type\")]),e._v(\" 应该是 \"),n(\"code\",[e._v(\"gcj02\")]),e._v(\"，而不是默认的 \"),n(\"code\",[e._v(\"wgs84\")]),e._v(\"。如果调用 \"),n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 不传入 \"),n(\"code\",[e._v(\"type\")]),e._v(\" 则获取的 \"),n(\"code\",[e._v(\"wgs84\")]),e._v(\" 坐标会有偏移。同理，使用 \"),n(\"code\",[e._v(\"wx.openLocation\")]),e._v(\" 也要注意坐标系问题。\")])]),e._v(\" \"),n(\"h3\",{attrs:{id:\"根据经纬度获取当前地址\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#根据经纬度获取当前地址\"}},[e._v(\"#\")]),e._v(\" 根据经纬度获取当前地址\")]),e._v(\" \"),n(\"p\",[n(\"code\",[e._v(\"wx.getLocation\")]),e._v(\" 方法返回有当前用户的经纬度，具体返回的数据有：\")]),e._v(\" \"),n(\"p\",[e._v(\"参数\")]),e._v(\" \"),n(\"p\",[e._v(\"说明\")]),e._v(\" \"),n(\"p\",[e._v(\"latitude\")]),e._v(\" \"),n(\"p\",[e._v(\"纬度，浮点数，范围为 -90~90，负数表示南纬\")]),e._v(\" \"),n(\"p\",[e._v(\"longitude\")]),e._v(\" \"),n(\"p\",[e._v(\"经度，浮点数，范围为 -180~180，负数表示西经\")]),e._v(\" \"),n(\"p\",[e._v(\"speed\")]),e._v(\" \"),n(\"p\",[e._v(\"速度，浮点数，单位 m/s\")]),e._v(\" \"),n(\"p\",[e._v(\"accuracy\")]),e._v(\" \"),n(\"p\",[e._v(\"位置的精确度\")]),e._v(\" \"),n(\"p\",[e._v(\"altitude\")]),e._v(\" \"),n(\"p\",[e._v(\"高度，单位 m\")]),e._v(\" \"),n(\"p\",[e._v(\"verticalAccuracy\")]),e._v(\" \"),n(\"p\",[e._v(\"垂直精度，单位 m（Android 无法获取，返回 0）\")]),e._v(\" \"),n(\"p\",[e._v(\"horizontalAccuracy\")]),e._v(\" \"),n(\"p\",[e._v(\"水平精度，单位 m\")]),e._v(\" \"),n(\"p\",[e._v(\"经纬度信息要转化成具体的地理位置，需要使用地图的逆地址查询接口，笔者在这里使用了\"),n(\"a\",{attrs:{href:\"https://lbs.qq.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"腾讯地图的 API\"),n(\"OutboundLink\")],1),e._v(\"。\")]),e._v(\" \"),n(\"p\",[e._v(\"首先在腾讯地图开放平台注册账号，注册后登录，在「我的控制台 -> 密钥(key)管理」中可以添加密钥。密钥是我们使用 API 必须传递的一个参数，每个不同的应用对应不同的密钥。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531467d1217a52?w=1228&h=389&f=png&s=63687\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"在小程序内，腾讯地图 API 的调用方式主要有两种：\")]),e._v(\" \"),n(\"ul\",[n(\"li\",[e._v(\"通过腾讯地图提供的小程序 SDK\")]),e._v(\" \"),n(\"li\",[e._v(\"WebService API 方式，即直接调用 API 的接口\")])]),e._v(\" \"),n(\"p\",[e._v(\"这里笔者选择了 WebService API，原因如下：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"小程序 SDK 和 WebService API 都很方便，不需要加密数据，密钥都是对外暴露的\")]),e._v(\" \"),n(\"li\",[e._v(\"WebService API 使用微信 \"),n(\"code\",[e._v(\"wx.request\")]),e._v(\" 方法可以直接发送请求，对代码无侵入性\")]),e._v(\" \"),n(\"li\",[e._v(\"小程序 SDK 本质上还是用 \"),n(\"code\",[e._v(\"wx.request\")]),e._v(\" 封装的 WebService API\")])]),e._v(\" \"),n(\"p\",[e._v(\"根据\"),n(\"a\",{attrs:{href:\"https://lbs.qq.com/webservice_v1/guide-gcoder.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"逆地址查询接口的文档\"),n(\"OutboundLink\")],1),e._v(\"，只需要传入密钥和 \"),n(\"code\",[e._v(\"location\")]),e._v(\" （经纬度组合）信息即可：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// lib/api.js\\nconst QQ_MAP_KEY = 'ZVXBZ-xxxxxx-xxxxx-xxxxxK-LQFU6'\\n/**\\n *  逆地址查询\\n * @param {*} lat\\n * @param {*} lon\\n */\\nexport const geocoder = (lat, lon, success = () => {}, fail = () => {}) => {\\n  return wx.request({\\n    url: 'https://apis.map.qq.com/ws/geocoder/v1/',\\n    data: {\\n      location: `${lat},${lon}`,\\n      key: QQ_MAP_KEY,\\n      get_poi: 0\\n    },\\n    success,\\n    fail\\n  })\\n}\\n\\n\")])])]),n(\"h3\",{attrs:{id:\"完整获取地址的流程\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#完整获取地址的流程\"}},[e._v(\"#\")]),e._v(\" 完整获取地址的流程\")]),e._v(\" \"),n(\"p\",[e._v(\"完成了上面的获取经纬度和逆地址查询，就可以在 \"),n(\"code\",[e._v(\"index.js\")]),e._v(\" 中进行整个地址获取的流程了，代码从 \"),n(\"code\",[e._v(\"onLoad\")]),e._v(\" 调用 \"),n(\"code\",[e._v(\"this.getLocation\")]),e._v(\" 开始，全部代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// weather/index.js\\nonLoad(){\\n  this.getLocation()\\n},\\n// 处理逆地址\\ngetAddress(lat, lon, name) {\\n  wx.showLoading({\\n    title: '定位中',\\n    mask: true\\n  })\\n  let fail = (e) => {\\n    // console.log(e)\\n    this.setData({\\n      address: name || '北京市海淀区西二旗北路'\\n    })\\n    wx.hideLoading()\\n\\n    this.getWeatherData()\\n  }\\n  geocoder(\\n    lat,\\n    lon,\\n    (res) => {\\n      wx.hideLoading()\\n      let result = (res.data || {}).result\\n      // console.log(1, res, result)\\n\\n      if (res.statusCode === 200 && result && result.address) {\\n        let {address, formatted_addresses, address_component} = result\\n        if (formatted_addresses && (formatted_addresses.recommend || formatted_addresses.rough)) {\\n          address = formatted_addresses.recommend || formatted_addresses.rough\\n        }\\n        let {province, city, district: county} = address_component\\n        this.setData({\\n          province,\\n          county,\\n          city,\\n          address: name || address\\n        })\\n        this.getWeatherData()\\n      } else {\\n        //失败\\n        fail()\\n      }\\n    },\\n    fail\\n  )\\n},\\n// 更新 data 数据，调用 getAddress\\nupdateLocation(res) {\\n  let {latitude: lat, longitude: lon, name} = res\\n  let data = {\\n    lat,\\n    lon\\n  }\\n  if (name) {\\n    data.address = name\\n  }\\n  this.setData(data)\\n  this.getAddress(lat, lon, name)\\n},\\ngetLocation() {\\n  // 获取经纬度\\n  wx.getLocation({\\n    type: 'gcj02',\\n    success: this.updateLocation,\\n    fail: (e) => {\\n      // console.log(e)\\n      this.openLocation()\\n    }\\n  })\\n},\\n// 检测到失败，则提示用户打开位置权限\\nopenLocation() {\\n  wx.showToast({\\n    title: '检测到您未授权使用位置权限，请先开启哦',\\n    icon: 'none',\\n    duration: 3000\\n  })\\n},\\n\\n\")])])]),n(\"h3\",{attrs:{id:\"点击地址栏事件处理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#点击地址栏事件处理\"}},[e._v(\"#\")]),e._v(\" 点击地址栏事件处理\")]),e._v(\" \"),n(\"p\",[e._v(\"在天气预报的顶部地址栏部分绑定了 tap 事件，点击地址栏则会打开地图让用户重新选择位置，这可以通过小程序提供的 \"),n(\"code\",[e._v(\"wx.chooseLocation\")]),e._v(\" 方法来实现。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531464c98c99c8?w=564&h=582&f=png&s=311084\",alt:\"\"}})]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('<view class=\"location\" bindtap=\"chooseLocation\">\\n  <icon type=\"dingwei\" />\\n  <text>{{ address }}</text>\\n</view>\\n\\n')])])]),n(\"p\",[e._v(\"事件 \"),n(\"code\",[e._v(\"chooseLocation\")]),e._v(\" 的代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"chooseLocation() {\\n  wx.chooseLocation({\\n    success: (res) => {\\n      let {latitude, longitude} = res\\n      let {lat, lon} = this.data\\n      if (latitude == lat && lon == longitude) {\\n        this.getWeatherData()\\n      } else {\\n        this.updateLocation(res)\\n      }\\n    }\\n  })\\n}\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"和风天气数据获取\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#和风天气数据获取\"}},[e._v(\"#\")]),e._v(\" 和风天气数据获取\")]),e._v(\" \"),n(\"p\",[e._v(\"和风天气接口是提供三种调用方式的，不过对于 Web 端产品来说，只有普通 KEY 请求和签名请求两种方式，具体可以查看\"),n(\"a\",{attrs:{href:\"https://www.heweather.com/documents/api/s6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"天气 API 接口说明\"),n(\"OutboundLink\")],1),e._v(\"。\")]),e._v(\" \"),n(\"p\",[e._v(\"基于以下两点考虑，本小册中的天气服务采用了签名的认证方式：\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"为了提高安全性\")]),e._v(\" \"),n(\"li\",[e._v(\"练习云函数的使用方法\")])]),e._v(\" \"),n(\"p\",[e._v(\"具体签名的算法可以参考\"),n(\"a\",{attrs:{href:\"https://www.heweather.com/documents/api/s6/sercet-authorization\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"加密签名认证\"),n(\"OutboundLink\")],1),e._v(\"，这个不是我们介绍的重点，笔者先把签名算法代码贴上：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"const crypto = require('crypto')\\nconst KEY = 'e8dd4902xxxxxxxxxxxxxxcb4df'\\nconst USER_ID = 'HE11212121212121299'\\nfunction generateSignature(params) {\\n  params.username = USER_ID\\n  let data =\\n    Object.keys(params)\\n      .filter((key) => {\\n        return params[key] !== '' && key !== 'sign' && key !== 'key'\\n      })\\n      .sort()\\n      .map((key) => {\\n        return `${key}=${params[key]}`\\n      })\\n      .join('&') + KEY\\n  return crypto.createHash('md5').update(data).digest('base64')\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"有了认证的算法，就可以在云函数中发送数据请求。以获取\"),n(\"a\",{attrs:{href:\"https://www.heweather.com/documents/api/s6/weather\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"天气集合接口\"),n(\"OutboundLink\")],1),e._v(\"为例，介绍下云函数的使用方法，获取空气质量相对简单且类似，具体代码中有详细注释：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// server/cloud-functions/he-weather\\n// 请求的地址\\nconst API_URL = 'https://free-api.heweather.com/s6/weather'\\n// request 模块\\nconst request = require('request')\\n\\n// 引入云函数功能工具方法，跟空气质量公用\\n// gulp prod 打包的时候将公共 utils 库嵌入式引入\\n/*<jdists import=\\\"../../inline/utils.js\\\" />*/\\n\\n// 普通 mock server 的代码直接将 utils 库当模块引入\\n/*<remove>*/\\nconst $ = require('../../inline/utils')\\n/*</remove>*/\\n\\n// 按照云函数的规定，必须导出 main 函数\\nexports.main = async (event) => {\\n  const {lat,lon} = event\\n  let location = `${lat},${lon}`\\n  let params = {\\n    location,\\n    t: Math.floor(Date.now() / 1e3),\\n    unit: 'm'\\n  }\\n  // 生成签名\\n  params.sign = $.generateSignature(params)\\n  let query = []\\n  for (let i in params) {\\n    query.push(`${i}=${encodeURIComponent(params[i])}`)\\n  }\\n  let url = API_URL + '?' + query.join('&')\\n  // 将 request.get 方法改造成 promise 方式\\n  return new Promise((resolve, reject) => {\\n    request.get(url, (error, response, body) => {\\n      if (error || response.statusCode !== 200) {\\n        reject(error)\\n      } else {\\n        try {\\n          // 统一处理接口返回的数据\\n          let rs = $.handlerData(JSON.parse(body))\\n          resolve(rs)\\n        } catch (e) {\\n          reject(e)\\n        }\\n      }\\n    })\\n  })\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"完成获取天气集合数据，天气预报页面还用到了空气质量相关的接口，这个免费接口使用的参数不是经纬度而是城市名称，具体获取数据的代码跟天气数据接口类似，这里直接贴出代码：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// server/cloud-functions/he-air\\n// const path = require('path')\\nconst API_URL = 'https://free-api.heweather.com/s6/air/now'\\nconst request = require('request')\\n/*<jdists import=\\\"../../inline/utils.js\\\" />*/\\n\\n/*<remove>*/\\nconst $ = require('../../inline/utils')\\n/*</remove>*/\\n\\nexports.main = async (event) => {\\n  let location = event.city\\n  let params = {\\n    location,\\n    t: Math.floor(Date.now() / 1e3),\\n    unit: 'm'\\n  }\\n  // 生成签名\\n  params.sign = $.generateSignature(params)\\n  let query = []\\n  for (let i in params) {\\n    query.push(`${i}=${encodeURIComponent(params[i])}`)\\n  }\\n  let url = API_URL + '?' + query.join('&')\\n  // console.log(url)\\n  return new Promise((resolve, reject) => {\\n    // console.log(url)\\n    request.get(url, (error, response, body) => {\\n      if (error || response.statusCode !== 200) {\\n        reject(error)\\n      } else {\\n        try {\\n          let data = JSON.parse(body)\\n          // console.log(data)\\n          if (data && data.HeWeather6 && data.HeWeather6[0].air_now_city) {\\n            let {aqi, qlty} = data.HeWeather6[0].air_now_city\\n            resolve({\\n              status: 0,\\n              aqi,\\n              color: $.airBackgroundColor(aqi),\\n              name: qlty\\n            })\\n          } else {\\n            resolve({\\n              status: 500\\n            })\\n          }\\n          // resolve(rs)\\n        } catch (e) {\\n          reject(e)\\n        }\\n      }\\n    })\\n  })\\n}\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"天气预报页面流程图\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#天气预报页面流程图\"}},[e._v(\"#\")]),e._v(\" 天气预报页面流程图\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/26/165761b0072f320f?w=1024&h=768&f=jpeg&s=232588\",alt:\"\"}})]),e._v(\" \"),n(\"h2\",{attrs:{id:\"下拉刷新\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下拉刷新\"}},[e._v(\"#\")]),e._v(\" 下拉刷新\")]),e._v(\" \"),n(\"p\",[e._v(\"天气预报页面是支持下拉刷新的，在页面配置中 \"),n(\"code\",[e._v(\"index.json\")]),e._v(\" 已经将 \"),n(\"code\",[e._v(\"enablePullDownRefresh\")]),e._v(\" 设置为 \"),n(\"code\",[e._v(\"true\")]),e._v(\"，我们还需要在 \"),n(\"code\",[e._v(\"index.js\")]),e._v(\" 中增加下拉事件监听，监听下拉刷新操作，然后重新获取定位和天气数据，最后更新页面：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// weather/index.js\\nonPullDownRefresh() {\\n  this.getWeatherData(() => {\\n    wx.stopPullDownRefresh()\\n  })\\n}\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"配置分享文案\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置分享文案\"}},[e._v(\"#\")]),e._v(\" 配置分享文案\")]),e._v(\" \"),n(\"p\",[e._v(\"为了提升我们小程序的分享体验，笔者设计了分享文案，通过监听 \"),n(\"code\",[e._v(\"onShareAppMessage\")]),e._v(\" 事件，用户分享小程序的时候增加当前定位和天气相关的文案，\"),n(\"code\",[e._v(\"onShareAppMessage\")]),e._v(\" 只需要返回一个分享文案和路径的对象即可：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// weather/index.js\\nonShareAppMessage() {\\n  // 如果获取数据失败，则没有位置和天气信息，那么需要个默认文案\\n  if (!isUpdate) {\\n    return {\\n      title: '我发现一个好玩的天气小程序，分享给你看看！',\\n      path: '/pages/weather/index'\\n    }\\n  } else {\\n    // 如果有天气信息，那么需要给 path 加上天气信息\\n    const {lat, lon, address, province, city, county} = this.data\\n    let url = `/pages/weather/index?lat=${lat}&lon=${lon}&address=${address}&province=${province}&city=${city}&county=${county}`\\n\\n    return {\\n      title: `「${address}」现在天气情况，快打开看看吧！`,\\n      path: url\\n    }\\n  }\\n},\\n\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/1653145b62466222?w=418&h=507&f=jpeg&s=44324\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"最终的效果如上图所示，分享出去的小程序链接是带着当前天气的数据的，但是这时候如果有人打开了链接，那么还是根据自己的定位信息查看天气，不能看到分享人的位置和天气信息，所以还需要在 \"),n(\"code\",[e._v(\"onLoad\")]),e._v(\" 中，获取页面的 URL 参数，然后使用分享的地理位置直接获取天气数据，对应的代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// weather/index.js\\nonLoad() {\\n  // ......\\n  const pages = getCurrentPages() //获取加载的页面\\n  const currentPage = pages[pages.length - 1] //获取当前页面的对象\\n  const query = currentPage.options\\n  // 如果有地址，经纬度信息\\n  if (query && query.address && query.lat && query.lon) {\\n    let {province, city, county, address, lat, lon} = query\\n    // 取出这些数据，设置页面data\\n    // 利用setData的callback，保证数据设置完成后，获取天气信息\\n    this.setData(\\n      {\\n        city,\\n        province,\\n        county,\\n        address,\\n        lat,\\n        lon\\n      },\\n      () => {\\n        this.getWeatherData()\\n      }\\n    )\\n  } else {\\n    // 否则，正常逻辑：先获取地址，再获取天气数据\\n    this.getLocation()\\n  }\\n},\\n\\n\")])])]),n(\"blockquote\",[n(\"p\",[n(\"strong\",[e._v(\"Tips：\")]),e._v(\" 在获取分享的 URL 数据之后通过 \"),n(\"code\",[e._v(\"setData\")]),e._v(\" 设置地理位置信息，不应该直接在 \"),n(\"code\",[e._v(\"setData\")]),e._v(\" 之后获取天气信息，而应该在 \"),n(\"code\",[e._v(\"setData\")]),e._v(\" 的回调函数中调用 \"),n(\"code\",[e._v(\"getWeatherData\")]),e._v(\" 获取天气数据，这是因为 \"),n(\"code\",[e._v(\"setData\")]),e._v(\" 是异步的，可以参考\"),n(\"a\",{attrs:{href:\"https://juejin.im/book/5b70f101e51d456669381803/section/5b70f3456fb9a00986735fa3\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"基础篇 3：小程序架构及其实现机制\"),n(\"OutboundLink\")],1),e._v(\"的相关介绍。\")])]),e._v(\" \"),n(\"h2\",{attrs:{id:\"使用-chart-js-绘制图表\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用-chart-js-绘制图表\"}},[e._v(\"#\")]),e._v(\" 使用 Chart.js 绘制图表\")]),e._v(\" \"),n(\"p\",[e._v(\"笔者在七天天气模块使用了 Chart.js 来绘制一个温度走势图。Chart.js 是个 Canvas 版本的图表库，有人将其改造成了\"),n(\"a\",{attrs:{href:\"https://github.com/xiabingwu/chartjs-wechat-mini-app/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"小程序版本\"),n(\"OutboundLink\")],1),e._v(\"。由于本实战中的温度走势图相对比较简单，所以 Chart.js 可以胜任需求，先看下效果图。\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/13/16531458e395024e?w=369&h=120&f=jpeg&s=13050\",alt:\"\"}})]),e._v(\" \"),n(\"p\",[e._v(\"首先在 \"),n(\"code\",[e._v('<view class=\"week\"/>')]),e._v(\" 最后增加走势图图表的 \"),n(\"code\",[e._v(\"canvas\")]),e._v(\" 组件：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('<view class=\"week\">\\n  <view class=\"week-weather\">\\n    ....\\n  </view>\\n  <view class=\"week-chart\">\\n    <canvas canvas-id=\"chart\" id=\"chart\"></canvas>\\n  </view>\\n</view>\\n\\n')])])]),n(\"p\",[e._v(\"通过绝对定位的方式，将 \"),n(\"code\",[e._v(\"week-chart\")]),e._v(\" 放置在对应的位置，并且设置 \"),n(\"code\",[e._v(\"canvas\")]),e._v(\" 的宽度和高度：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\".week-chart {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  height: 272rpx;\\n  top: 262rpx;\\n}\\n.week-chart canvas {\\n  width: 750rpx;\\n  height: 272rpx;\\n}\\n\\n\")])])]),n(\"p\",[e._v(\"绘制走势图使用 Chart.js 是使用了折线图（line）方式，而温度数值的标注，是给 \"),n(\"code\",[e._v(\"Chart\")]),e._v(\" 注册了个 \"),n(\"code\",[e._v(\"afterDatasetsDraw\")]),e._v(\" 钩子（hook）内，将数据遍历一遍之后，直接绘制将温度写上，具体代码如下：\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// weather/index.js\\nimport {fixChart, getChartConfig, drawEffect} from '../../lib/utils'\\nimport Chart from '../../lib/chartjs/chart'\\n// Page 中定义的 drawChart 函数\\ndrawChart() {\\n  const {width, scale, weeklyData} = this.data\\n  let height = CHART_CANVAS_HEIGHT * scale\\n  let ctx = wx.createCanvasContext('chart')\\n  fixChart(ctx, width, height)\\n\\n  // 添加温度\\n  Chart.pluginService.register({\\n    afterDatasetsDraw(e, t) {\\n      ctx.setTextAlign('center')\\n      ctx.setTextBaseline('middle')\\n      ctx.setFontSize(16)\\n\\n      e.data.datasets.forEach((t, a) => {\\n        let r = e.getDatasetMeta(a)\\n        r.hidden ||\\n          r.data.forEach((e, r) => {\\n            // 昨天的数据发灰\\n            ctx.setFillStyle(r === 0 ? '#e0e0e0' : '#ffffff')\\n            // 增加温度符号\\n            let i = t.data[r].toString() + '\\\\xb0'\\n            let o = e.tooltipPosition()\\n            // 计算文字位置\\n            0 == a ? ctx.fillText(i, o.x + 2, o.y - 8 - 10) : 1 == a && ctx.fillText(i, o.x + 2, o.y + 8 + 10)\\n          })\\n      })\\n    }\\n  })\\n\\n  return new Chart(ctx, getChartConfig(weeklyData))\\n}\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"小结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),n(\"p\",[e._v(\"本节介绍了天气页面数据获取和交互的实现，重点讲解了地理位置获取和天气数据获取，地理位置使用 \"),n(\"code\",[e._v(\"wx.request\")]),e._v(\" 请求腾讯地图 API，天气数据则使用云函数来获取数据。小节的最后介绍了下拉刷新和配置分享文案的实现。\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{501:function(a,t,e){\"use strict\";e.r(t);var r=e(42),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"支付\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#支付\"}},[a._v(\"#\")]),a._v(\" 支付\")]),a._v(\" \"),e(\"p\",[a._v(\"对于大多数网站或者 APP 都是有着支付功能的。这一节我们将在项目中集成支付宝支付，为什么会选择支付宝呢。支付宝有一个沙箱环境，可以让我们不需要拥有真实的商家账号就可以进行支付的开发测试。本篇将带大家学习一下怎么集成支付宝并支付。\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac606fea6636?w=1159&h=900&f=png&s=160180\",alt:\"\"}})]),a._v(\" \"),e(\"h2\",{attrs:{id:\"沙箱环境\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#沙箱环境\"}},[a._v(\"#\")]),a._v(\" 沙箱环境\")]),a._v(\" \"),e(\"p\",[a._v(\"首先访问 \"),e(\"a\",{attrs:{href:\"https://auth.alipay.com/login/ant_sso_index.htm?goto=https%3A%2F%2Fopenhome.alipay.com%2Fplatform%2FappDaily.htm%3Ftab%3Dinfo\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"蚂蚁金服\"),e(\"OutboundLink\")],1),a._v(\" ，然后用你的支付宝账号登录之后会看到如下界面：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac6542f0d080?w=1247&h=372&f=png&s=36467\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"点击 \"),e(\"code\",[a._v(\"设置应用公钥\")])]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac6a2fc259a2?w=1440&h=628&f=png&s=426619\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"点击 \"),e(\"code\",[a._v(\"查看秘钥\")]),a._v(\" 生成方法\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac6dc24d78df?w=1440&h=703&f=png&s=395430\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"点击查看密钥生成方法之后会跳转到一篇文档，里面可以下载 RSA2 密钥生成工具，请根据自己的系统下载对应的版本并打开：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac71d92ce23e?w=1239&h=945&f=png&s=64736\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"如上图，\"),e(\"code\",[a._v(\"密钥格式\")]),a._v(\" 选择 \"),e(\"code\",[a._v(\"PKCS1\")]),a._v(\"，\"),e(\"code\",[a._v(\"密钥长度\")]),a._v(\" 选择 \"),e(\"code\",[a._v(\"RSA2\")]),a._v(\"，然后点击 \"),e(\"code\",[a._v(\"生成密钥\")]),a._v(\" 按钮。生成完毕之后点击 \"),e(\"code\",[a._v(\"开发助手\")]),a._v(\" 右侧的 \"),e(\"code\",[a._v(\"复制公钥\")]),a._v(\" 按钮，将其内容粘贴到刚刚网页上的框中点击保存。\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac754341a149?w=1284&h=716&f=png&s=80854\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"将支付宝公钥复制下来。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"安装插件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装插件\"}},[a._v(\"#\")]),a._v(\" 安装插件\")]),a._v(\" \"),e(\"p\",[a._v(\"蚂蚁金服开放平台 SDK \"),e(\"a\",{attrs:{href:\"https://www.yuque.com/chenqiu/alipay-node-sdk/guide\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"使用文档\"),e(\"OutboundLink\")],1),a._v(\"，建议大家必须要看一下。它会将必要的参数与加密信息处理好，我们只需要传入业务参数就可以了。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"$ npm install alipay-sdk --save\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"配置参数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置参数\"}},[a._v(\"#\")]),a._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/config\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"配置参数\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"p\",[a._v(\"在这里我们需要用到支付宝开放平台开发助手生成的支付宝 \"),e(\"code\",[a._v(\"应用私钥\")]),a._v(\" 和 \"),e(\"code\",[a._v(\"支付宝公钥\")]),a._v(\"， 是支付宝公钥，大家不要弄混了哈。这两段配置实在是太长了，把它直接放到我们的配置文件中肯定是不合适的，我们新建一个 \"),e(\"code\",[a._v(\"keys\")]),a._v(\" 目录，并创建两个文件。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"└── config\\n    └── keys // 密钥存放文件夹\\n        ├── alipay_public_key.pem // 支付宝公钥\\n        └── app_priv_key.pem   // 应用私钥\\n\\n\")])])]),e(\"p\",[a._v(\"接下来我们来使用这两个文件：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"config.alipay = {\\n    appId: 'xxxxxx',   // 支付宝分配给开发者的应用ID\\n    privateKey: read('./keys/app_priv_key.pem'),\\n    alipayPublicKey : read('./keys/alipay_public_key.pem'),\\n    gateway: 'https://openapi.alipaydev.com/gateway.do',  // 环境\\n    return_url: 'http://127.0.0.1:7001/alipay/alipayReturn', // 一般是指客户端的一个页面\\n    notify_url: 'http://requestbin.net/r/13ip1wr1',  // 回调地址\\n  };\\n\\n\")])])]),e(\"p\",[e(\"code\",[a._v(\"read\")]),a._v(\" 是一个读取文件的方法。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"const read = (filename: string) => {\\n  return fs.readFileSync(path.resolve(__dirname, filename), 'ascii');\\n};\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"编写逻辑\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写逻辑\"}},[a._v(\"#\")]),a._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/service/Alipay.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"编写逻辑\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"p\",[a._v(\"那么接下来就上一个完整的示例进行整体的演示，如何请求 \"),e(\"code\",[a._v(\"alipay.trade.page.pay\")]),a._v(\" (PC 端的支付接口)。\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"实例化操作\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实例化操作\"}},[a._v(\"#\")]),a._v(\" 实例化操作\")]),a._v(\" \"),e(\"p\",[a._v(\"我们先来创建一个用来支付的类，并在构造函数中进行初始化操作：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"import { Service, Context } from 'egg';\\nimport AlipaySdk from 'alipay-sdk';   // 引入 SDK\\n\\n/**\\n * Alipay Service\\n */\\nexport default class Alipays extends Service {\\n  private alipaySdk: any;\\n  constructor(ctx: Context) {\\n    super(ctx);\\n    // 获取配置参数\\n    const { appId, privateKey, alipayPublicKey, gateway } = ctx.app.config.alipay;\\n    // 实例化 AlipaySdk\\n    this.alipaySdk = new AlipaySdk({\\n      privateKey,\\n      alipayPublicKey,\\n      appId,\\n      gateway,\\n    });\\n  }\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"请求接口\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#请求接口\"}},[a._v(\"#\")]),a._v(\" 请求接口\")]),a._v(\" \"),e(\"p\",[a._v(\"因为这个接口属于页面类接口，页面类接口默认返回的数据为 html 代码片段。这类接口我们需要创建一个 FormData 去请求。而这个 SDK 提供了一个 \"),e(\"code\",[a._v(\"AlipayFormData\")]),a._v(\" 可以方便我们的创建：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"import AlipayFormData from 'alipay-sdk/lib/form';  // 引入AlipayFormData\\n...\\n\\npublic async doPay(data: IApipayData) {\\n   \\tconst { ctx, alipaySdk } = this;\\n    const { return_url, notify_url } = ctx.app.config.alipay;\\n\\n    const data1 = {\\n      product_code: 'FAST_INSTANT_TRADE_PAY', // 销售产品码 注：目前仅支持FAST_INSTANT_TRADE_PAY\\n      out_trade_no: new Date().valueOf(), // 商户订单号 实际情况中，订单号按照具体需求生成\\n    };\\n\\n    try {\\n      const formData = new AlipayFormData();\\n      formData.setMethod('get');     // 请求方式\\n      formData.addField('notify_url', notify_url);  // 支付完成后，支付宝主动向我们的服务器发送回调的地址\\n      formData.addField('return_url', return_url);  // 支付完成后，当前页面跳转的地址\\n      formData.addField('biz_content', { ...data, ...data1 });   // 请求参数的集合，最大长度不限，除公共参数外所有请求参数都必须放在这个参数中传递\\n      return await alipaySdk.exec('alipay.trade.page.pay', {}, {\\n        formData,\\n        validateSign: true,\\n      });\\n    } catch (error) {\\n      throw error;\\n    }\\n}\\n\\n\")])])]),e(\"p\",[a._v(\"请求成功后，会给我们一个用于跳转支付链接的 URL，前端拿到支付链接后去做跳转。在这里要特别注意，支付宝在用户付款完成后，会向我们的服务器发送一条 \"),e(\"strong\",[a._v(\"POST 方式\")]),a._v(\" 的异步回调。\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"支付回调\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#支付回调\"}},[a._v(\"#\")]),a._v(\" 支付回调\")]),a._v(\" \"),e(\"p\",[a._v(\"支付宝的支付回调分为 \"),e(\"strong\",[a._v(\"前端回调\")]),a._v(\" 和 \"),e(\"strong\",[a._v(\"服务器回调\")]),a._v(\"。\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[a._v(\"前端回调\")]),a._v(\" 是指当用户支付成功之后支付宝会让用户浏览器跳转回项目页面并带上支付成功的参数，也就是说前端回调依赖于用户浏览器，如果用户在跳转之前关闭浏览器，将无法收到前端回调。\")]),a._v(\" \"),e(\"li\",[e(\"strong\",[a._v(\"服务器回调\")]),a._v(\" 是指支付成功之后支付宝的服务器会用订单相关数据作为参数请求项目的接口，不依赖用户浏览器。\")])]),a._v(\" \"),e(\"p\",[a._v(\"因此我们判断支付是否成功要以服务器端回调为准。\")]),a._v(\" \"),e(\"p\",[a._v(\"由于这个异步通知是在支付完成之后，是支付宝以 POST 的方式请求我们的接口，这里我们要先定义一个\"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/router.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"路由\"),e(\"OutboundLink\")],1),a._v(\"：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"// 支付成功异步通知\\nrouter.post('/alipay/alipayNotify', controller.alipay.alipayNotify);\\n\\n\")])])]),e(\"p\",[a._v(\"接下来我们来编写控制器中的这个方法，由于我们的逻辑都是放到 \"),e(\"code\",[a._v(\"service\")]),a._v(\" 层去处理的，在这里我们就做了一个转发的操作：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"public async alipayNotify() {\\n    const { ctx } = this;\\n    const params = ctx.request.body;\\n    await ctx.service.alipay.alipayNotify(params);\\n}\\n\\n\")])])]),e(\"p\",[a._v(\"在通知里有一个 \"),e(\"code\",[a._v(\"trade_status\")]),a._v(\" 参数，如果等于 \"),e(\"code\",[a._v(\"TRADE_SUCCESS\")]),a._v(\" 就表示支付成功。然后你就可以继续进行你的后续操作，在这里我是使用了 redis 的消息队列，纯属是为了演示， lpush 命令将一个或多个值插入到列表头部。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"  public async alipayNotify(params: any) {\\n    const { ctx } = this;\\n\\n    if (params.trade_status === 'TRADE_SUCCESS') {\\n      // 后续操作\\n      await ctx.service.redis.lpush('payInfo', params);\\n    }\\n  }\\n\\n\")])])]),e(\"p\",[a._v(\"这个回调地址必须是外网可以访问到的，也就是说这一过程我们必须在线上开发。接下来我给大家介绍一个工具以便完成我们在本地开发接收异步回调。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"requestbin\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#requestbin\"}},[a._v(\"#\")]),a._v(\" RequestBin\")]),a._v(\" \"),e(\"p\",[a._v(\"是一个免费开源的网站，任何人都可以在上面申请一个专属的 URL（通常有效期 48 小时），对这个 URL 的任何类型的请求都会被记录下来，URL 的创建者可以看到请求的具体信息，包含请求时间、请求头、请求具体数据等。\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac7d7241ac45?w=1768&h=702&f=png&s=82605\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"系统就会给你分配一个 URL，把这个 URL 复制下来，放到我们之前放服务器端回调地址的参数上：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac81b8a38e34?w=1246&h=512&f=png&s=41270\",alt:\"\"}})]),a._v(\" \"),e(\"h2\",{attrs:{id:\"编写服务\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写服务\"}},[a._v(\"#\")]),a._v(\" 编写服务\")]),a._v(\" \"),e(\"p\",[a._v(\"在完成上述内容后，接下来我们来编写支付的服务。其实大家在掌握之前几篇文章的内容后，我相信编写一个服务对你来说还是轻而易举的事情。\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"定义类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义类型\"}},[a._v(\"#\")]),a._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/graphql/alipay/schema.graphql\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"定义类型\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"p\",[a._v(\"实际情况还是看需求和支付接口的参数来定。其中订单描述不是必须的，订单标题和订单金额是必填的。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"input Pay {\\n  # 订单描述\\n  body: String\\n  # 订单标题\\n  subject: String!\\n  # 订单总金额\\n  total_amount: String!\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"执行逻辑\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#执行逻辑\"}},[a._v(\"#\")]),a._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/graphql/alipay/connector.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"执行逻辑\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"p\",[a._v(\"调用我们之前编写好的逻辑，这就返回的就是支付的跳转链接：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"...\\nexport default class AlipayConnector {\\n  ...\\n  // 这里传递的参数必须要符合我们定义的接口类型\\n  public async pay(data: IApipayData) {\\n    const { ctx } = this;\\n    return await ctx.service.alipay.doPay(data);   // 调用服务\\n  }\\n}\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"数据操作\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据操作\"}},[a._v(\"#\")]),a._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/graphql/alipay/resolver.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"数据操作\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"p\",[a._v(\"基于前面的定义的支付 Schema ，我们可以写出如下的数据操作：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"export default {\\n  Mutation: {\\n    pay(_root: any, { data }, { connector }) {\\n      return connector.alipay.pay(data);\\n    },\\n  },\\n};\\n\\ntype Mutation {\\n  pay(data: Pay) : String!  // 这里我们只返回一个 URL\\n}\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"走一遍流程\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#走一遍流程\"}},[a._v(\"#\")]),a._v(\" 走一遍流程\")]),a._v(\" \"),e(\"p\",[a._v(\"打开我们的开发者工具，输入以下查询：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac86ba834ba4?w=1868&h=655&f=png&s=109272\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"把这个链接复制下来，在浏览器中打开：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac8bc3aa505d?w=1254&h=789&f=png&s=73967\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"选择登陆账户付款，会让你输入账号密码进行支付。这个时候我们打开沙箱环境，左侧有一个沙箱账号。找到买家信息，我们使用这个账号登陆测试，还可以很方便的充值，享受一波消费的快感。\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac90b80a967e?w=1414&h=539&f=png&s=44943\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"在支付成功后，会看到这个页面，大概 3s 左右会跳到你定义的的通知页面：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac95b8807a79?w=1288&h=391&f=png&s=64774\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"接下来打开我之前给大家推荐的 \"),e(\"code\",[a._v(\"RequestBin\")]),a._v(\" 网站，刷新一下会看到：\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac9a32e826ef?w=1880&h=879&f=png&s=142930\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"把 RAW BOOY 完整的复制下来，放到 \"),e(\"code\",[a._v(\"-d''\")]),a._v(\" 中，然后在终端使用 \"),e(\"code\",[a._v(\"curl\")]),a._v(\" 来请求我们的服务器端回调 URL：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"curl -XPOST http://127.0.0.1:7001/alipay/alipayNotify -d'RAW BOOY'\\n\\n\")])])]),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708ac9de5b09e19?w=1199&h=253&f=png&s=163196\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"可以看到我本地获取到了通知。我为什么会有这个呢。这是因为我在项目启动时就开启了 redis 的消息队列，也是为了给方便给大家做演示。\")]),a._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/2/28/1708aca27c55205e?w=1487&h=552&f=png&s=76759\",alt:\"\"}})]),a._v(\" \"),e(\"p\",[a._v(\"怎么在启动时添加我们的一些操作呢，接下来我们来学习一个知识点。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"启动自定义\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#启动自定义\"}},[a._v(\"#\")]),a._v(\" 启动自定义\")]),a._v(\" \"),e(\"p\",[a._v(\"我们常常需要在应用启动期间进行一些 \"),e(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/basics/app-start.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"初始化\"),e(\"OutboundLink\")],1),a._v(\" 工作，等初始化完成后应用才可以启动成功，并开始对外提供服务。\")]),a._v(\" \"),e(\"p\",[a._v(\"框架提供了统一的入口文件（\"),e(\"code\",[a._v(\"app.ts\")]),a._v(\"）进行启动过程自定义，这个文件返回一个 Boot 类，我们可以通过定义 Boot 类中的生命周期方法来执行启动应用过程中的初始化工作。\")]),a._v(\" \"),e(\"p\",[a._v(\"框架提供了这些 \"),e(\"a\",{attrs:{href:\"https://eggjs.org/zh-cn/advanced/loader.html#life-cycles\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"生命周期函数\"),e(\"OutboundLink\")],1),a._v(\"供开发人员处理：\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"配置文件即将加载，这是最后动态修改配置的时机（\"),e(\"code\",[a._v(\"configWillLoad\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"配置文件加载完成（\"),e(\"code\",[a._v(\"configDidLoad\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"文件加载完成（\"),e(\"code\",[a._v(\"didLoad\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"插件启动完毕（\"),e(\"code\",[a._v(\"willReady\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"worker 准备就绪（\"),e(\"code\",[a._v(\"didReady\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"应用启动完成（\"),e(\"code\",[a._v(\"serverDidReady\")]),a._v(\"）\")]),a._v(\" \"),e(\"li\",[a._v(\"应用即将关闭（\"),e(\"code\",[a._v(\"beforeClose\")]),a._v(\"）\")])]),a._v(\" \"),e(\"p\",[a._v(\"我们可以在 \"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e(\"code\",[a._v(\"app.ts\")]),e(\"OutboundLink\")],1),a._v(\" 中定义这个 Boot 类，然后我们在 \"),e(\"code\",[a._v(\"didReady\")]),a._v(\"中启用我们的消息队列：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"import { Application } from 'egg';\\n\\nexport default class AppBootHook {\\n  app: Application;\\n  constructor(app: Application) {\\n    this.app = app;\\n  }\\n \\n  // 应用已经启动完毕\\n  async didReady() {\\n    const ctx = await this.app.createAnonymousContext();\\n    await ctx.service.alipay.paymentRedisPubSub();  // 启动消息队列\\n  }\\n}\\n\\n\\n\")])])]),e(\"p\",[a._v(\"我们来看一下这个方法，\"),e(\"a\",{attrs:{href:\"https://github.com/push-over/egg-example/blob/master/app/service/Redis.ts\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e(\"code\",[a._v(\"Redis\")]),e(\"OutboundLink\")],1),a._v(\" 这个类，因为比较简单，就没有给大家做演示，大家如果有兴趣可以拉取我的源码下来进行查看。\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"public async paymentRedisPubSub() {\\n    const { ctx } = this;\\n    let num = 0;\\n    // tslint:disable-next-line: no-constant-condition\\n    while (true) {\\n      const result = await ctx.service.redis.brpop('payInfo');\\n      num++;\\n      // 处理各种事宜\\n      console.log(num, '==============', result);\\n    }\\n}\\n\\n\")])])]),e(\"p\",[a._v(\"到这，我们的接入支付宝进行支付就结束了，本篇文章主要讲的是 pc 页面进行支付。大家可以尝试接入其他接口测试。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"小结\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[a._v(\"#\")]),a._v(\" 小结\")]),a._v(\" \"),e(\"p\",[a._v(\"本篇文章主要给大家讲解了怎么接入支付宝并进行支付以及怎么在本地接收异步通知。微信也是一样的，只不过那个需要商家账号，无缘给大家做演示。相信大家只要掌握了怎么对接支付宝，微信或者别的对你来说也不是难事。\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}
{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{533:function(n,t,a){\"use strict\";a.r(t);var e=a(42),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"第-12-节-·-基于echarts-的基础表达性统计图表-·-柱状图与饼图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第-12-节-·-基于echarts-的基础表达性统计图表-·-柱状图与饼图\"}},[n._v(\"#\")]),n._v(\" 第 12 节 · 基于ECharts 的基础表达性统计图表 · 柱状图与饼图\")]),n._v(\" \"),a(\"p\",[n._v(\"在上一节中我们学习了 ECharts 的基本使用方法以及如何使用 ECharts 绘制散点图与折线图。散点图主要用于表示多个数据点在一维或二维特征空间中的分布情况，而折线图主要用于表示某一个计量数据在一定的顺序范围内的变化情况。\")]),n._v(\" \"),a(\"p\",[n._v(\"学习了这两种数据可视化图表之后，相信你已经对数据可视化的原理有了一定的认识。数据可视化的出发点永远是数据本身，图表绘制过程中需要通过理解数据所包含的实际意义，并根据需求选择合适的可视化图表。那么，我相信你已经准备好学习接下来更多的数据可视化图表了。\")]),n._v(\" \"),a(\"h2\",{attrs:{id:\"_12-1-柱状图-bar\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-1-柱状图-bar\"}},[n._v(\"#\")]),n._v(\" 12.1 柱状图 Bar\")]),n._v(\" \"),a(\"p\",[n._v(\"在我们日常生活中能看到的数据可视化图表中，柱状图可能会占据着大多数，因为它非常适合用于展示同一量纲下不同计量数据值的区别。比如需要对比某年某市多所高中的本科录取人数、本科率等，柱状图绝对是最适合的选择。\")]),n._v(\" \"),a(\"h3\",{attrs:{id:\"_12-1-1-准备数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-1-1-准备数据\"}},[n._v(\"#\")]),n._v(\" 12.1.1 准备数据\")]),n._v(\" \"),a(\"p\",[n._v(\"柱状图所需要的数据集非常简单，每一个类目对应着一个柱状数据，柱状的高度对应着该类目的计量数据。假设某年某市 4 所高中的本科录取人数以及本科率如下表所示。\")]),n._v(\" \"),a(\"p\",[n._v(\"学校\")]),n._v(\" \"),a(\"p\",[n._v(\"高中 A\")]),n._v(\" \"),a(\"p\",[n._v(\"高中 B\")]),n._v(\" \"),a(\"p\",[n._v(\"高中 C\")]),n._v(\" \"),a(\"p\",[n._v(\"高中 D\")]),n._v(\" \"),a(\"p\",[n._v(\"本科录取人数\")]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=N_A\",alt:\"N_A\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=N_B\",alt:\"N_B\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=N_C\",alt:\"N_C\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=N_D\",alt:\"N_D\"}})]),n._v(\" \"),a(\"p\",[n._v(\"本科率\")]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=P_A\",alt:\"P_A\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=P_B\",alt:\"P_B\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=P_C\",alt:\"P_C\"}})]),n._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=P_D\",alt:\"P_D\"}})]),n._v(\" \"),a(\"p\",[n._v(\"其中，我们假设数列 \"),a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=N\",alt:\"N\"}}),n._v(\" 中的每一个元素都为大于 1000 小于 1500 的随机数，而数列 \"),a(\"img\",{attrs:{src:\"https://juejin.im/equation?tex=P\",alt:\"P\"}}),n._v(\" 中的元素则为大于 0.85 小于 1 的随机数。同样，我们使用 JavaScript 生成一个符合这些约束的数据集，以便于学习。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const N = []\\nconst P = []\\nconst n = 4\\n\\nfunction getRandomInt(min, max) {\\n  return Math.round(min + Math.random() * (max - min))\\n}\\n\\nfor (let i = 0; i < n; ++i) {\\n  N.push(getRandomInt(1000, 1500))\\n  P.push(getRandomInt(85, 100) / 100)\\n}\\n\\nconsole.log(N) //=> [ 1395, 1318, 1447, 1437 ]\\nconsole.log(P) //=> [ 0.96, 0.89, 0.98, 0.99 ]\\n\\n\")])])]),a(\"p\",[n._v(\"得到了两个数列之后，还需要将它们整合起来成为一个 ECharts 可用的行式数据集。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const schools = []\\n\\nfor (let i = 0; i < n; ++i) {\\n  schools.push({\\n    name: String.fromCharCode(65 + i),\\n    N: N[i],\\n    P: P[i]\\n  })\\n}\\n\\nconsole.log(schools) //=> [ { name: 'A', N: 1395, P: 0.96 }, ... ]\\n\\n\")])])]),a(\"h3\",{attrs:{id:\"_12-1-2-绘制柱状图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-1-2-绘制柱状图\"}},[n._v(\"#\")]),n._v(\" 12.1.2 绘制柱状图\")]),n._v(\" \"),a(\"p\",[n._v(\"我们还是继续使用上一节中设计好的图表配置进行修改，首先将 \"),a(\"code\",[n._v(\"dataset.source\")]),n._v(\" 改成我们现在需要用的 \"),a(\"code\",[n._v(\"schools\")]),n._v(\" 学校数据集。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  dataset: {\\n    source: schools\\n  }\\n}\\n\\n\")])])]),a(\"p\",[n._v(\"然后将 \"),a(\"code\",[n._v(\"series\")]),n._v(\" 中的 \"),a(\"code\",[n._v(\"type\")]),n._v(\" 改成目前我们需要使用的柱状图 \"),a(\"code\",[n._v(\"bar\")]),n._v(\"，并同时修改 \"),a(\"code\",[n._v(\"encode\")]),n._v(\" 中的维度绑定以符合我们新的数据集。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  series: {\\n    type: 'bar',\\n    encode: {\\n      x: 'name',\\n      y: 'N'\\n    }\\n  }\\n}\\n\\n\")])])]),a(\"p\",[n._v(\"最后得到完整的图表配置项，将其应用到 ECharts 实例中查看效果。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  dataset: {\\n    source: schools\\n  },\\n  xAxis: {\\n    type: 'category'\\n  },\\n  yAxis: {\\n    type: 'value'\\n  },\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      }\\n    }\\n  ]\\n}\\n\\nmyChart.setOption(option)\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/28/164df2fd8440161a?w=600&h=400&f=png&s=16131\",alt:\"bar-chart-1\"}})]),n._v(\" \"),a(\"p\",[n._v(\"由此可见，我们在使用 ECharts 的时候，只需要关注如何组织数据、如何选择可视化图表类型便可以在一定程度上得到所需要的数据图表。\")]),n._v(\" \"),a(\"h3\",{attrs:{id:\"_12-1-3-优化图表\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-1-3-优化图表\"}},[n._v(\"#\")]),n._v(\" 12.1.3 优化图表\")]),n._v(\" \"),a(\"p\",[n._v(\"在日常生活中柱状图应该会是我们使用频率最多的一种数据可视化图表类型，而在平常所看到的柱状图中除了柱状图本身以外，还有很多辅助元素供图表阅读者更好地理解数据。接下来就来为我们所创建的柱状图表添加一些元素来进行优化，使得这个图表更加完善和直观。\")]),n._v(\" \"),a(\"p\",[a(\"strong\",[n._v(\"添加数据标签\")])]),n._v(\" \"),a(\"p\",[n._v(\"在上面的图表中，虽然左侧有 Y 坐标轴提供数值指示的功能，但因为 Y 坐标轴所能标识的数值有限，而柱状图本身也并不具备标明精确数值的功能，所以我们需要添加数据标签以准确指明数值。\")]),n._v(\" \"),a(\"p\",[n._v(\"在 \"),a(\"code\",[n._v(\"bar\")]),n._v(\" 数据系列中添加一个 \"),a(\"code\",[n._v(\"label\")]),n._v(\" 配置，以显示一个数值标签。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      }\\n    }\\n  ]\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/30/164eb68364b10877?w=600&h=400&f=png&s=18792\",alt:\"bar-chart-2\"}})]),n._v(\" \"),a(\"p\",[a(\"strong\",[n._v(\"添加平均值辅助线\")])]),n._v(\" \"),a(\"p\",[n._v(\"除了对数值进行标识之外，对于标识不同分类数值的柱状图来说，通常还需要向读者传递一些统计信息，比如该数值的平均值等。在 ECharts 中为图表添加这些信息可以用到 \"),a(\"code\",[n._v(\"markLine\")]),n._v(\" 组件来添加带数值的辅助线。\")]),n._v(\" \"),a(\"p\",[n._v(\"比如我们需要为某一个柱状图数据系列添加一个表示均值的辅助线，可以如下修改配置项。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          { type: 'average', name: '平均值' }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/30/164eb683669a5eb4?w=600&h=400&f=png&s=20252\",alt:\"bar-chart-3\"}})]),n._v(\" \"),a(\"p\",[n._v(\"可以看到已经有一条横向的虚线表示了该柱状图数据序列的平均值，但因为这条线的颜色与柱状图的颜色相同，视觉效果上并不如意。所以我们可以为这条线加一些样式，使其与柱状图相区分开来。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          {\\n            type: 'average',\\n            name: '平均值',\\n            lineStyle: {\\n              color: '#ffa39e'\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/30/164eb6837de1ddff?w=600&h=400&f=png&s=19751\",alt:\"bar-chart-4\"}})]),n._v(\" \"),a(\"h3\",{attrs:{id:\"_12-1-4-绘制多个数据系列\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-1-4-绘制多个数据系列\"}},[n._v(\"#\")]),n._v(\" 12.1.4 绘制多个数据系列\")]),n._v(\" \"),a(\"p\",[n._v(\"我们在准备数据的时候，除了每一个学校的本科录取人数以外，还有该学校的本科率。而上面我们所绘制的图表中只使用到了一个数据系列来表示本科录取人数，所以我们接下来为了让可视化图表更好地表达我们所准备的数据内容，需要将本科率也展示在图表上。\")]),n._v(\" \"),a(\"p\",[n._v(\"我们可以首先在 \"),a(\"code\",[n._v(\"series\")]),n._v(\" 配置中添加一个新的 \"),a(\"code\",[n._v(\"bar\")]),n._v(\" 数据系列，并将数据绑定 \"),a(\"code\",[n._v(\"encode.y\")]),n._v(\" 改为 \"),a(\"code\",[n._v(\"P\")]),n._v(\" 即各学校的本科率。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          {\\n            type: 'average',\\n            name: '平均值',\\n            lineStyle: {\\n              color: '#ffa39e'\\n            }\\n          }\\n        ]\\n      }\\n    },\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'P'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          {\\n            type: 'average',\\n            name: '平均值',\\n            lineStyle: {\\n              color: '#096dd9'\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/30/164eb68368169972?w=600&h=400&f=png&s=23375\",alt:\"bar-chart-5\"}})]),n._v(\" \"),a(\"p\",[n._v(\"为什么并没有看到另外一个柱状图？这是因为本科录取人数的数据范围在 1000 到 1500 之间，而本科率的范围则在 0 到 1 之间，而且量纲也相异。所以我们需要借助其他辅助手段对图表进行优化。\")]),n._v(\" \"),a(\"p\",[n._v(\"虽然说我们比较常用的坐标轴为笛卡尔坐标系也就是直角坐标系，只有一个 X 坐标轴和一个 Y 坐标轴。但若需要将不同量纲的数据在同一个数据图表中展示，就可以使用多个不同的 Y 坐标轴表示。\")]),n._v(\" \"),a(\"p\",[n._v(\"我们需要在 \"),a(\"code\",[n._v(\"yAxis\")]),n._v(\" 上添加一个新的 Y 坐标轴，然后把本科率的数据系列绑定到这个坐标轴上。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  yAxis: [\\n    {\\n      type: 'value',\\n      name: '本科录取人数'\\n    },\\n    {\\n      type: 'value',\\n      name: '本科率'\\n    }\\n  ],\\n  series: [\\n    {\\n      type: 'bar',\\n      encode: {\\n        x: 'id',\\n        y: 'N'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          {\\n            type: 'average',\\n            name: '平均值',\\n            lineStyle: {\\n              color: '#ffa39e'\\n            }\\n          }\\n        ]\\n      }\\n    },\\n    {\\n      type: 'bar',\\n      yAxisIndex: 1, // 绑定副 Y 坐标轴\\n      encode: {\\n        x: 'id',\\n        y: 'P'\\n      },\\n      label: {\\n        normal: {\\n          show: true,\\n\\n          position: 'top'\\n        }\\n      },\\n      markLine: {\\n        data: [\\n          {\\n            type: 'average',\\n            name: '平均值',\\n            lineStyle: {\\n              color: '#096dd9'\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/7/30/164eb68377785366?w=600&h=400&f=png&s=30784\",alt:\"bar-chart-6\"}})]),n._v(\" \"),a(\"h2\",{attrs:{id:\"_12-2-饼图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-2-饼图\"}},[n._v(\"#\")]),n._v(\" 12.2 饼图\")]),n._v(\" \"),a(\"p\",[n._v(\"我们知道柱状图可以用于展示不同组别的数值数据的大小，而饼图的作用则是将不同组别的数值数据合并在同一个数轴上，并以更直观的方式展示不同组别之间的大小关系。\")]),n._v(\" \"),a(\"h3\",{attrs:{id:\"_12-2-1-绘制基本饼图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-2-1-绘制基本饼图\"}},[n._v(\"#\")]),n._v(\" 12.2.1 绘制基本饼图\")]),n._v(\" \"),a(\"p\",[n._v(\"同样是通过修改数据系列的类型为 \"),a(\"code\",[n._v(\"pie\")]),n._v(\"，然后更改数据绑定 \"),a(\"code\",[n._v(\"encode\")]),n._v(\" 中的维度信息。因为饼状图并不需要使用到直角坐标系，所以我们这里可以将前面一直都有使用到的 \"),a(\"code\",[n._v(\"xAxis\")]),n._v(\" 和 \"),a(\"code\",[n._v(\"yAxis\")]),n._v(\" 删除。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  dataset: {\\n    source: schools\\n  },\\n  series: {\\n    type: 'pie',\\n    encode: {\\n      itemName: 'name',\\n      value: 'N'\\n    }\\n  }\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/3/164fda5368832041?w=600&h=400&f=png&s=18748\",alt:\"pie-chart-1\"}})]),n._v(\" \"),a(\"h3\",{attrs:{id:\"_12-2-2-添加数据标签\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_12-2-2-添加数据标签\"}},[n._v(\"#\")]),n._v(\" 12.2.2 添加数据标签\")]),n._v(\" \"),a(\"p\",[n._v(\"与柱状图相同，这个饼图虽然已经能够比较直观地表达出不同组别之间数据的大小关系，但是却无法直观地表达准确的数据值。所以我们也需要为饼图添加数据标签以表明准确的数值数据。\")]),n._v(\" \"),a(\"p\",[n._v(\"可以通过修改 ECharts 中饼图的 \"),a(\"code\",[n._v(\"label\")]),n._v(\" 也就是标签，来显示每一个组别的组别名、准确数值及其百分比。在 \"),a(\"code\",[n._v(\"label.formatter\")]),n._v(\" 中添加 \"),a(\"code\",[n._v(\"{@name}\")]),n._v(\" 以显示组别名（维度 \"),a(\"code\",[n._v(\"name\")]),n._v(\"），添加 \"),a(\"code\",[n._v(\"{@N}\")]),n._v(\" 以显示每一个学校的本科录取人数，以及内置的变量 \"),a(\"code\",[n._v(\"{d}\")]),n._v(\" 以显示每一个学校的百分比。\")]),n._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[n._v(\"const option = {\\n  dataset: {\\n    source: schools\\n  },\\n  series: {\\n    type: 'pie',\\n    label: {\\n      formatter: '{@name}: {@N} ({d}%)'\\n    },\\n    encode: {\\n      value: 'N',\\n      itemName: 'name'\\n    }\\n  }\\n}\\n\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/8/3/164fda5368a0616f?w=600&h=400&f=png&s=26799\",alt:\"pie-chart-2\"}})]),n._v(\" \"),a(\"h2\",{attrs:{id:\"小结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[n._v(\"#\")]),n._v(\" 小结\")]),n._v(\" \"),a(\"p\",[n._v(\"在这一节中我们学习了另外两种简单的数据图表——柱状图和饼图的使用，至此我们已经学习了 4 种基本的数据图表类型，这已经足够我们将它们使用到 90% 以上的数据可视化任务中了。但这其实还不够，我们还需要学习一些更为复杂的数据图表类型，以将它们相互组合完成更多样化的需求。\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}
{"remainingRequest":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/liuyusheng/StudyDocuments/vuepress-starter/docs/react-hooks /6 - 推荐模块1  打造酷炫轮播及列表.md?vue&type=template&id=2820cd0d&","dependencies":[{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/docs/react-hooks /6 - 推荐模块1  打造酷炫轮播及列表.md","mtime":1592464824000},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1611639389731},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1608521194453},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1611639389731},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1608521194453},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":1611639389082}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJibG9ja3F1b3RlIiwgWwogICAgICAgIF9jKCJwIiwgW192bS5fdigi5pys6IqC5Luj56CB5a+55bqUIEdpdEh1YiDliIbmlK86IGNoYXB0ZXIzIildKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cHM6Ly9naXRodWIuY29tL3Nhbnl1YW4wNzA0L3JlYWN0LWNsb3VkLW11c2ljL3RyZWUvY2hhcHRlcjMiLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIuS7k+W6k+S8oOmAgemXqCIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAi5LiA44CB6L2u5pKt57uE5Lu25byA5Y+RIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiPkuIDjgIHova7mkq3nu4Tku7blvIDlj5EiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiDkuIDjgIHova7mkq3nu4Tku7blvIDlj5EiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICLnjrDlnKjmnaXlvIDlj5EgcmVjb21tZW5kIOe7hOS7tu+8jOmmluWFiOi/m+WFpeWIsCBzcmMg55uu5b2V5LiLIGFwcGxpY2F0aW9uL1JlY29tbWVuZC9pbmRleC5qcyDkuK06IgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2xpZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2xpZGVyJztcblxuZnVuY3Rpb24gUmVjb21tZW5kICgpIHtcblxuICAvL21vY2sg5pWw5o2uXG4gIGNvbnN0IGJhbm5lckxpc3QgPSBbMSwyLDMsNF0ubWFwIChpdGVtID0+IHtcbiAgICByZXR1cm4geyBpbWFnZVVybDogXCJodHRwOi8vcDEubXVzaWMuMTI2Lm5ldC9aWUxKMm9abjc0eVV6NXg4TkJHa1ZBPT0vMTA5OTUxMTY0MzMxMjE5MDU2LmpwZ1wiIH1cbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPFNsaWRlciBiYW5uZXJMaXN0PXtiYW5uZXJMaXN0fT48L1NsaWRlcj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vIChSZWNvbW1lbmQpO1xuXG4iCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigi546w5Zyo5bCx5Y+v5Lul552A5omL57yW5YaZIHNsaWRlciDnu4Tku7bnmoTlhbfkvZPlhoXlrrnkuobjgILpppblhYjlronoo4XkuIDkuKrmj5Lku7Y6IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigibnBtIGluc3RhbGwgc3dpcGVyIC0tc2F2ZVxuXG4iKV0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgW192bS5fdigi5o6l5LiL5p2l77yM5ZyoIHNsaWRlci9pbmRleC5qcyDkuK3vvJoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICcvL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LmpzXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCdyZWFjdFwnO1xuaW1wb3J0IHsgU2xpZGVyQ29udGFpbmVyIH0gZnJvbSBcJy4vc3R5bGVcJztcbmltcG9ydCAic3dpcGVyL2Nzcy9zd2lwZXIuY3NzIjtcbmltcG9ydCBTd2lwZXIgZnJvbSAic3dpcGVyIjtcblxuZnVuY3Rpb24gU2xpZGVyIChwcm9wcykge1xuICBjb25zdCBbc2xpZGVyU3dpcGVyLCBzZXRTbGlkZXJTd2lwZXJdID0gdXNlU3RhdGUgKG51bGwpO1xuICBjb25zdCB7IGJhbm5lckxpc3QgfSA9IHByb3BzO1xuXG4gIHVzZUVmZmVjdCAoKCkgPT4ge1xuICAgIGlmIChiYW5uZXJMaXN0Lmxlbmd0aCAmJiAhc2xpZGVyU3dpcGVyKXtcbiAgICAgICAgbGV0IG5ld1NsaWRlclN3aXBlciA9IG5ldyBTd2lwZXIoIi5zbGlkZXItY29udGFpbmVyIiwge1xuICAgICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgICAgYXV0b3BsYXk6IHtcbiAgICAgICAgICAgIGRlbGF5OiAzMDAwLFxuICAgICAgICAgICAgZGlzYWJsZU9uSW50ZXJhY3Rpb246IGZhbHNlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgcGFnaW5hdGlvbjoge2VsOlwnLnN3aXBlci1wYWdpbmF0aW9uXCd9LFxuICAgICAgICB9KTtcbiAgICAgICAgc2V0U2xpZGVyU3dpcGVyKG5ld1NsaWRlclN3aXBlcik7XG4gICAgfVxuICB9LCBbYmFubmVyTGlzdC5sZW5ndGgsIHNsaWRlclN3aXBlcl0pO1xuICBcbiAgcmV0dXJuIChcbiAgICA8U2xpZGVyQ29udGFpbmVyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9InNsaWRlci1jb250YWluZXIiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ic3dpcGVyLXdyYXBwZXIiPlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJhbm5lckxpc3QubWFwIChzbGlkZXIgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzd2lwZXItc2xpZGUiIGtleT17c2xpZGVyLmltYWdlVXJsfT5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJzbGlkZXItbmF2Ij5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3NsaWRlci5pbWFnZVVybH0gd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgYWx0PSLmjqjojZAiIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9InN3aXBlci1wYWdpbmF0aW9uIj48L2Rpdj5cbiAgICAgIDwvZGl2PiBcbiAgICA8L1NsaWRlckNvbnRhaW5lcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbyAoU2xpZGVyKTtcblxuJwogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIuWvueW6lOeahCBzdHlsZS5qcyDmlofku7Y6IildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiaW1wb3J0IHN0eWxlZCBmcm9tJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBzdHlsZSBmcm9tICcuLi8uLi9hc3NldHMvZ2xvYmFsLXN0eWxlJztcblxuZXhwb3J0IGNvbnN0IFNsaWRlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgLmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDYwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAke3N0eWxlIFtcInRoZW1lLWNvbG9yXCJdfTtcbiAgfVxuICAuc2xpZGVyLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiA5OCU7XG4gICAgaGVpZ2h0OiAxNjBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgLnNsaWRlci1uYXYge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xuICAgICAgYmFja2dyb3VuZDogJHtzdHlsZSBbXCJ0aGVtZS1jb2xvclwiXX07XG4gICAgfVxuICB9XG5gXG5cblxuIgogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIueOsOWcqOaJk+W8gOmhtemdouWPr+S7peeci+WIsOi/meS4quaViOaenDoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAiaHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS8xMC8xOC8xNmRkZGVlNzA5NjU5YWNiP3c9Mzc1Jmg9MjU0JmY9anBlZyZzPTIxNzIxIiwKICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIui9ruaSreeahOWKn+iDveW3sue7j+WFt+Wkh++8jOS9huaYr+i/meS4quaViOaenOW5tuS4jeaYr+aIkeS7rOaDs+imgeeahO+8jOaIkeS7rOW4jOacm+Wug+aYr+S4pOi+ueW5tuS4jeaYr+WujOWFqOepuueZve+8jOiAjOaYr+acieS4gOmDqOWIhue6ouiJsuWBmuihrOaJmO+8jOWmguWbvjoiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgImh0dHBzOi8vdXNlci1nb2xkLWNkbi54aXR1LmlvLzIwMTkvMTAvMTgvMTZkZGRlZTkyNWQzM2IzOD93PTM3MyZoPTI2MyZmPWpwZWcmcz0yMTkzMCIsCiAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICLov5nkuKrmlYjmnpzlpoLkvZXmnaXlrp7njrDvvJ/lpoLmnpzor7TljZXnuq/ljrvlop7liqAgSG9tZSDnu4Tku7bnmoTpq5jluqbvvIzpgqPkuYjlhbbku5bnmoTnu4Tku7blubbkuI3pnIDopoHkuIvpnaLnmoTov5nkupvnuqLoibLog4zmma/vvIzmmL7nhLbkuI3lkIjpgILvvIzmiJHku6zlj6rog73lnKggc2xpZGVyIOe7hOS7tuS4iuWBmuS4gOS6m+aJi+iEmuOAgiDmiJHku6zlnKggU2xpZGVyQ29udGFpbmVyIOagh+etvuWGheaWsOW7uuS4gOS4qiBkaXY6IgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdignPGRpdiBjbGFzc05hbWU9ImJlZm9yZSI+PC9kaXY+XG5cbicpXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIuagt+W8j+W3sue7j+WGmeWcqOS4iumdoueahCBzdHlsZS5qcyDkuK3kuobvvIzlpKflrrblj6/ku6Xnv7vliLDkuIrpnaLnnIvnnIvvvIzov5jmmK/mr5TovoMgdHJpY2t5IOeahOS4gOS4quaTjeS9nO+8jOebuOW9k+S6juWPpuWkluWBmuS6huS4gOWxgumBrue9qe+8jOaIkeS7rOS5i+WQjuW8gOWPkeatjOaJi+ivpuaDhemhteWQjOagt+S8mueUqOWIsOi/meS4quaWueazleOAgiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgxIiwgeyBhdHRyczogeyBpZDogIuS6jOOAgeaOqOiNkOWIl+ihqOW8gOWPkSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIj5LqM44CB5o6o6I2Q5YiX6KGo5byA5Y+RIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIg5LqM44CB5o6o6I2Q5YiX6KGo5byA5Y+RIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIummluWFiOWcqCByZWNvbW1lbmQg57uE5Lu25LitOiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2xpZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2xpZGVyJztcbmltcG9ydCBSZWNvbW1lbmRMaXN0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGlzdCc7XG5cbmZ1bmN0aW9uIFJlY29tbWVuZCAoKSB7XG5cbiAgLy9tb2NrIOaVsOaNrlxuICBjb25zdCBiYW5uZXJMaXN0ID0gWzEsMiwzLDRdLm1hcCAoaXRlbSA9PiB7XG4gICAgcmV0dXJuIHsgaW1hZ2VVcmw6IFwiaHR0cDovL3AxLm11c2ljLjEyNi5uZXQvWllMSjJvWm43NHlVejV4OE5CR2tWQT09LzEwOTk1MTE2NDMzMTIxOTA1Ni5qcGdcIiB9XG4gIH0pO1xuXG4gIGNvbnN0IHJlY29tbWVuZExpc3QgPSBbMSwyLDMsNCw1LDYsNyw4LDksMTBdLm1hcCAoaXRlbSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiAxLFxuICAgICAgcGljVXJsOiBcImh0dHBzOi8vcDEubXVzaWMuMTI2Lm5ldC9maG1lZmpVZk1ELThxdGozSktlSGJBPT0vMTg5OTk1NjA5Mjg1Mzc1MzMuanBnXCIsXG4gICAgICBwbGF5Q291bnQ6IDE3MTcxMTIyLFxuICAgICAgbmFtZTogXCLmnLTmoJHjgIHorrjlt43jgIHmnY7lgaXjgIHpg5HpkqfjgIHogIHni7zjgIHotbXpm7dcIlxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPFNsaWRlciBiYW5uZXJMaXN0PXtiYW5uZXJMaXN0fT48L1NsaWRlcj5cbiAgICAgIDxSZWNvbW1lbmRMaXN0IHJlY29tbWVuZExpc3Q9e3JlY29tbWVuZExpc3R9PjwvUmVjb21tZW5kTGlzdD4gXG4gICAgPC9kaXY+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbyAoUmVjb21tZW5kKTtcblxuIgogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIueOsOWcqOadpeW8gOWPkSBsaXN0IOi/meS4que7hOS7tu+8jOmmluWFiOWxleekuiBET00g57uT5p6E77yMIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAnaW1wb3J0IFJlYWN0IGZyb20gXCdyZWFjdFwnO1xuaW1wb3J0IHsgXG4gIExpc3RXcmFwcGVyLFxuICBMaXN0SXRlbSxcbiAgTGlzdFxufSBmcm9tIFwnLi9zdHlsZVwnO1xuXG5mdW5jdGlvbiBSZWNvbW1lbmRMaXN0IChwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxMaXN0V3JhcHBlcj5cbiAgICAgIDxoMSBjbGFzc05hbWU9InRpdGxlIj4g5o6o6I2Q5q2M5Y2VIDwvaDE+XG4gICAgICA8TGlzdD5cbiAgICAgICAge1xuICAgICAgICAgIHByb3BzLnJlY29tbWVuZExpc3QubWFwICgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxMaXN0SXRlbSBrZXk9e2l0ZW0uaWQgKyBpbmRleH0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImltZ193cmFwcGVyIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJkZWNvcmF0ZSI+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHsvKiDliqDmraTlj4LmlbDlj6/ku6Xlh4/lsI/or7fmsYLnmoTlm77niYfotYTmupDlpKflsI8gKi99XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtpdGVtLnBpY1VybCArICI/cGFyYW09MzAweDMwMCJ9IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIGFsdD0ibXVzaWMiLz5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJwbGF5X2NvdW50Ij5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPSJpY29uZm9udCBwbGF5Ij4mI3hlODg1OzwvaT5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJjb3VudCI+e2dldENvdW50IChpdGVtLnBsYXlDb3VudCl9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImRlc2MiPntpdGVtLm5hbWV9PC9kaXY+XG4gICAgICAgICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgICAgICApXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgPC9MaXN0PlxuICAgIDwvTGlzdFdyYXBwZXI+XG4gICk7XG4gIH1cbiBcbmV4cG9ydCBkZWZhdWx0IFJlYWN0Lm1lbW8gKFJlY29tbWVuZExpc3QpO1xuXG4nCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICLov5nph4zpnIDopoHmj5DphpLlpKflrrbkuIDkuIvvvIxnZXRDb3VudCDmmK/kuIDkuKrlt6Xlhbfnsbvlh73mlbDvvIzkuI7miJHku6znmoTkuJrliqHlip/og73lhbPns7vkuI3lpKfvvIzmiJHku6zmiorlroPmlL7liLDkuJPpl6jnmoTnm67lvZXkuIvljrvnvJblhpnvvJoiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAnLy8g5aSn5a625oyJ54Wn6L+Z5Liq55uu5b2V5bGC57qn5paw5bu65paH5Lu2XG4vL3NyYy9hcGkvdXRpbHMuanNcbmV4cG9ydCBjb25zdCBnZXRDb3VudCA9IChjb3VudCkgPT4ge1xuICBpZiAoY291bnQgPCAwKSByZXR1cm47XG4gIGlmIChjb3VudCA8IDEwMDAwKSB7XG4gICAgcmV0dXJuIGNvdW50O1xuICB9IGVsc2UgaWYgKE1hdGguZmxvb3IgKGNvdW50IC8gMTAwMDApIDwgMTAwMDApIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vciAoY291bnQvMTAwMCkvMTAgKyAi5LiHIjtcbiAgfSBlbHNlICB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IgKGNvdW50IC8gMTAwMDAwMDApLyAxMCArICLkur8iO1xuICB9XG59XG5cbicKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIuWImuaJjeeahCBsaXN0L2luZGV4LmpzIOS4reW5tuayoeacieW8leWFpei/meS4quWHveaVsO+8jOeOsOWcqOmcgOimgeWKoOS4gOihjOW8leWFpeS7o+eggToiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdignaW1wb3J0IHsgZ2V0Q291bnQgfSBmcm9tICIuLi8uLi9hcGkvdXRpbHMiO1xuXG4nKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCLmoLflvI/pg6jliIbnmoQganMg5Luj56CB5aaC5LiLOiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgJ2ltcG9ydCBzdHlsZWQgZnJvbVwnc3R5bGVkLWNvbXBvbmVudHNcJztcbmltcG9ydCBzdHlsZSBmcm9tIFwnLi4vLi4vYXNzZXRzL2dsb2JhbC1zdHlsZVwnO1xuXG5leHBvcnQgY29uc3QgTGlzdFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC50aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gIH1cbmA7XG5leHBvcnQgY29uc3QgTGlzdCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuYDtcblxuZXhwb3J0IGNvbnN0IExpc3RJdGVtID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMzIlO1xuXG4gIC5pbWdfd3JhcHBlciB7XG4gICAgLmRlY29yYXRlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50IChoc2xhICgwLDAlLDQzJSwuNCksaHNsYSAoMCwwJSwxMDAlLDApKTtcbiAgICB9XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICAucGxheV9jb3VudCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMnB4O1xuICAgICAgdG9wOiAycHg7XG4gICAgICBmb250LXNpemU6ICR7c3R5bGUgWyJmb250LXNpemUtcyJdfTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xuICAgICAgY29sb3I6ICR7c3R5bGUgWyJmb250LWNvbG9yLWxpZ2h0Il19O1xuICAgICAgLnBsYXkge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgfVxuICAgIH1cbiAgICBpbWcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgfVxuICB9XG4gIC5kZXNjIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtYXJnaW4tdG9wOiAycHg7XG4gICAgICBwYWRkaW5nOiAwIDJweDtcbiAgICAgIGhlaWdodDogNTBweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBmb250LXNpemU6ICR7c3R5bGUgWyJmb250LXNpemUtcyJdfTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICBjb2xvcjogJHtzdHlsZSBbImZvbnQtY29sb3ItZGVzYyJdfTtcbiAgICB9XG5gO1xuXG4nCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgW192bS5fdigi5YC85b6X5YWz5rOo55qE5piv77yaIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCc8ZGl2IGNsYXNzTmFtZT0iZGVjb3JhdGUiPjwvZGl2PlxuXG4nKV0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgW192bS5fdigi5LiK6Z2iIHN0eWxlLmpzIOS4reWvueW6lOagt+W8jzoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtdGV4dCIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICIuZGVjb3JhdGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzVweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoaHNsYSgwLDAlLDQzJSwuNCksaHNsYSgwLDAlLDEwMCUsMCkpO1xufVxuXG4iCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICLov5nkuKrmoIfnrb7nmoTmoLflvI/vvIzlroPnmoTkvZznlKjlsLHmmK/nu5nlm77niYfkuIrnmoTlm77moIflkozmloflrZfmj5DkvpvkuIDkuKrpga7nvanvvIzlm6DkuLrlnKjlrZfkvZPpopzoibLmmK/nmb3oibLvvIzlnKjpnaLlr7nnmb3oibLlm77niYfog4zmma/nmoTml7blgJnvvIzmloflrZfkvJrnnIvkuI3muIXmiJbogIXnnIvkuI3liLDvvIzlm6DmraTmj5DkvpvkuIDkuKrpmLTlvbHmnaXooazmiZjlh7rmloflrZfvvIzov5nkuKrnu4boioLlvojlrrnmmJPooqvlv73nlaXvvIzluIzmnJvlpKflrrbkuZ/og73ms6jmhI/kuIDkuIvjgIIiCiAgICAgICAgKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}
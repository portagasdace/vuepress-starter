{"remainingRequest":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/liuyusheng/StudyDocuments/vuepress-starter/docs/python/9 - 进阶篇 4：官方源码剖析与 API 详解.md?vue&type=template&id=338f1d5b&","dependencies":[{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/docs/python/9 - 进阶篇 4：官方源码剖析与 API 详解.md","mtime":1592465254000},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1611639389731},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1608521194453},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1611639389731},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1608521194453},{"path":"/Users/liuyusheng/StudyDocuments/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":1611639389082}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}